{"version":3,"sources":["www/serviceWorker.js","www/helpers.js","www/pages/sheets/snippets/StatusTag.jsx","www/pages/sheets/ListInvoicesSheet.jsx","www/pages/sheets/ListReportsSheet.jsx","www/pages/sheets/Dashboard.jsx","www/pages/sheets/ViewInvoiceSheet.jsx","www/pages/sheets/ViewReportSheet.jsx","www/pages/sheets/SheetRoutes.jsx","www/pages/auth/Login.jsx","www/pages/auth/AuthRoutes.jsx","www/index.js"],"names":["Boolean","window","location","hostname","match","backend_api_url","concat","protocol","API_URL","apiCall","route","data","callback","token","loadingCallbackState","navigate","axios","post","headers","Authorization","then","catch","error","ReportError","axios_response","notif","console","log","response","status","message","description","notification","raw","Array","isArray","forEach","element","statusText","getDateObject","seconds","t","Date","setSeconds","getStatusColor","color","reportVerbose","report_type","dict","balance.summary.1","balance_change_from_activity.summary.1","balance_change_from_activity.itemized.3","payouts.summary.1","payouts.itemized.3","payout_reconciliation.summary.1","payout_reconciliation.itemized.5","ending_balance_reconciliation.summary.1","hasOwnProperty","replaceAll","StatusTag","_ref","faint","react_default","a","createElement","tag","style","opacity","toUpperCase","hdate","require","changeStatus","new_status","invoice_id","auth_token","fetchInvoices","changeLabel","actionsMenu","menu","items","key","label","react_router_dom","to","es_button","type","icon","LayoutOutlined","block","children","onClick","danger","RollbackOutlined","e","onChange","pagination","filters","sorter","extra","ListInvoicesSheet","authHeader","useAuthHeader","useNavigate","_useState","useState","_useState2","Object","slicedToArray","invoices","setInvoices","_useState3","_useState4","loading","setLoading","r","row","index","created_verbose","prettyPrint","created","showTime","columns","title","dataIndex","align","render","amount","invoice","getSymbolFromCurrency","currency","Math","round","amount_due","printAmount","metadata_marked_status","metadata","marked_status","snippets_StatusTag","text","value","onFilter","record","custom_status","dropdown","arrow","overlay","placement","space","DownOutlined","useEffect","className","table","dataSource","ListReportsSheet","reports","setReports","size","report","commaNumber","result","parameters","interval_start","interval_end","colSpan","report_id","BookOutlined","disabled","MinusCircleOutlined","id","RangePicker","DatePicker","Dashboard","carousel_ref","useRef","yesterday","setYesterday","yesterday_statistic","setYesterday_statistic","_useState5","_useState6","yesterday_type_amount","setYesterday_type_amount","_useState7","_useState8","lastWeek","setLastWeek","_useState9","_useState10","lastWeek_statistic","setLastWeek_statistic","_useState11","_useState12","lastWeek_type_amount","setLastWeek_type_amount","_useState13","_useState14","lastMonth","setLastMonth","_useState15","_useState16","lastMonth_statistic","setLastMonth_statistic","_useState17","_useState18","lastMonth_type_amount","setLastMonth_type_amount","_useState19","_useState20","lastYear","setLastYear","_useState21","_useState22","lastYear_statistic","setLastYear_statistic","_useState23","_useState24","lastYear_type_amount","setLastYear_type_amount","_useState25","_useState26","dates","setDates","_useState27","_useState28","customAggregateData","setCustomAggregateData","_useState29","_useState30","aggregateDataType","setAggregateDataType","getYesterdayStatsData","getLastWeekStatsData","getLastMonthStatsData","getLastYearStatsData","moment","subtract","start","startOf","unix","end","endOf","count","el","date","setHours","_id","hour","total_amount","format","amount_avg","length","count_avg","fetchYesteday","last_week","year","month","day","fetchLastWeek","last_month","fetchLastMonth","last_year","fetchLastYear","annotationLineStyles","stroke","lineDash","lineWidth","gradientFill","fill","yesterday_config_1","xField","yField","annotations","position","content","offsetY","textBaseline","meta","alias","formatter","substring","xAxis","tickCount","smooth","areaStyle","yesterday_config_2","lastWeek_config_1","lastWeek_config_2","lastMonth_config_1","lastMonth_config_2","lastYear_config_1","lastYear_config_2","minHeight","onCalendarChange","fetchCustomDateRangeData","AreaChartOutlined","shape","es_row","col","span","onMouseOver","current","goTo","gutter","justify","statistic","prefix","DollarOutlined","PlusCircleFilled","display","flexFlow","justifyContent","alignItems","segmented","options","val","Fragment","components_area","assign","carousel","ref","dotPosition","autoplaySpeed","cols","o","price","s","replace","txt","charAt","substr","toLowerCase","ViewInvoiceSheet","useParams","setInvoice","setItems","lines","customer_name","split","number","relativeTime","due_date","marginTop","marginRight","skeleton","active","account_name","customer_email","customer_address","customer_phone","divider","ViewReportSheet","setReport","downloadLink","setDownloadLink","setData","setCols","file_id","link","call","curr","push","target","href","CloudDownloadOutlined","SheetRoutes","auth_user","useAuthUser","signOutFunction","useSignOut","collapsed","setCollapsed","user","setUser","toggleSideBar","layout_default","affix","theme","backgroundColor","mode","Item","marginLeft","LogoutOutlined","Sider_default","trigger","onMouseEnter","onMouseLeave","collapsible","permissions","access_reports","isAdmin","UserOutlined","react_router","path","sheets_Dashboard","sheets_ListInvoicesSheet","sheets_ViewInvoiceSheet","sheets_ListReportsSheet","sheets_ViewReportSheet","Login","login_email","setLogin_email","login_password","setLogin_password","register_email","setRegister_email","register_password","setRegister_password","register_password_confirm","setRegister_password_confirm","login_errors","setLogin_errors","register_errors","setRegister_errors","signIn","useSignIn","index_module","paused","height","amplitude","speed","points","bottom","top","zIndex","tabs","tabPosition","TabPane","tab","direction","textDecoration","input","placeholder","LockOutlined","map","es_alert","ExclamationCircleOutlined","showIcon","fontSize","errors","email","password","expiresIn","tokenType","authState","tryLogin","LoginOutlined","tryRegister","UserAddOutlined","AuthRoutes","pages_auth_Login","ReactDOM","index_modern","authType","authName","cookieDomain","cookieSecure","loginPath","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b8e98ed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { notification } from 'antd';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport { useAuthHeader } from 'react-auth-kit';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useSignOut } from 'react-auth-kit';\n\n\n// export const API_URL = `${window.location.protocol}//${window.location.hostname}:${process.env.PORT || 3000}`;\n\nlet backend_api_url = `${window.location.protocol}//${window.location.hostname}`;\nif(window.location.hostname == \"localhost\") backend_api_url += \":3000\";\n\nexport const API_URL = backend_api_url;\nexport const apiCall = (route, data, callback, token, loadingCallbackState, navigate) => {\n    axios.post(API_URL + route, data, (token ? { headers : { Authorization : token } } : {})).then(callback).catch(error => {ReportError(error, navigate); if(loadingCallbackState) loadingCallbackState(false)});\n}\n\nexport const ReportError = (axios_response, navigate) => {\n\n    let notif = {\n        \n    }\n    \n    console.log(\"CAUGHT API CALL ERROR : \", axios_response);\n    if(axios_response.response.status === 403){\n        notif.message = \"Your Session has timed out.\";\n        notif.description = \"Please sign in again to continue.\";\n        notification['error'](notif);\n\n        navigate(\"/\")\n\n        return;\n        \n    }\n\n    notif = {\n        message : \"There was an error.\",\n    };\n    if(!axios_response.response){\n\n        if(axios_response.data){\n\n        }\n        notification['error']({\n            message : \"There was an error.\",\n            description : (axios_response.message ? axios_response.message : axios_response)\n        })\n\n        return;\n    }\n    const response = axios_response.response;\n\n    if(response.data){\n        if(response.data.raw && response.data.raw.message) notif.description = response.data.raw.message;\n        else if(response.data.error && response.data.error.message) notif.description = response.data.error.message;\n        \n        else if(typeof response.data.error === \"string\") notif.description = response.data.error;\n        else if(Array.isArray(response.data.error)){\n            response.data.error.forEach(element => {\n                notif.description += element + '.'\n            });\n        }\n        else if(response.data.message) notif.description = response.data.message;\n        else if(response.message) notif.description = response.message;\n    }\n\n    if(!notif.description) notif.description = axios_response.response.statusText;\n    notification['error'](notif);\n}\n\nexport const getDateObject = (seconds) => {\n    var t = new Date(1970, 0, 1); // Epoch\n    t.setSeconds(seconds);\n    return t;\n}\n\nexport const getStatusColor = (status) => {\n    let color = false;\n    switch (status) {\n        case 'paid':\n            color = 'green';\n            break;\n    \n        case 'invoiced_in_error':\n            color = 'volcano';\n            break;\n    \n        case 'waiver':\n            color = 'geekblue';\n            break;\n    \n        case 'voucher':\n            color = 'geekblue';\n            break;\n    \n        case 'refund':\n            color = 'orange';\n            break;\n    \n        case 'uncollectible':\n            color = 'magenta';\n            break;\n    \n        case 'open':\n            color = 'cyan';\n            break;\n    \n        default:\n            break;\n    }\n    \n    return color;\n}\n\nexport const printAmount = (invoice) => {\n    return `${getSymbolFromCurrency(invoice.currency)}${Math.round(invoice.amount_due/100)}`;\n}\n\nexport const HaltIfNotPermitted = (event) => {\n\n}\n\nexport const reportVerbose = (report_type) => {\n    const dict = {\n        \"balance.summary.1\" : \"Balance - Summary\",\n        \"balance_change_from_activity.summary.1\" : \"Balance change from activity - Summary\",\n        \"balance_change_from_activity.itemized.3\" : \"Balance change from activity - Itemized\",\n        \"payouts.summary.1\" : \"Payouts - Summary\",\n        \"payouts.itemized.3\" : \"Payouts - Itemized\",\n        \"payout_reconciliation.summary.1\" : \"Payout reconciliation - Summary\",\n        \"payout_reconciliation.itemized.5\" : \"Payout reconciliation - Itemized\",\n        \"ending_balance_reconciliation.summary.1\" : \"Ending balance reconciliation - Summary\",\n    }\n\n    if(dict.hasOwnProperty(report_type)) return dict[report_type];\n\n    report_type = report_type.replaceAll('.', ' ');\n    report_type = report_type.replaceAll('_', ' ');\n\n    return report_type;\n\n}","import { Tag } from 'antd';\nimport React, { Component } from 'react'\nimport { getStatusColor } from '../../../helpers';\n\n\nconst StatusTag = ({status,faint}) => {\n\n    return (\n        <Tag style={{opacity : (faint ? '0.4' : '1')}} color={getStatusColor((status))}>{status ? status.toUpperCase() : \"None\"}</Tag>\n    )\n}\n\nexport default StatusTag;","import React, { useState, useEffect } from 'react'\nimport { Button, Dropdown, Menu, Space, Table, Tag } from \"antd\"\nimport { DownOutlined, LayoutOutlined, RightCircleOutlined, RollbackOutlined, SmileOutlined } from '@ant-design/icons';\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError } from '../../helpers';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport StatusTag from './snippets/StatusTag';\nimport { useAuthHeader } from 'react-auth-kit';\n\nconst hdate = require(\"human-date\");\n\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/label/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst actionsMenu = (invoice_id, auth_token, fetchInvoices, navigate) => {\n    \n    \n    return (\n\n        <Menu \n            items={[\n                {\n                    key : 1,\n                    label : (\n                        <NavLink to={\"/sheet/invoice/view/\" + invoice_id}>\n                            <Button type='dashed' icon={<LayoutOutlined/>} block >View Invoice</Button>\n                        </NavLink>\n                    ),\n\n                },\n                {\n                    key : 2,\n                    label : 'Mark Invoice',\n                    children : [\n                        {\n                            key : '2.1',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"paid\", invoice_id, auth_token, fetchInvoices, navigate)}>Paid</Button>\n                            )\n                        },\n                        {\n                            key : '2.2',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices, navigate)}>Invoiced in error</Button>\n                            )\n                        },\n                        {\n                            key : '2.3',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"waiver\", invoice_id, auth_token, fetchInvoices, navigate)}>Waiver</Button>\n                            )\n                        },\n                        {\n                            key : '2.4',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"voucher\", invoice_id, auth_token, fetchInvoices, navigate)}>Voucher</Button>\n                            )\n                        },\n                        {\n                            key : '2.5',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"refund\", invoice_id, auth_token, fetchInvoices, navigate)}>Refund</Button>\n                            )\n                        },\n                        {\n                            key : '2.6',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)}>Uncollectible</Button>\n                            )\n                        },\n                    ]\n                },\n                {\n                    key : 3,\n                    label : 'Change Status',\n                    children : [\n                        {\n                            key : '3.1',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"paid\", invoice_id, auth_token, fetchInvoices, navigate)}>Paid</Button>\n                            )\n                        },\n                        {\n                            key : '3.2',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices, navigate)}>Invoiced in error</Button>\n                            )\n                        },\n                        {\n                            key : '3.3',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"waiver\", invoice_id, auth_token, fetchInvoices, navigate)}>Waiver</Button>\n                            )\n                        },\n                        {\n                            key : '3.4',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"voucher\", invoice_id, auth_token, fetchInvoices, navigate)}>Voucher</Button>\n                            )\n                        },\n                        {\n                            key : '3.5',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"refund\", invoice_id, auth_token, fetchInvoices, navigate)}>Refund</Button>\n                            )\n                        },\n                        {\n                            key : '3.6',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)}>Uncollectible</Button>\n                            )\n                        },\n                    ]\n                },\n                {\n                    key : 4,\n                    label : (\n                            <Button type='primary' danger icon={<RollbackOutlined/>} block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)} >Refund</Button>\n                    )\n                },\n            ]}\n\n            onClick={(e) => console.log(e)}\n        />\n    )\n}\n\n\n\n\nconst onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n\n\nconst ListInvoicesSheet =  () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n    \n    const [invoices, setInvoices] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const fetchInvoices = () => {\n        setLoading(true);\n        apiCall(\"/invoices/list\", {}, (r) => {\n    \n            let invoices = r.data.data.data;\n            // console.log(Array.isArray(invoices))\n            invoices.forEach((row, index) => {\n                row.created_verbose = hdate.prettyPrint(getDateObject(row.created), { showTime : true });\n                row.key = index;\n            })\n            setLoading(false);\n            setInvoices(invoices);\n        }, authHeader(), setLoading, navigate)\n        \n    }\n\n    const columns = [\n        // Offering\n        {\n            title : \"Offering\",\n            dataIndex : \"account_name\",\n            key : \"account_name\"\n        },\n        // Email\n        {\n            title : \"Email\",\n            dataIndex : \"customer_email\",\n            key : \"customer_email\"\n        },\n        // Amount\n        {\n            title : \"Amount\",\n            dataIndex : \"amount_due\",\n            key : \"amount_due\",\n            align : \"center\",\n            render : (amount, invoice) => {\n                return ( \n                    <span>{printAmount(invoice)}</span>\n                )\n            }\n        },\n        // Marked for Status\n        {\n            title : \"Marked for\",\n            dataIndex : \"metadata.marked_status\",\n            key : \"marked_status\",\n            align : \"center\",\n            render : (metadata_marked_status, invoice) => {\n                \n                if(invoice.metadata.marked_status){\n                    return <StatusTag faint status={invoice.metadata.marked_status}/>\n                }\n            },\n            filters : [\n                {\n                    text : 'Draft',\n                    value : 'draft'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'invoiced_in_error'\n                },\n                {\n                    text : 'Waiver',\n                    value : 'waiver'\n                },\n                {\n                    text : 'Voucher',\n                    value : 'voucher'\n                },\n                {\n                    text : 'Refund',\n                    value : 'refund'\n                },\n                {\n                    text : 'Uncollectible',\n                    value : 'uncollectible'\n                },\n                {\n                    text : \"Open\",\n                    value : \"open\"\n                },\n                {\n                    text : \"Paid\",\n                    value : \"paid\"\n                }\n            ],\n            onFilter: (value, record) => record.status === value,\n        },\n        // Current Status\n        {\n            title : \"Current status\",\n            dataIndex : \"status\",\n            key : \"status\",\n            align : \"center\",\n            render : (status, invoice) => <StatusTag status={invoice.metadata.hasOwnProperty(\"custom_status\") ? invoice.metadata.custom_status : status}/>,\n            filters : [\n                {\n                    text : 'Draft',\n                    value : 'draft'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'invoiced_in_error'\n                },\n                {\n                    text : 'Waiver',\n                    value : 'waiver'\n                },\n                {\n                    text : 'Voucher',\n                    value : 'voucher'\n                },\n                {\n                    text : 'Refund',\n                    value : 'refund'\n                },\n                {\n                    text : 'Uncollectible',\n                    value : 'uncollectible'\n                },\n                {\n                    text : \"Open\",\n                    value : \"open\"\n                },\n                {\n                    text : \"Paid\",\n                    value : \"paid\"\n                }\n            ],\n            onFilter: (value, record) => record.status === value,\n        },\n        {\n            title : \"Created\",\n            dataIndex : \"created_verbose\",\n            key : \"created_verbose\"\n        },\n        {\n            title : \"Action\",\n            dataIndex : \"id\",\n            key : \"action\",\n            render : (invoice_id) => {\n                return (\n                    <Dropdown\n                    arrow={false}\n                    overlay={actionsMenu(invoice_id, authHeader(), fetchInvoices, navigate)}\n                    placement=\"bottomRight\"\n                >\n                    <Button >\n                        <Space>\n                        Actions\n                        <DownOutlined/>\n                        </Space>\n                    </Button>\n                </Dropdown>\n                )\n            }\n        }\n    ]\n\n    \n\n    useEffect(() => {\n        \n        fetchInvoices();\n      \n    }, [])\n    \n    return (\n        <div className='sheet'>\n            <Space/>\n            <h2>Invoices </h2>\n            \n            <Table loading={loading} dataSource={invoices} columns={columns} onChange={onChange} />\n            \n        </div>\n    )\n}\n\nexport default ListInvoicesSheet","import React, { useState, useEffect } from 'react'\nimport { Button, Dropdown, Menu, Space, Table, Tag } from \"antd\"\nimport { BookOutlined, MinusCircleOutlined} from '@ant-design/icons';\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError, reportVerbose } from '../../helpers';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport StatusTag from './snippets/StatusTag';\nimport { useAuthHeader } from 'react-auth-kit';\nimport commaNumber from 'comma-number';\n\nconst hdate = require(\"human-date\");\n\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/label/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\n\n\n\nconst onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n\n\nconst ListReportsSheet =  () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n    \n    const [reports, setReports] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const fetchReports = () => {\n        setLoading(true);\n        apiCall(\"/reports/list\", {}, (r) => {\n    \n            const reports = r.data.data.data;\n            reports.forEach(r => {\n                r.key = r.id\n            });\n\n            setReports(reports);\n            setLoading(false);\n        }, authHeader(), setLoading, navigate)\n        \n    }\n\n    const columns = [\n        // Report Category\n        {\n            title : \"Report Category\",\n            dataIndex : \"report_type\",\n            key : \"report_type\",\n            render : (report_type) => {\n                return reportVerbose(report_type);\n            }\n        },\n        // Size\n        {\n            title : \"Size\",\n            dataIndex : \"size\",\n            key : \"size\",\n            render : (size, report) => commaNumber(report.result.size) + \" KB\"\n        },\n        // Created\n        {\n            title : \"Created\",\n            dataIndex : \"created\",\n            key : \"created\",\n            render : (created) => hdate.prettyPrint(getDateObject(created))\n        },\n        {\n            title : \"Interval\",\n            dataIndex : \"parameters\",\n            key : \"parameters\",\n            render : (parameters) => {\n              return `${hdate.prettyPrint(getDateObject(parameters.interval_start))} to ${hdate.prettyPrint(getDateObject(parameters.interval_end))}.`;\n            }\n        },\n        \n        {\n            title : \"Action\",\n            dataIndex : \"id\",\n            key : \"action\",\n            colSpan : 2,\n            render : (report_id, report) => {\n\n                if(report.status == 'succeeded') return (\n                    <NavLink to={\"/sheet/report/view/\" + report_id}>\n                        <Button type='primary' icon={<BookOutlined />} block >View Report</Button>\n                    </NavLink>\n                )\n                else return (\n                    <Button disabled type=\"primary\" icon={<MinusCircleOutlined/>} block >Report {report.status}</Button>\n                )\n            }\n        }\n    ]\n\n    \n\n    useEffect(() => {\n        \n        fetchReports();\n      \n    }, [])\n    \n    return (\n        <div className='sheet'>\n            <Space/>\n            <h1>Reports </h1>\n            \n            <Table loading={loading} dataSource={reports} columns={columns} onChange={onChange} />\n            \n        </div>\n    )\n}\n\n\n\nexport default ListReportsSheet","import { AreaChartOutlined, DollarOutlined, PlusCircleFilled } from '@ant-design/icons';\nimport { Carousel, Col, DatePicker, Row, Segmented, Statistic, Button, Space, notification } from 'antd';\nimport { Area, Line } from \"@ant-design/charts\";\nimport { apiCall } from '../../helpers';\nimport \"./styles/Dashboard.css\"\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useAuthHeader } from 'react-auth-kit';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\n\nconst { RangePicker } = DatePicker\n\nconst commaNumber = require('comma-number')\n\nconst dummyStateData = 36000;\nconst dummyStateDataSmall = 36;\n\nconst Dashboard = () => {\n\n    const carousel_ref = useRef();\n\n    const [yesterday, setYesterday] = useState([]);\n    const [yesterday_statistic, setYesterday_statistic] = useState(false);\n    const [yesterday_type_amount, setYesterday_type_amount] = useState(true);\n\n    const [lastWeek, setLastWeek] = useState([]);\n    const [lastWeek_statistic, setLastWeek_statistic] = useState(false);\n    const [lastWeek_type_amount, setLastWeek_type_amount] = useState(true);\n\n    const [lastMonth, setLastMonth] = useState([]);\n    const [lastMonth_statistic, setLastMonth_statistic] = useState(false);\n    const [lastMonth_type_amount, setLastMonth_type_amount] = useState(true);\n\n    const [lastYear, setLastYear] = useState([]);\n    const [lastYear_statistic, setLastYear_statistic] = useState(false);\n    const [lastYear_type_amount, setLastYear_type_amount] = useState(true);\n\n    const [dates, setDates] = useState([]);\n    const [customAggregateData, setCustomAggregateData] = useState(false);\n    const [aggregateDataType, setAggregateDataType] = useState(true)\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    const fetchCustomDateRangeData = () => {\n        if(dates.length < 2){\n            return notification['warning']({\n                title : \"Create Dashboard\",\n                description : \"Please select start and end dates.\"\n            });\n        }\n\n        console.log(dates[0].format(), dates[1].format())\n\n        const start = dates[0].unix();\n        const end = dates[1].unix();\n\n        apiCall('/reports/dashboard/custom', {start, end}, (response) => {\n\n            const data = response.data.data;\n\n          \n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                delete el._id\n            });\n\n            console.log(\"CUSTOM AGGREGATE DATA\", data);\n\n            setCustomAggregateData(data);\n\n        }, authHeader(), null, navigate);\n\n\n        \n    }\n\n    const fetchYesteday = () => {\n\n        let yesterday = moment().subtract(1, \"day\");\n        let start = yesterday.startOf(\"day\").unix();\n        let end = yesterday.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/day\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n                \n                const date = new Date();\n                date.setHours(el._id.hour);\n\n                el.total_amount /= 100;\n\n                el.hour = moment(date).format(\"hh a\");\n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n            setYesterday_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"YESTERDAY AGGREGATE DATA\", data);\n            setYesterday(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastWeek = () => {\n\n        let last_week = moment().subtract(1, \"week\");\n        let start = last_week.startOf(\"day\").unix();\n        let end = last_week.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            console.log(data)\n\n            setLastWeek_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST WEEK AGGREGATE DATA\", data);\n\n            setLastWeek(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastYear = () => {\n\n        let last_year = moment().subtract(1, \"month\");\n        let start = last_year.startOf(\"day\").unix();\n        let end = last_year.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/year\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}`;\n                \n                el.total_amount /= 100;\n\n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            \n\n            setLastYear_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST YEAR AGGREGATE DATA\", data);\n\n            setLastYear(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastMonth = () => {\n\n        let last_month = moment().subtract(1, \"month\");\n        let start = last_month.startOf(\"day\").unix();\n        let end = last_month.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            console.log(data)\n\n            setLastMonth_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST MONTH AGGREGATE DATA\", data);\n\n            setLastMonth(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const getYesterdayStatsData = (key) => {\n        if(yesterday_statistic) return yesterday_statistic[key];\n        else return 0;\n    }\n\n    const getLastWeekStatsData = (key) => {\n        if(lastWeek_statistic) return lastWeek_statistic[key];\n        else return 0;\n    }\n\n    const getLastMonthStatsData = (key) => {\n        if(lastMonth_statistic) return lastMonth_statistic[key];\n        else return 0;\n    }\n\n    const getLastYearStatsData = (key) => {\n        if(lastYear_statistic) return lastYear_statistic[key];\n        else return 0;\n    }\n\n\n    useEffect(() => {\n        fetchYesteday();\n        fetchLastWeek();\n        fetchLastMonth();\n        fetchLastYear();\n    }, [])\n\n    const annotationLineStyles = {\n        stroke : \"rgb(80, 80, 80)\",\n        lineDash : [10, 5],\n        lineWidth : 2,\n        opacity : 0.75\n    };\n\n    const gradientFill = {\n        fill: 'l(270) 0:#af7bb4b2 1:#165481ad',\n    };\n\n    const yesterday_config_1 = {\n        xField: 'hour',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getYesterdayStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getYesterdayStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getYesterdayStatsData(\"amount_avg\")],\n                end : ['max', getYesterdayStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            hour : {\n                alias : \"Time\",\n                formatter : (hour) => {\n                    \n                    if(hour[0] == '0') return hour.substring(1);\n                    return hour;\n                },\n            },\n            total_amount : {\n                alias : \"Amount\",\n                formatter : (amount) => {\n                    return `$ ${commaNumber(amount)}`\n                }\n            }\n        },\n        xAxis : {\n            tickCount : 24,\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n    \n\n    const yesterday_config_2 = {\n        xField: 'hour',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getYesterdayStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getYesterdayStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getYesterdayStatsData(\"count_avg\")],\n                end : ['max', getYesterdayStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            hour : {\n                alias : \"Time\",\n                formatter : (hour) => {\n                    \n                    if(hour[0] == '0') return hour.substring(1);\n                    return hour;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        xAxis : {\n            tickCount : 24,\n        },\n        smooth : true\n    };\n\n    const lastWeek_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastWeekStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastWeekStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastWeekStatsData(\"amount_avg\")],\n                end : ['max', getLastWeekStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, Do MMMM\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastWeek_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastWeekStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastWeekStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastWeekStatsData(\"count_avg\")],\n                end : ['max', getLastWeekStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, DD MMMM\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastMonth_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastMonthStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastMonthStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastMonthStatsData(\"amount_avg\")],\n                end : ['max', getLastMonthStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastMonth_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastMonthStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastMonthStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastMonthStatsData(\"count_avg\")],\n                end : ['max', getLastMonthStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastYear_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastYearStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastYearStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastYearStatsData(\"amount_avg\")],\n                end : ['max', getLastYearStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    const mdate = moment(date, 'YYYY/M').format(\"Do MMM, YYYY (ddd)\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastYear_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastYearStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastYearStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastYearStatsData(\"count_avg\")],\n                end : ['max', getLastYearStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    const mdate = moment(date, 'YYYY/M').format(\"MMMM d, YYYY (dddd)\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n\n    return (\n        <div className=\" statistic-wrapper sheet\" style={{minHeight : \"90vh\"}}>\n\n<div className=\"sheet menu range-picker\">\n                <h3>Show for a Custom Time Range</h3>\n                <Space>\n                    <RangePicker onCalendarChange={(dates) => {if(dates.length) setDates(dates)}} />\n                    <Button onClick={() => fetchCustomDateRangeData()} icon={<AreaChartOutlined />} shape=\"round\" type=\"primary\">Get data</Button>\n                </Space>\n            </div>\n\n            {!customAggregateData && \n            \n            <Row>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Yesterday</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(0)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!yesterday_statistic} title='Amount' prefix={<DollarOutlined/>} value={yesterday_statistic && commaNumber(yesterday_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!yesterday_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={yesterday_statistic && commaNumber(yesterday_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Week</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(1)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastWeek_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastWeek_statistic && commaNumber(lastWeek_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastWeek_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastWeek_statistic && commaNumber(lastWeek_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Month</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(2)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastMonth_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastMonth_statistic && commaNumber(lastMonth_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastMonth_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastMonth_statistic && commaNumber(lastMonth_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Yar</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(3)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastYear_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastYear_statistic && commaNumber(lastYear_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastYear_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastYear_statistic && commaNumber(lastYear_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n        </Row>    \n\n            }\n\n            \n            \n            {customAggregateData && \n                <div className=\"sheet\">\n                    <div style={{display : \"flex\", flexFlow : \"row\", justifyContent : \"space-between\", alignItems : \"center\"}}>\n                        { dates.length == 2 && <h2>Viewing Data from {dates[0].format(\"Do MMMM, YYYY\")} to {dates[1].format(\"Do MMMM, YYYY\")}</h2> }\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setAggregateDataType(val === \"Amount\")} />\n                    </div>\n                {aggregateDataType ? \n                    \n                    <>\n                        <h3>Amount vs Date</h3>\n                        <div className=\"chart-wrapper\">\n                            <Area data={customAggregateData} {...lastMonth_config_1}></Area>\n                        </div>\n                    </>\n                : \n                    <>\n                        <h3>Invoice Count vs Date</h3>\n                        <div className=\"chart-wrapper\">\n                            <Area data={customAggregateData} {...lastMonth_config_2}></Area>\n                        </div>\n                    </>\n                }\n                </div>\n            }\n            <div className=\"sheet\">\n                \n                <Carousel ref={ref => carousel_ref.current = ref} dotPosition='top' autoplaySpeed={5000}>\n\n                {/* YESTERDAY'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Yesterday's Hourly Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setYesterday_type_amount(val === \"Amount\")} />\n                    </div>\n                    {yesterday_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Hour</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={yesterday} {...yesterday_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Hour</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={yesterday} {...yesterday_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST WEEK'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Weeks's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastWeek_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastWeek_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastWeek} {...lastWeek_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastWeek} {...lastWeek_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                </div>\n\n                {/* LAST MONTH'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Month's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastMonth_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastMonth_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastMonth} {...lastMonth_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastMonth} {...lastMonth_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST YEAR'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Year's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastYear_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastYear_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastYear} {...lastYear_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastYear} {...lastYear_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n                    \n                </Carousel>\n            </div>\n            \n        </div>\n    )\n}\n\n\n\nexport default Dashboard;","import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { apiCall, getDateObject } from '../../helpers';\nimport gradient from 'random-gradient';\nimport \"./styles/ViewInvoiceSheet.css\"\nimport { Col, Divider, Tag, Row, Button, Table, Skeleton } from 'antd';\nimport StatusTag from './snippets/StatusTag';\nimport { RollbackOutlined } from '@ant-design/icons';\nimport { useAuthHeader } from 'react-auth-kit';\n\nconst getSymbolFromCurrency = require('currency-symbol-map')\nconst hdate = require(\"human-date\");\n\nfunction toTitleCase(str) {\n    return str.replace(\n      /\\w\\S*/g,\n      function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n    );\n  }\n\nconst cols = [\n    {\n        title : \"No.\",\n        dataIndex : \"dummy\",\n        key : \"dummy\",\n        render : (t, o, index) => {\n            return index + 1;\n        }\n    },\n    {\n        title : \"Description\",\n        dataIndex : \"description\",\n        key : \"description\"\n    },\n    {\n        title : \"Type\",\n        dataIndex : \"price\",\n        render : (price) => {\n            let s = toTitleCase(price.type);\n            s = s.replaceAll('_', ' ');\n            return s;\n        },\n        key : \"type\"\n    },\n    {\n        title : \"Quantity\",\n        dataIndex : \"quantity\",\n        key : \"quantity\"\n    },\n    {\n        title : \"Amount\",\n        dataIndex : \"amount\",\n        key : \"amount\",\n        render : (amount, invoice) => {\n            \n          return getSymbolFromCurrency(invoice.currency) + Math.round(amount/100);\n        }\n    }\n]\n\nconst ViewInvoiceSheet = () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    let { invoice_id } = useParams();\n    const [invoice, setInvoice] = useState({});\n    const [items, setItems] = useState([]);\n    \n    useEffect(() => {\n      \n        apiCall(\"/invoices/retrieve\", {invoice_id}, (response) => {\n            const invoice = response.data.data;\n            // console.log(invoice_id, bg)\n\n\n            setInvoice(invoice);\n            setItems(invoice.lines.data);\n        }, authHeader(), null, navigate);\n    }, [])\n    \n\n    return (\n        <div className='sheet'>\n            <div className='sheet envelope no-margin' >\n                {invoice.id ?\n                    <>\n                        <div>\n                            <h1>{(invoice.customer_name) ? `${invoice.customer_name.split(\" \")[0]}'s Invoice` : \"Invoice\"} </h1>\n                            <h3>{invoice.number} for {getSymbolFromCurrency(invoice.currency) + invoice.amount_due}  </h3>\n                            <h3>Due in {hdate.relativeTime(getDateObject(invoice.due_date))}.  </h3>\n                        </div>\n                        <div className='envelope-sub'>\n                            <div className=\"row\">\n                                <div>Invoice ID :</div>\n                                <div><Tag >{invoice.id}</Tag></div>\n                            </div>\n                            <div className=\"row\">\n                                <div>Charge Date : </div>\n                                <div><Tag >{hdate.prettyPrint(getDateObject(invoice.created), { showTime : true })}</Tag></div>\n                            </div>\n                            <div className=\"row\" style={{marginTop : '1.2em', display : 'flex', justifyContent : 'flex-end', marginRight : '0.2em'}}>\n                                <Button size='huge' type='primary' danger icon={<RollbackOutlined/>} >Refund</Button>\n                            </div>\n                        </div>\n                    </>\n                    :\n                    <Skeleton active />\n                }\n            </div>\n            {invoice.id ?\n            \n            <div className=\"sheet no-margin invoice-container\">\n                <Row gutter={16}>\n                    <Col span={8}>\n                        <h2>From</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        <h3>{invoice.account_name}</h3>\n\n                    </Col>\n                    <Col span={8}>\n                        <h2>To</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        {invoice.customer_name && <h4>Name : {invoice.customer_name}</h4>}\n                        {invoice.customer_email && <h4>Email : {invoice.customer_email}</h4>}\n                        {invoice.customer_address && <h4>Address : {invoice.customer_address}</h4>}\n                        {invoice.customer_phone && <h4>Phone : {invoice.customer_phone}</h4>}\n                    </Col>\n                    <Col span={8}>\n                        <h2>Details</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        <h4>Invoice total : {getSymbolFromCurrency(invoice.currency)}{Math.round(invoice.amount_due/100)}</h4>\n                        <h4>Status : <StatusTag status={invoice.status}/></h4>\n\n                    </Col>\n                </Row>\n\n                <Divider/>\n                <Table columns={cols} dataSource={items} />\n            </div>\n                :\n            <Skeleton active />\n            }\n            <Divider/>\n        </div>\n    )\n}\n\n\n\nexport default ViewInvoiceSheet;","import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { apiCall, getDateObject, reportVerbose } from '../../helpers';\nimport \"./styles/ViewInvoiceSheet.css\"\nimport { Col, Divider, Tag, Row, Button, Table, Skeleton } from 'antd';\nimport { useAuthHeader } from 'react-auth-kit';\nimport { CloudDownloadOutlined, RollbackOutlined } from '@ant-design/icons';\n\nconst getSymbolFromCurrency = require('currency-symbol-map')\nconst hdate = require(\"human-date\");\n\nfunction toTitleCase(str) {\n    return str.replace(\n      /\\w\\S*/g,\n      function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n    );\n}\n\nconst ViewReportSheet = () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    let { report_id } = useParams();\n    const [report, setReport] = useState({});\n    const [downloadLink, setDownloadLink] = useState(false);\n    const [data, setData] = useState([]);\n    const [cols, setCols] = useState([]);\n    \n    useEffect(() => {\n        apiCall(\"/reports/retrieve\", {report_id}, (response) => {\n            const report = response.data.data;\n\n            console.log(report);\n            setReport(report);\n\n\n            apiCall(\"/reports/file\", {file_id : report.result.id}, (response) => {\n                const data = response.data.data;\n                const content = data.content;\n                const link = data.link;\n                setDownloadLink(link);\n                // Create and set columns\n                let columns = [];\n\n                for (const key in content[0]) {\n                    if (Object.hasOwnProperty.call(content[0], key)) {\n\n                        if(key == \"category\") continue;\n                        const curr = {\n                            dataIndex : key,\n                            key : key\n                        };\n                        let title = key.replaceAll('_', ' ');\n                        curr.title = toTitleCase(title);\n                        columns.push(curr);\n                        \n                    }\n                }\n\n                setCols(columns);\n                setData(content);\n\n                \n\n            }, authHeader(), null, navigate);\n        }, authHeader(), null, navigate);\n    }, [])\n    \n\n    return (\n        <div className='sheet'>\n            <div className='sheet envelope no-margin' >\n                {report.id ?\n                    <>\n                        <div>\n                            <h1>{report ? reportVerbose(report.report_type) : \"Report\"} </h1>\n                            {report && <h3>From <u>{hdate.prettyPrint(getDateObject(report.parameters.interval_start))}</u> to <u>{hdate.prettyPrint(getDateObject(report.parameters.interval_end))}.</u></h3>}\n                        </div>\n                        <div className='envelope-sub'>\n                            <div className=\"row\">\n                                <div>Report ID :</div>\n                                <div><Tag >{report.id}</Tag></div>\n                            </div>\n                            <div className=\"row\">\n                                <div>Created On : </div>\n                                <div><Tag >{hdate.prettyPrint(getDateObject(report.created), { showTime : true })}</Tag></div>\n                            </div>\n                            <div className=\"row\" style={{marginTop : '1.2em', display : 'flex', justifyContent : 'flex-end', marginRight : '0.2em'}}>\n                                <Button target=\"blank\" href={downloadLink} disabled={!downloadLink} size='huge' type='primary' icon={<CloudDownloadOutlined/>} shape=\"round\" >Download CSV</Button>\n                            </div>\n                        </div>\n                    </>\n                \n                    :\n                    <Skeleton active />\n                }\n            </div>\n            {data && \n                    <div className='sheet no-margin invoice-container'>\n                        <Table loading={data.length == 0} columns={cols} dataSource={data} pagination={false} />\n                    </div>\n            }\n\n        </div>\n    )\n}\n\n\n\nexport default ViewReportSheet;","import React, {useState, useEffect} from 'react'\nimport { AreaChartOutlined, BookOutlined, LayoutOutlined, LogoutOutlined, UserOutlined } from '@ant-design/icons';\nimport { Affix, Button, Menu } from 'antd';\nimport Layout from 'antd/lib/layout/layout';\nimport Sider from 'antd/lib/layout/Sider';\nimport { useAuthUser, useSignOut } from 'react-auth-kit';\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { MenuItem } from 'semantic-ui-react';\nimport { ListInvoicesSheet, ListReportsSheet } from '.';\nimport Dashboard from './Dashboard';\nimport ViewInvoiceSheet from './ViewInvoiceSheet';\nimport ViewReportSheet from './ViewReportSheet';\n\n\nfunction getItem(label, key, icon, items) {\n    return {\n      key,\n      icon,\n      items,\n      label,\n    };\n  }\n  \n\n  \n\nexport default () => {\n\n    const navigate = useNavigate();\n    const auth_user = useAuthUser();\n    const signOutFunction = useSignOut();\n\n    const [collapsed, setCollapsed] = useState(true);\n    const [user, setUser] = useState({});\n\n\n    const signOut = () => {\n        signOutFunction();\n        navigate(\"/\");\n    }\n\n    const toggleSideBar = () => {\n        setCollapsed(!collapsed);\n    }\n\n    // Check user permissions and display Sidebar menu accordingly.\n    useEffect(() => {\n        \n        setUser(auth_user());\n    }, [])\n    \n\n\n    return (\n        <Layout style={{minHeight : '100vh'}}>\n            <Affix> \n                <Menu className='menubar' theme=\"dark\" style={{backgroundColor : \"red !important\"}} mode='horizontal'>\n\n                    <Menu.Item onClick={signOut} style={{marginLeft : \"auto\"}} icon={<LogoutOutlined/>}>\n                        Sign Out\n                    </Menu.Item>\n                    {/* <Menu.SubMenu style={{marginLeft : \"auto\"}} title={<Button icon={<LogoutOutlined />}>Sign Out</Button>}>\n                    \n                    </Menu.SubMenu> */}\n                </Menu>\n            </Affix>\n            <Layout>\n            <Sider trigger={null} onMouseEnter={toggleSideBar} onMouseLeave={toggleSideBar} collapsible collapsed={collapsed}>\n                <Menu\n                theme=\"dark\"\n                mode=\"inline\"\n                // items={items}\n                >\n                    <Menu.Item key={0}  icon={<AreaChartOutlined className='sidebar-icon' />}>\n                        <Link to=\"/sheet\">\n                            {!collapsed && \"Dashboard\"}\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key={1}  icon={<LayoutOutlined className='sidebar-icon' />}>\n                        <Link to=\"/sheet/invoice/list\">\n                            {!collapsed && \"Access Invoices\"}\n                        </Link>\n                    </Menu.Item>\n                    {(user.permissions && user.permissions.access_reports) || true && \n                        <Menu.Item key={2}  icon={<BookOutlined className='sidebar-icon' />}>\n                            <Link to=\"/sheet/report/list\">\n                                {!collapsed && \"Check Reports\"}\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {user.isAdmin || true && \n                        <Menu.Item key={3}  icon={<UserOutlined className='sidebar-icon' />}>\n                            <Link to=\"/sheet/users/list\">\n                                {!collapsed && \"Manage Users\"}\n                            </Link>\n                        </Menu.Item>\n                    }\n                </Menu>\n            </Sider>\n            <Layout>\n            <Routes>\n                <Route path=\"\" element={<Dashboard/>} />\n                <Route path=\"invoice/list\" element={<ListInvoicesSheet/>} />\n                <Route path=\"invoice/view/:invoice_id\" element={<ViewInvoiceSheet/>} />\n                <Route path=\"report/list\" element={<ListReportsSheet/>} />\n                <Route path=\"report/view/:report_id\" element={<ViewReportSheet/>} />\n            </Routes>\n            </Layout>\n            </Layout>\n            \n        </Layout>\n    )\n}\n","import React, { useState } from 'react'\nimport \"./Login.css\"\nimport { Alert, Button, Divider, Input, Space, Tabs } from 'antd'\nimport { ExclamationCircleOutlined, LockOutlined, LoginOutlined, UserAddOutlined, UserOutlined } from '@ant-design/icons';\nimport Wave from \"react-wavify\";\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { apiCall } from '../../helpers';\nimport { useSignIn } from 'react-auth-kit';\n\nconst Login = () => {\n\n    const [login_email, setLogin_email] = useState(\"hrushikeshchapke@gmail.com\");\n    const [login_password, setLogin_password] = useState(\"password\");\n    const [register_email, setRegister_email] = useState(\"\");\n    const [register_password, setRegister_password] = useState(\"\");\n    const [register_password_confirm, setRegister_password_confirm] = useState(\"\");\n\n    const [login_errors, setLogin_errors] = useState([]);\n    const [register_errors, setRegister_errors] = useState([]);\n\n    const signIn = useSignIn()\n    const navigate = useNavigate();\n\n\n    const tryLogin = () => {\n        let errors = [];\n\n        if(!login_email) errors.push(\"Please enter a valid e-mail.\");\n        if(!login_password) errors.push(\"Please enter your password.\");\n\n        if(errors.length > 0){\n            setLogin_errors(errors);\n            return;\n        }\n\n\n        apiCall(\"/auth/login\", {\n            email : login_email,\n            password : login_password\n        }, (response, error) => {\n            console.log(\"LOGIN CALL RESPONSE\",response, error);\n            \n            if(response.data.token){\n                if(signIn({\n                    token: response.data.token,\n                    expiresIn: 86400,\n                    tokenType: \"Bearer\",\n                    authState: response.data.user,\n                })){\n                    navigate('/sheet/');        \n                }\n                \n            }\n        })\n    }\n\n    const tryRegister = () => {\n        let errors = [];\n\n        if(!register_email) errors.push(\"Please enter a valid e-mail.\");\n        if(!register_password) errors.push(\"Please enter your password.\");\n        if(!register_password_confirm) errors.push(\"Please confirm your password.\");\n        if(register_password !== register_password_confirm) errors.push(\"Your passwords don't match, please try again.\");\n\n        if(errors.length > 0){\n            setRegister_errors(errors);\n            return;\n        }\n\n        apiCall(\"/auth/register\", {\n            email : register_email,\n            password : register_password\n        }, (response, error) => {\n            console.log(\"REGISTER CALL RESPONSE\",response, error);\n            \n            if(response.data.token){\n                if(signIn({\n                    token: response.data.token,\n                    expiresIn: 86400,\n                    tokenType: \"Bearer\",\n                    authState: response.data.user,\n                })){\n                    navigate('/sheet/');        \n                }\n                \n            }\n        })\n\n\n    }\n\n    return (\n\n        <div className=\"login-container\">\n            <Wave fill='#7a7a7a2f'\n                paused={false}\n                options={{\n                height: 360,\n                amplitude: 40,\n                speed: 0.15,\n                points: 8\n                }}\n                style={{position : \"absolute\", bottom : '0px', top : '0px', zIndex : '2 !important'}}\n            />\n            <div className=\"sheet login\">\n                <Tabs tabPosition='bottom'>\n                    <Tabs.TabPane tab=\"Login\" key={1} >\n                        <Space direction='vertical' align='center' className='fields-container'>\n                        <h2 style={{textDecoration : \"underline\"}}>Login</h2>\n                        <Input onChange={(e) => setLogin_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\n                        <Input onChange={(e) => setLogin_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\n                        <a className='forgot-btn' href=\"#\">Forgot Password?</a>\n                        {login_errors.map((error, index) => {\n                            return (\n                                <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\n                            )\n                        })}\n                        <br></br>\n                        <Button type='primary' onClick={() => tryLogin()} icon={<LoginOutlined/>}>Login</Button>\n                        <br></br>\n                        </Space>\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Register\" key={2} >\n                        <Space direction='vertical' align='center' className='fields-container'>\n                            <h2 style={{textDecoration : \"underline\"}}>Register</h2>\n                            <Input onChange={(e) => setRegister_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\n                            <Input onChange={(e) => setRegister_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\n                            <Input onChange={(e) => setRegister_password_confirm(e.target.value)} type=\"password\" placeholder='Confirm password' prefix={<LockOutlined />} />\n                            {register_errors.map((error, index) => {\n                                return (\n                                    <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\n                                )\n                            })}\n                            <br></br>\n                            <Button onClick={() => tryRegister()} type='primary' icon={<UserAddOutlined/>}>Register</Button>\n                            <br></br>\n                        </Space>\n                    </Tabs.TabPane>\n                </Tabs>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react'\nimport { Route, Routes } from \"react-router-dom\";\nimport Login from \"./Login\";\n\n\n// ReactDOM.render(<App />, document.getElementById('root'))\n\nexport default () => {\n    return (\n        <Routes>\n            <Route path=\"\" element={<Login/>} />\n        </Routes>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport SheetRoutes from './pages/sheets/SheetRoutes'\nimport AuthRoutes from './pages/auth/AuthRoutes'\n// ReactDOM.render(<App />, document.getElementById('root'))\nimport { AuthProvider, RequireAuth } from 'react-auth-kit'\n\nReactDOM.render(\n    \n    <AuthProvider\n        authType='cookie'\n        authName='_auth'\n        expiresIn={86400}\n        cookieDomain={window.location.hostname}\n        cookieSecure={window.location.protocol === \"https:\"}\n    >\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={ <AuthRoutes/> } />\n\n                <Route path=\"sheet/*\" element={\n                    <RequireAuth loginPath={'/'}>\n                        <SheetRoutes/>\n                    </RequireAuth>\n                }></Route>\n            </Routes>\n        </Router>\n    </AuthProvider>\n    ,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}