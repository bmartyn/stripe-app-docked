{"version":3,"sources":["www/serviceWorker.js","www/helpers.js","www/pages/sheets/snippets/StatusTag.jsx","www/pages/sheets/ListInvoicesSheet.jsx","www/pages/sheets/ListReportsSheet.jsx","www/pages/sheets/ListUsersSheet.jsx","www/pages/sheets/Dashboard.jsx","www/pages/sheets/ViewInvoiceSheet.jsx","www/pages/sheets/ViewReportSheet.jsx","www/pages/sheets/SheetRoutes.jsx","www/pages/auth/Login.jsx","www/pages/auth/AuthRoutes.jsx","www/index.js"],"names":["Boolean","window","location","hostname","match","backend_api_url","concat","protocol","API_URL","apiCall","route","data","callback","token","loadingCallbackState","navigate","axios","post","headers","Authorization","then","catch","error","ReportError","axios_response","notif","console","log","message","response","notification","description","status","raw","Array","isArray","forEach","element","statusText","getDateObject","seconds","t","Date","setSeconds","getStatusColor","color","StatusTag","_ref","faint","react_default","a","createElement","tag","style","opacity","toUpperCase","hdate","require","changeStatus","new_status","invoice_id","auth_token","fetchInvoices","changeLabel","actionsMenu","menu","items","key","label","react_router_dom","to","es_button","type","icon","LayoutOutlined","block","children","onClick","danger","RollbackOutlined","e","onChange","pagination","filters","sorter","extra","ListInvoicesSheet","authHeader","useAuthHeader","useNavigate","_useState","useState","_useState2","Object","slicedToArray","invoices","setInvoices","_useState3","_useState4","loading","setLoading","r","row","index","created_verbose","prettyPrint","created","showTime","columns","title","dataIndex","align","render","amount","invoice","getSymbolFromCurrency","currency","Math","round","amount_due","printAmount","metadata_marked_status","metadata","marked_status","snippets_StatusTag","text","value","onFilter","record","hasOwnProperty","custom_status","dropdown","arrow","overlay","placement","space","DownOutlined","useEffect","className","table","dataSource","ListReportsSheet","reports","setReports","report_type","dict","balance.summary.1","balance_change_from_activity.summary.1","balance_change_from_activity.itemized.3","payouts.summary.1","payouts.itemized.3","payout_reconciliation.summary.1","payout_reconciliation.itemized.5","ending_balance_reconciliation.summary.1","replaceAll","reportVerbose","size","report","commaNumber","result","parameters","interval_start","interval_end","colSpan","report_id","BookOutlined","disabled","MinusCircleOutlined","id","String","prototype","toProperCase","this","replace","txt","charAt","substr","toLowerCase","Search","Input","isChecked","selectedKeys","eventKey","includes","generateTree","treeNodes","arguments","length","undefined","checkedKeys","map","props","objectWithoutProperties","_excluded","objectSpread2","TreeTransfer","_ref2","targetKeys","restProps","_excluded2","transferDataSource","flatten","item","push","transfer","assign","showSelectAll","_ref3","direction","onItemSelect","toConsumableArray","tree","blockNode","checkable","checkStrictly","defaultExpandAll","treeData","onCheck","_","_ref4","node","onSelect","_ref5","TreeTransferComponent","_ref6","user_id","current_permissions","permissions","setTargetKeys","_useState5","_useState6","changed","setChanged","setPermissions","_ref7","asyncToGenerator","_regeneratorRuntime","mark","_callee","_invoice_permissions","permissions_bundle","update","_permissions2","permission","allow_status","wrap","_context","prev","next","invoice_permissions","set_refund","set_to_be_refund","set_paid","set_invoiced_in_error","set_waiver","set_voucher","defineProperty","report_permissions","balance_summary_1","balance_change_from_activity_summary_1","balance_change_from_activity_itemized_3","payouts_summary_1","payouts_itemized_3","payout_reconciliation_summary_1","payout_reconciliation_itemized_5","ending_balance_reconciliation_summary_1","general_permissions","view_invoice","access_reports","manage_users","allow_key","permission_type","call","permission_updates","stop","apply","Fragment","ListUsersSheet_TreeTransfer","keys","display","justifyContent","marginTop","SafetyOutlined","ListUsersSheet","_useState7","_useState8","users","setUsers","_useState9","_useState10","_useState11","_useState12","param","setParam","fetchUsers","isActive","user","es_switch","checked","unCheckedChildren","checkedChildren","Switch","toggleAccount","arr","current","permission_category","permission_group","collapse","CollapsePanel_default","header","ListUsersSheet_TreeTransferComponent","placeholder","onSearch","RangePicker","DatePicker","Dashboard","carousel_ref","useRef","yesterday","setYesterday","yesterday_statistic","setYesterday_statistic","yesterday_type_amount","setYesterday_type_amount","lastWeek","setLastWeek","lastWeek_statistic","setLastWeek_statistic","lastWeek_type_amount","setLastWeek_type_amount","_useState13","_useState14","lastMonth","setLastMonth","_useState15","_useState16","lastMonth_statistic","setLastMonth_statistic","_useState17","_useState18","lastMonth_type_amount","setLastMonth_type_amount","_useState19","_useState20","lastYear","setLastYear","_useState21","_useState22","lastYear_statistic","setLastYear_statistic","_useState23","_useState24","lastYear_type_amount","setLastYear_type_amount","_useState25","_useState26","dates","setDates","_useState27","_useState28","customAggregateData","setCustomAggregateData","_useState29","_useState30","aggregateDataType","setAggregateDataType","getYesterdayStatsData","getLastWeekStatsData","getLastMonthStatsData","getLastYearStatsData","moment","subtract","start","startOf","unix","end","endOf","count","el","date","setHours","_id","hour","total_amount","format","amount_avg","count_avg","fetchYesteday","last_week","year","month","day","fetchLastWeek","last_month","fetchLastMonth","last_year","fetchLastYear","annotationLineStyles","stroke","lineDash","lineWidth","gradientFill","fill","yesterday_config_1","xField","yField","annotations","position","content","offsetY","textBaseline","meta","alias","formatter","substring","xAxis","tickCount","smooth","areaStyle","yesterday_config_2","lastWeek_config_1","lastWeek_config_2","lastMonth_config_1","lastMonth_config_2","lastYear_config_1","lastYear_config_2","minHeight","onCalendarChange","fetchCustomDateRangeData","AreaChartOutlined","shape","es_row","es_col","span","onMouseOver","goTo","gutter","justify","statistic","prefix","DollarOutlined","PlusCircleFilled","flexFlow","alignItems","segmented","options","val","components_area","carousel","ref","dotPosition","autoplaySpeed","cols","o","price","s","ViewInvoiceSheet","useParams","setInvoice","setItems","lines","customer_name","split","number","relativeTime","due_date","marginRight","skeleton","active","account_name","customer_email","customer_address","customer_phone","divider","Option","Select","toTitleCase","str","categories","Balance","1","2","3","4","5","Payout Reconciliation","6","7","8","9","10","inv_categories","_inv_categories","fieldNames","ViewReportSheet","domain","setDomain","current_page_status","setCurrent_page_status","set_balance_summary_1","balance_summary_1_cols","set_balance_summary_1_cols","balance_change_from_activity_type","set_balance_change_from_activity_type","set_balance_change_from_activity_summary_1","balance_change_from_activity_summary_1_cols","set_balance_change_from_activity_summary_1_cols","set_balance_change_from_activity_itemized_3","balance_change_from_activity_itemized_3_cols","set_balance_change_from_activity_itemized_3_cols","payouts_type","set_payouts_type","set_payouts_summary_1","payouts_summary_1_cols","set_payouts_summary_1_cols","set_payouts_itemized_3","_useState31","_useState32","payouts_itemized_3_cols","set_payouts_itemized_3_cols","_useState33","_useState34","payout_reconciliation_type","set_payout_reconciliation_type","_useState35","_useState36","set_payout_reconciliation_summary_1","_useState37","_useState38","payout_reconciliation_summary_1_cols","set_payout_reconciliation_summary_1_cols","_useState39","_useState40","set_payout_reconciliation_itemized_5","_useState41","_useState42","payout_reconciliation_itemized_5_cols","set_payout_reconciliation_itemized_5_cols","_useState43","_useState44","set_ending_balance_reconciliation_type","_useState45","_useState46","set_ending_balance_reconciliation_summary_1","_useState47","_useState48","ending_balance_reconciliation_summary_1_cols","set_ending_balance_reconciliation_summary_1_cols","_useState49","_useState50","ending_balance_reconciliation_itemized_4","set_ending_balance_reconciliation_itemized_4","_useState51","_useState52","ending_balance_reconciliation_itemized_4_cols","set_ending_balance_reconciliation_itemized_4_cols","makeReport","fetchSetReportStateCols","fetchSetReportState","makeColumns","curr","final","new_arr","createReportAndAwaitCompletion","apiCallObject","startsWith","url","ws","WebSocket","addEventListener","event","msg","JSON","parse","file_id","ViewReportSheet_regeneratorRuntime","link","category","reporting_category","invoice_report","invoice_arr","sums","voucher_type","voucher_discount","net_amount","reportStateObject","_x","downloadAndSetFileStateContents","close","_callee2","i","report_type_desc","_context2","abrupt","option","ViewReportSheet_RangePicker","moment_dates","defaultValue","AuditOutlined","marginBottom","es_select","mode","filter","c","showSearch","showArrow","target","href","DownloadOutlined","bordered","col","SheetRoutes","auth_user","useAuthUser","signOutFunction","useSignOut","collapsed","setCollapsed","setUser","toggleSideBar","layout_default","affix","theme","backgroundColor","Item","marginLeft","LogoutOutlined","Sider_default","trigger","onMouseEnter","onMouseLeave","collapsible","isAdmin","UserOutlined","react_router","path","sheets_Dashboard","sheets_ListInvoicesSheet","sheets_ViewInvoiceSheet","sheets_ListReportsSheet","sheets_ViewReportSheet","sheets_ListUsersSheet","Login","login_email","setLogin_email","login_password","setLogin_password","register_email","setRegister_email","register_password","setRegister_password","register_password_confirm","setRegister_password_confirm","login_errors","setLogin_errors","register_errors","setRegister_errors","signIn","useSignIn","index_module","paused","height","amplitude","speed","points","bottom","top","zIndex","tabs","tabPosition","TabPane","tab","textDecoration","input","LockOutlined","es_alert","ExclamationCircleOutlined","showIcon","fontSize","errors","email","password","expiresIn","tokenType","authState","tryLogin","LoginOutlined","tryRegister","UserAddOutlined","AuthRoutes","pages_auth_Login","ReactDOM","index_modern","authType","authName","cookieDomain","cookieSecure","loginPath","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90c168ef.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { notification } from 'antd';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport { useAuthHeader } from 'react-auth-kit';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useSignOut } from 'react-auth-kit';\n\n\n// export const API_URL = `${window.location.protocol}//${window.location.hostname}:${process.env.PORT || 3000}`;\n\nlet backend_api_url = `${window.location.protocol}//${window.location.hostname}`;\nif(window.location.hostname == \"localhost\") backend_api_url += \":4000\";\n\nexport const API_URL = backend_api_url;\nexport const apiCall = (route, data, callback, token, loadingCallbackState, navigate) => {\n    axios.post(API_URL + route, data, (token ? { headers : { Authorization : token } } : {})).then(callback).catch(error => {ReportError(error, navigate); if(loadingCallbackState) loadingCallbackState(false)});\n}\n\nexport const ReportError = (axios_response, navigate) => {\n\n    let notif = {\n        \n    }\n    \n    console.log(\"CAUGHT API CALL ERROR : \", axios_response);\n    \n\n    notif = {\n        message : \"There was an error.\",\n    };\n    if(!axios_response.response){\n\n        if(axios_response.data){\n\n        }\n        notification['error']({\n            message : \"There was an error.\",\n            description : (axios_response.message ? axios_response.message : axios_response)\n        })\n\n        return;\n    }\n    if(axios_response.response.status === 403){\n        notif.message = \"Your Session has timed out.\";\n        notif.description = \"Please sign in again to continue.\";\n        notification['error'](notif);\n\n        navigate(\"/\")\n\n        return;\n        \n    }\n    const response = axios_response.response;\n\n    if(response.data){\n        if(response.data.raw && response.data.raw.message) notif.description = response.data.raw.message;\n        else if(response.data.error && response.data.error.message) notif.description = response.data.error.message;\n        \n        else if(typeof response.data.error === \"string\") notif.description = response.data.error;\n        else if(Array.isArray(response.data.error)){\n            response.data.error.forEach(element => {\n                notif.description += element + '.'\n            });\n        }\n        else if(response.data.message) notif.description = response.data.message;\n        else if(response.message) notif.description = response.message;\n    }\n\n    if(!notif.description) notif.description = axios_response.response.statusText;\n    notification['error'](notif);\n}\n\nexport const getDateObject = (seconds) => {\n    var t = new Date(1970, 0, 1); // Epoch\n    t.setSeconds(seconds);\n    return t;\n}\n\nexport const getStatusColor = (status) => {\n    let color = false;\n    switch (status) {\n        case 'paid':\n            color = 'green';\n            break;\n    \n        case 'invoiced_in_error':\n            color = 'volcano';\n            break;\n    \n        case 'waiver':\n            color = 'geekblue';\n            break;\n    \n        case 'voucher':\n            color = 'geekblue';\n            break;\n    \n        case 'refund':\n            color = 'orange';\n            break;\n    \n        case 'uncollectible':\n            color = 'magenta';\n            break;\n    \n        case 'open':\n            color = 'cyan';\n            break;\n    \n        default:\n            break;\n    }\n    \n    return color;\n}\n\nexport const printAmount = (invoice) => {\n    return `${getSymbolFromCurrency(invoice.currency)}${Math.round(invoice.amount_due/100)}`;\n}\n\nexport const HaltIfNotPermitted = (event) => {\n\n}\n\nexport const reportVerbose = (report_type) => {\n    const dict = {\n        \"balance.summary.1\" : \"Balance - Summary\",\n        \"balance_change_from_activity.summary.1\" : \"Balance change from activity - Summary\",\n        \"balance_change_from_activity.itemized.3\" : \"Balance change from activity - Itemized\",\n        \"payouts.summary.1\" : \"Payouts - Summary\",\n        \"payouts.itemized.3\" : \"Payouts - Itemized\",\n        \"payout_reconciliation.summary.1\" : \"Payout reconciliation - Summary\",\n        \"payout_reconciliation.itemized.5\" : \"Payout reconciliation - Itemized\",\n        \"ending_balance_reconciliation.summary.1\" : \"Ending balance reconciliation - Summary\",\n    }\n\n    if(dict.hasOwnProperty(report_type)) return dict[report_type];\n\n    report_type = report_type.replaceAll('.', ' ');\n    report_type = report_type.replaceAll('_', ' ');\n\n    return report_type;\n\n}","import { Tag } from 'antd';\nimport React, { Component } from 'react'\nimport { getStatusColor } from '../../../helpers';\n\n\nconst StatusTag = ({status,faint}) => {\n\n    return (\n        <Tag style={{opacity : (faint ? '0.4' : '1')}} color={getStatusColor((status))}>{status ? status.toUpperCase() : \"None\"}</Tag>\n    )\n}\n\nexport default StatusTag;","import React, { useState, useEffect } from 'react'\nimport { Button, Dropdown, Menu, Space, Table, Tag } from \"antd\"\nimport { DownOutlined, LayoutOutlined, RightCircleOutlined, RollbackOutlined, SmileOutlined } from '@ant-design/icons';\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError } from '../../helpers';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport StatusTag from './snippets/StatusTag';\nimport { useAuthHeader } from 'react-auth-kit';\n\nconst hdate = require(\"human-date\");\n\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/label/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst actionsMenu = (invoice_id, auth_token, fetchInvoices, navigate) => {\n    \n    \n    return (\n\n        <Menu \n            items={[\n                {\n                    key : 1,\n                    label : (\n                        <NavLink to={\"/sheet/invoice/view/\" + invoice_id}>\n                            <Button type='dashed' icon={<LayoutOutlined/>} block >View Invoice</Button>\n                        </NavLink>\n                    ),\n\n                },\n                {\n                    key : 2,\n                    label : 'Mark Invoice',\n                    children : [\n                        {\n                            key : '2.1',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"paid\", invoice_id, auth_token, fetchInvoices, navigate)}>Paid</Button>\n                            )\n                        },\n                        {\n                            key : '2.2',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices, navigate)}>Invoiced in error</Button>\n                            )\n                        },\n                        {\n                            key : '2.3',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"waiver\", invoice_id, auth_token, fetchInvoices, navigate)}>Waiver</Button>\n                            )\n                        },\n                        {\n                            key : '2.4',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"voucher\", invoice_id, auth_token, fetchInvoices, navigate)}>Voucher</Button>\n                            )\n                        },\n                        {\n                            key : '2.5',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"refund\", invoice_id, auth_token, fetchInvoices, navigate)}>Refund</Button>\n                            )\n                        },\n                        {\n                            key : '2.6',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)}>Uncollectible</Button>\n                            )\n                        },\n                    ]\n                },\n                {\n                    key : 3,\n                    label : 'Change Status',\n                    children : [\n                        {\n                            key : '3.1',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"paid\", invoice_id, auth_token, fetchInvoices, navigate)}>Paid</Button>\n                            )\n                        },\n                        {\n                            key : '3.2',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices, navigate)}>Invoiced in error</Button>\n                            )\n                        },\n                        {\n                            key : '3.3',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"waiver\", invoice_id, auth_token, fetchInvoices, navigate)}>Waiver</Button>\n                            )\n                        },\n                        {\n                            key : '3.4',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"voucher\", invoice_id, auth_token, fetchInvoices, navigate)}>Voucher</Button>\n                            )\n                        },\n                        {\n                            key : '3.5',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"refund\", invoice_id, auth_token, fetchInvoices, navigate)}>Refund</Button>\n                            )\n                        },\n                        {\n                            key : '3.6',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)}>Uncollectible</Button>\n                            )\n                        },\n                    ]\n                },\n                {\n                    key : 4,\n                    label : (\n                            <Button type='primary' danger icon={<RollbackOutlined/>} block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)} >Refund</Button>\n                    )\n                },\n            ]}\n\n            onClick={(e) => console.log(e)}\n        />\n    )\n}\n\n\n\n\nconst onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n\n\nconst ListInvoicesSheet =  () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n    \n    const [invoices, setInvoices] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const fetchInvoices = () => {\n        setLoading(true);\n        apiCall(\"/invoices/list\", {}, (r) => {\n    \n            let invoices = r.data.data.data;\n            \n            invoices.forEach((row, index) => {\n                row.created_verbose = hdate.prettyPrint(getDateObject(row.created), { showTime : true });\n                row.key = index;\n            })\n\n            console.log(invoices)\n            setLoading(false);\n            setInvoices(invoices);\n        }, authHeader(), setLoading, navigate)\n        \n    }\n\n    const columns = [\n        // Offering\n        {\n            title : \"Offering\",\n            dataIndex : \"account_name\",\n            key : \"account_name\"\n        },\n        // Email\n        {\n            title : \"Email\",\n            dataIndex : \"customer_email\",\n            key : \"customer_email\"\n        },\n        // Amount\n        {\n            title : \"Amount\",\n            dataIndex : \"amount_due\",\n            key : \"amount_due\",\n            align : \"center\",\n            render : (amount, invoice) => {\n                return ( \n                    <span>{printAmount(invoice)}</span>\n                )\n            }\n        },\n        // Marked for Status\n        {\n            title : \"Marked for\",\n            dataIndex : \"metadata.marked_status\",\n            key : \"marked_status\",\n            align : \"center\",\n            render : (metadata_marked_status, invoice) => {\n                \n                if(invoice.metadata.marked_status){\n                    return <StatusTag faint status={invoice.metadata.marked_status}/>\n                }\n            },\n            filters : [\n                {\n                    text : 'Draft',\n                    value : 'draft'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'invoiced_in_error'\n                },\n                {\n                    text : 'Waiver',\n                    value : 'waiver'\n                },\n                {\n                    text : 'Voucher',\n                    value : 'voucher'\n                },\n                {\n                    text : 'Refund',\n                    value : 'refund'\n                },\n                {\n                    text : 'Uncollectible',\n                    value : 'uncollectible'\n                },\n                {\n                    text : \"Open\",\n                    value : \"open\"\n                },\n                {\n                    text : \"Paid\",\n                    value : \"paid\"\n                }\n            ],\n            onFilter: (value, record) => record.status === value,\n        },\n        // Current Status\n        {\n            title : \"Current status\",\n            dataIndex : \"status\",\n            key : \"status\",\n            align : \"center\",\n            render : (status, invoice) => <StatusTag status={invoice.metadata.hasOwnProperty(\"custom_status\") ? invoice.metadata.custom_status : status}/>,\n            filters : [\n                {\n                    text : 'Draft',\n                    value : 'draft'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'invoiced_in_error'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'void'\n                },\n                {\n                    text : 'Waiver',\n                    value : 'waiver'\n                },\n                {\n                    text : 'Voucher',\n                    value : 'voucher'\n                },\n                {\n                    text : 'Refund',\n                    value : 'refund'\n                },\n                {\n                    text : 'Uncollectible',\n                    value : 'uncollectible'\n                },\n                {\n                    text : \"Open\",\n                    value : \"open\"\n                },\n                {\n                    text : \"Paid\",\n                    value : \"paid\"\n                }\n            ],\n            onFilter: (value, record) => record.status === value,\n        },\n        {\n            title : \"Created\",\n            dataIndex : \"created_verbose\",\n            key : \"created_verbose\"\n        },\n        {\n            title : \"Action\",\n            dataIndex : \"id\",\n            key : \"action\",\n            render : (invoice_id) => {\n                return (\n                    <Dropdown\n                    arrow={false}\n                    overlay={actionsMenu(invoice_id, authHeader(), fetchInvoices, navigate)}\n                    placement=\"bottomRight\"\n                >\n                    <Button >\n                        <Space>\n                        Actions\n                        <DownOutlined/>\n                        </Space>\n                    </Button>\n                </Dropdown>\n                )\n            }\n        }\n    ]\n\n    \n\n    useEffect(() => {\n        \n        fetchInvoices();\n      \n    }, [])\n    \n    return (\n        <div className='sheet'>\n            <Space/>\n            <h2>Invoices </h2>\n            \n            <Table loading={loading} dataSource={invoices} columns={columns} onChange={onChange} />\n            \n        </div>\n    )\n}\n\nexport default ListInvoicesSheet","import React, { useState, useEffect } from 'react'\nimport { Button, Dropdown, Menu, Space, Table, Tag } from \"antd\"\nimport { BookOutlined, MinusCircleOutlined} from '@ant-design/icons';\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError, reportVerbose } from '../../helpers';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport StatusTag from './snippets/StatusTag';\nimport { useAuthHeader } from 'react-auth-kit';\nimport commaNumber from 'comma-number';\n\nconst hdate = require(\"human-date\");\n\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/label/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\n\n\n\nconst onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n\n\nconst ListReportsSheet =  () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n    \n    const [reports, setReports] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const fetchReports = () => {\n        setLoading(true);\n        apiCall(\"/reports/list\", {}, (r) => {\n    \n            const reports = r.data.data.data;\n            reports.forEach(r => {\n                r.key = r.id\n            });\n\n            setReports(reports);\n            setLoading(false);\n        }, authHeader(), setLoading, navigate)\n        \n    }\n\n    const columns = [\n        // Report Category\n        {\n            title : \"Report Category\",\n            dataIndex : \"report_type\",\n            key : \"report_type\",\n            render : (report_type) => {\n                return reportVerbose(report_type);\n            }\n        },\n        // Size\n        {\n            title : \"Size\",\n            dataIndex : \"size\",\n            key : \"size\",\n            render : (size, report) => commaNumber(report.result.size) + \" KB\"\n        },\n        // Created\n        {\n            title : \"Created\",\n            dataIndex : \"created\",\n            key : \"created\",\n            render : (created) => hdate.prettyPrint(getDateObject(created))\n        },\n        {\n            title : \"Interval\",\n            dataIndex : \"parameters\",\n            key : \"parameters\",\n            render : (parameters) => {\n              return `${hdate.prettyPrint(getDateObject(parameters.interval_start))} to ${hdate.prettyPrint(getDateObject(parameters.interval_end))}.`;\n            }\n        },\n        \n        {\n            title : \"Action\",\n            dataIndex : \"id\",\n            key : \"action\",\n            colSpan : 2,\n            render : (report_id, report) => {\n\n                if(report.status == 'succeeded') return (\n                    <NavLink to={\"/sheet/report/view/\" + report_id}>\n                        <Button type='primary' icon={<BookOutlined />} block >View Report</Button>\n                    </NavLink>\n                )\n                else return (\n                    <Button disabled type=\"primary\" icon={<MinusCircleOutlined/>} block >Report {report.status}</Button>\n                )\n            }\n        }\n    ]\n\n    \n\n    useEffect(() => {\n        \n        fetchReports();\n      \n    }, [])\n    \n    return (\n        <div className='sheet'>\n            <Space/>\n            <h1>Reports </h1>\n            \n            <Table loading={loading} dataSource={reports} columns={columns} onChange={onChange} />\n            \n        </div>\n    )\n}\n\n\n\nexport default ListReportsSheet","import React, { useState, useEffect } from 'react'\nimport { Button, Dropdown, Col, Space, Table, Row, Input, Switch, Collapse, notification } from \"antd\"\nimport { BranchesOutlined, DownOutlined, LayoutOutlined, RightCircleOutlined, RollbackOutlined, SafetyOutlined, SmileOutlined } from '@ant-design/icons';\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError } from '../../helpers';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport StatusTag from './snippets/StatusTag';\nimport { useAuthHeader } from 'react-auth-kit';\nimport { Transfer, Tree } from 'antd';\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel';\n\nString.prototype.toProperCase = function () {\n    return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n};\n\nconst { Search } = Input;\n\nconst isChecked = (selectedKeys, eventKey) => selectedKeys.includes(eventKey);\n\nconst generateTree = (treeNodes = [], checkedKeys = []) =>\n  treeNodes.map(({ children, ...props }) => ({\n    ...props,\n    disabled: checkedKeys.includes(props.key),\n    children: generateTree(children, checkedKeys),\n}));\n\nconst TreeTransfer = ({ dataSource, targetKeys, ...restProps }) => {\n    const transferDataSource = [];\n  \n    function flatten(list = []) {\n      list.forEach((item) => {\n        transferDataSource.push(item);\n        flatten(item.children);\n      });\n    }\n  \n    flatten(dataSource);\n    return (\n      <Transfer\n        {...restProps}\n        targetKeys={targetKeys}\n        dataSource={transferDataSource}\n        className=\"tree-transfer\"\n        render={(item) => item.title}\n        showSelectAll={false}\n      >\n        {({ direction, onItemSelect, selectedKeys }) => {\n          if (direction === 'left') {\n            const checkedKeys = [...selectedKeys, ...targetKeys];\n            return (\n              <Tree\n                blockNode\n                checkable\n                checkStrictly\n                defaultExpandAll\n                checkedKeys={checkedKeys}\n                treeData={generateTree(dataSource, targetKeys)}\n                onCheck={(_, { node: { key } }) => {\n                  onItemSelect(key, !isChecked(checkedKeys, key));\n                }}\n                onSelect={(_, { node: { key } }) => {\n                  onItemSelect(key, !isChecked(checkedKeys, key));\n                }}\n              />\n            );\n          }\n        }}\n      </Transfer>\n    );\n  };\n\nconst TreeTransferComponent = ({user_id, current_permissions, permissions}) => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n\n    const [targetKeys, setTargetKeys] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [changed, setChanged] = useState(false);\n    \n    useEffect(() => {\n        console.log(current_permissions);\n        setTargetKeys(current_permissions);\n      \n    }, [])\n    \n\n    const onChange = (keys) => {\n        console.log(keys);\n        if(!changed) setChanged(true);\n        setTargetKeys(keys);\n    };\n\n    const setPermissions = async () => {\n\n        setLoading(true);\n\n        const permissions_bundle = {\n            invoice_permissions : {\n                set_refund : false,\n            set_to_be_refund : false,\n            // Set permanent statuses.\n            set_paid : false,\n            set_invoiced_in_error : false,\n            set_waiver : false,\n            set_voucher : false,\n            set_refund : false,\n            set_uncollectible : false,\n            // Set temporary statuses.\n            set_to_be_paid : false,\n            set_to_be_invoiced_in_error : false,\n            set_to_be_waiver : false,\n            set_to_be_voucher : false,\n            set_to_be_refund : false,\n            set_to_be_uncollectible : false,\n            },\n            report_permissions : {\n                balance_summary_1 : false,\n                balance_change_from_activity_summary_1 : false,\n                balance_change_from_activity_itemized_3 : false,\n                payouts_summary_1 : false,\n                payouts_itemized_3 : false,\n                payout_reconciliation_summary_1 : false,\n                payout_reconciliation_itemized_5 : false,\n                ending_balance_reconciliation_summary_1 : false,\n            },\n            general_permissions : {\n                view_invoice : false,\n                access_reports : false,\n                manage_users : false\n            }\n        }\n\n        targetKeys.forEach(allow_key => {\n            for (const permission_type in permissions_bundle) {\n    \n                if (Object.hasOwnProperty.call(permissions_bundle, permission_type)) {\n                    const permissions = permissions_bundle[permission_type];\n                    \n                    if(permissions.hasOwnProperty(allow_key)){\n                        permissions[allow_key] = true;\n                        break;\n                    }\n    \n                }\n            }\n        })\n\n        let update = {};\n\n        for (const type in permissions_bundle) {\n            if (Object.hasOwnProperty.call(permissions_bundle, type)) {\n                const permissions = permissions_bundle[type];\n\n                for (const permission in permissions) {\n                    if (Object.hasOwnProperty.call(permissions, permission)) {\n                        const allow_status = permissions[permission];\n                        \n                        update[`${type}.${permission}`] = `${allow_status}`\n                    }\n                }\n            }\n        }\n\n        apiCall(\"/users/permit\", {permission_updates : update, user_id}, (response) => {\n            try {\n                if(response.data.data && response.data.data.id){\n                    notification['success']({\n                        message : \"User update action\",\n                        description : \"Permissions updated successfully!\"\n                    });\n                }\n            } catch (error) {\n                notification['error']({\n                    message : \"Error\",\n                    description : \"Permissions could not be updated, try again later.\"\n                })\n                setTargetKeys(current_permissions);\n            }\n            setLoading(false);\n        }, authHeader(), setLoading, navigate )\n    }\n\n    \n\n\n\n    \n    \n    return (\n        <>\n            {/* <Space direction='vertical'> */}\n            <TreeTransfer dataSource={permissions} targetKeys={targetKeys} onChange={onChange} />\n            \n            <div style={{display : \"flex\", justifyContent : 'flex-end', marginTop : \"1em\"}}>\n            <Button disabled={!changed} type=\"primary\" icon={<SafetyOutlined />} onClick={setPermissions} loading={loading} >Set Permissions</Button>\n            </div>\n            {/* </Space> */}\n        </>\n    )\n}\n\nconst hdate = require(\"human-date\");\n\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\n\n\nconst ListUsersSheet =  () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n    \n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [param, setParam] = useState(\"\");\n\n    \n    useEffect(() => {\n      apiCall(\"/users/list\", {}, (response) => {\n        const users = response.data.data;\n\n        setUsers(users);\n      }, authHeader(), setLoading, navigate);\n    \n    }, [])\n    \n\n\n    const fetchUsers = (param) => {\n        setLoading(true);\n        setParam(param);\n        \n        apiCall(\"/auth/find\", {param}, (r) => {\n            console.log(r)\n            let users = r.data;\n            \n            console.log(\"USERSSS\", users);\n            setLoading(false);\n            setUsers(users);\n        }, authHeader(), setLoading, navigate)\n        \n    }\n\n\n    const toggleAccount = (isActive, user_id, Switch) => {\n        \n        apiCall(\"/auth/toggle\", {user_id, status : !isActive}, (r) => {\n            if(r.isActive !== isActive) fetchUsers(param);\n        }, authHeader(), setLoading, navigate)\n    }\n\n    const names = (a) => {\n        a = a.replace(\"set_to_be\", \"Mark_as\");\n        a = a.replace(\"set\", \"Set_status_to\");\n        a = a.replaceAll(\"_\", \" \").replace(/\\d+$/, \"\");\n        return a.toProperCase();\n    }\n    \n\n\n    const columns = [\n        // Offering\n        {\n            title : \"Email\",\n            dataIndex : \"email\",\n            key : \"email\"\n        },\n        {\n            title : \"Account status\",\n            dataIndex : \"isActive\",\n            key : \"isActive\",\n            render : (isActive, user) => {\n                return (\n                    <Switch checked={isActive} unCheckedChildren=\"Disabled\" checkedChildren=\"enabled\" onChange={() => toggleAccount(isActive, user.id)} />\n                )\n            }\n        },\n        {\n            title : \"Permissions\",\n            dataIndex : \"permissions\",\n            key : \"permissions\",\n            render : (permissions, user) => {\n\n                const arr = [];\n                const current = []\n                const types = [\"general_permissions\", \"invoice_permissions\", \"report_permissions\"];\n                types.forEach(permission_category => {\n                    \n                    const permission_group = {\n                        title : permission_category.replaceAll(\"_\", \" \").toProperCase(),\n                        value : permission_category,\n                        checkable : false,\n                        children : []\n\n                    };\n\n                    for (const key in user[permission_category]) {\n                        if (Object.hasOwnProperty.call(user[permission_category], key)) {\n                            const value = user[permission_category][key];\n                            \n                             permission_group.children.push({\n                                title : names(key),\n                                value : key,\n                                key : key,\n                            })\n                            if(value === \"true\"){\n                                current.push(key);\n                            }\n                            \n                        }\n                    }\n\n                    arr.push(permission_group)\n                });\n\n                console.log(arr, current);\n                return (\n                    <Collapse >\n                        <CollapsePanel key={1} header=\"Manage Permissions\">\n                            <TreeTransferComponent user_id={user.id} permissions={arr} current_permissions={current} />    \n                        </CollapsePanel>\n                    </Collapse>\n                )\n            }\n        }\n\n    ]\n    \n    \n    return (\n        <div className='sheet'>\n            <Space/>\n            <h2>Manage Users </h2>\n            <Search \n                placeholder='Search for a User'\n                onSearch={fetchUsers}\n            />\n            \n            <Table pagination={false} loading={loading} dataSource={users} columns={columns} />\n            \n        </div>\n    )\n}\n\nexport default ListUsersSheet","import { AreaChartOutlined, DollarOutlined, PlusCircleFilled } from '@ant-design/icons';\nimport { Carousel, Col, DatePicker, Row, Segmented, Statistic, Button, Space, notification } from 'antd';\nimport { Area, Line } from \"@ant-design/charts\";\nimport { apiCall } from '../../helpers';\nimport \"./styles/Dashboard.css\"\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useAuthHeader } from 'react-auth-kit';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\n\nconst { RangePicker } = DatePicker\n\nconst commaNumber = require('comma-number')\n\nconst dummyStateData = 36000;\nconst dummyStateDataSmall = 36;\n\nconst Dashboard = () => {\n\n    const carousel_ref = useRef();\n\n    const [yesterday, setYesterday] = useState([]);\n    const [yesterday_statistic, setYesterday_statistic] = useState(false);\n    const [yesterday_type_amount, setYesterday_type_amount] = useState(true);\n\n    const [lastWeek, setLastWeek] = useState([]);\n    const [lastWeek_statistic, setLastWeek_statistic] = useState(false);\n    const [lastWeek_type_amount, setLastWeek_type_amount] = useState(true);\n\n    const [lastMonth, setLastMonth] = useState([]);\n    const [lastMonth_statistic, setLastMonth_statistic] = useState(false);\n    const [lastMonth_type_amount, setLastMonth_type_amount] = useState(true);\n\n    const [lastYear, setLastYear] = useState([]);\n    const [lastYear_statistic, setLastYear_statistic] = useState(false);\n    const [lastYear_type_amount, setLastYear_type_amount] = useState(true);\n\n    const [dates, setDates] = useState([]);\n    const [customAggregateData, setCustomAggregateData] = useState(false);\n    const [aggregateDataType, setAggregateDataType] = useState(true)\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    const fetchCustomDateRangeData = () => {\n        if(dates.length < 2){\n            return notification['warning']({\n                title : \"Create Dashboard\",\n                description : \"Please select start and end dates.\"\n            });\n        }\n\n        console.log(dates[0].format(), dates[1].format())\n\n        const start = dates[0].unix();\n        const end = dates[1].unix();\n\n        apiCall('/reports/dashboard/custom', {start, end}, (response) => {\n\n            const data = response.data.data;\n\n          \n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                delete el._id\n            });\n\n            console.log(\"CUSTOM AGGREGATE DATA\", data);\n\n            setCustomAggregateData(data);\n\n        }, authHeader(), null, navigate);\n\n\n        \n    }\n\n    const fetchYesteday = () => {\n\n        let yesterday = moment().subtract(1, \"day\");\n        let start = yesterday.startOf(\"day\").unix();\n        let end = yesterday.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/day\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n                \n                const date = new Date();\n                date.setHours(el._id.hour);\n\n                el.total_amount /= 100;\n\n                el.hour = moment(date).format(\"hh a\");\n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n            setYesterday_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"YESTERDAY AGGREGATE DATA\", data);\n            setYesterday(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastWeek = () => {\n\n        let last_week = moment().subtract(1, \"week\");\n        let start = last_week.startOf(\"day\").unix();\n        let end = last_week.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            console.log(data)\n\n            setLastWeek_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST WEEK AGGREGATE DATA\", data);\n\n            setLastWeek(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastYear = () => {\n\n        let last_year = moment().subtract(1, \"month\");\n        let start = last_year.startOf(\"day\").unix();\n        let end = last_year.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/year\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}`;\n                \n                el.total_amount /= 100;\n\n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            \n\n            setLastYear_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST YEAR AGGREGATE DATA\", data);\n\n            setLastYear(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastMonth = () => {\n\n        let last_month = moment().subtract(1, \"month\");\n        let start = last_month.startOf(\"day\").unix();\n        let end = last_month.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            console.log(data)\n\n            setLastMonth_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST MONTH AGGREGATE DATA\", data);\n\n            setLastMonth(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const getYesterdayStatsData = (key) => {\n        if(yesterday_statistic) return yesterday_statistic[key];\n        else return 0;\n    }\n\n    const getLastWeekStatsData = (key) => {\n        if(lastWeek_statistic) return lastWeek_statistic[key];\n        else return 0;\n    }\n\n    const getLastMonthStatsData = (key) => {\n        if(lastMonth_statistic) return lastMonth_statistic[key];\n        else return 0;\n    }\n\n    const getLastYearStatsData = (key) => {\n        if(lastYear_statistic) return lastYear_statistic[key];\n        else return 0;\n    }\n\n\n    useEffect(() => {\n        fetchYesteday();\n        fetchLastWeek();\n        fetchLastMonth();\n        fetchLastYear();\n    }, [])\n\n    const annotationLineStyles = {\n        stroke : \"rgb(80, 80, 80)\",\n        lineDash : [10, 5],\n        lineWidth : 2,\n        opacity : 0.75\n    };\n\n    const gradientFill = {\n        fill: 'l(270) 0:#af7bb4b2 1:#165481ad',\n    };\n\n    const yesterday_config_1 = {\n        xField: 'hour',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getYesterdayStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getYesterdayStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getYesterdayStatsData(\"amount_avg\")],\n                end : ['max', getYesterdayStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            hour : {\n                alias : \"Time\",\n                formatter : (hour) => {\n                    \n                    if(hour[0] == '0') return hour.substring(1);\n                    return hour;\n                },\n            },\n            total_amount : {\n                alias : \"Amount\",\n                formatter : (amount) => {\n                    return `$ ${commaNumber(amount)}`\n                }\n            }\n        },\n        xAxis : {\n            tickCount : 24,\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n    \n\n    const yesterday_config_2 = {\n        xField: 'hour',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getYesterdayStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getYesterdayStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getYesterdayStatsData(\"count_avg\")],\n                end : ['max', getYesterdayStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            hour : {\n                alias : \"Time\",\n                formatter : (hour) => {\n                    \n                    if(hour[0] == '0') return hour.substring(1);\n                    return hour;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        xAxis : {\n            tickCount : 24,\n        },\n        smooth : true\n    };\n\n    const lastWeek_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastWeekStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastWeekStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastWeekStatsData(\"amount_avg\")],\n                end : ['max', getLastWeekStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, Do MMMM\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastWeek_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastWeekStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastWeekStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastWeekStatsData(\"count_avg\")],\n                end : ['max', getLastWeekStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, DD MMMM\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastMonth_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastMonthStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastMonthStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastMonthStatsData(\"amount_avg\")],\n                end : ['max', getLastMonthStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastMonth_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastMonthStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastMonthStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastMonthStatsData(\"count_avg\")],\n                end : ['max', getLastMonthStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastYear_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastYearStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastYearStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastYearStatsData(\"amount_avg\")],\n                end : ['max', getLastYearStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    const mdate = moment(date, 'YYYY/M').format(\"Do MMM, YYYY (ddd)\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastYear_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastYearStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastYearStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastYearStatsData(\"count_avg\")],\n                end : ['max', getLastYearStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    const mdate = moment(date, 'YYYY/M').format(\"MMMM d, YYYY (dddd)\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n\n    return (\n        <div className=\" statistic-wrapper sheet\" style={{minHeight : \"90vh\"}}>\n\n<div className=\"sheet menu range-picker\">\n                <h3>Show for a Custom Time Range</h3>\n                <Space>\n                    <RangePicker onCalendarChange={(dates) => {if(dates.length) setDates(dates)}} />\n                    <Button onClick={() => fetchCustomDateRangeData()} icon={<AreaChartOutlined />} shape=\"round\" type=\"primary\">Get data</Button>\n                </Space>\n            </div>\n\n            {!customAggregateData && \n            \n            <Row>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Yesterday</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(0)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!yesterday_statistic} title='Amount' prefix={<DollarOutlined/>} value={yesterday_statistic && commaNumber(yesterday_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!yesterday_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={yesterday_statistic && commaNumber(yesterday_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Week</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(1)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastWeek_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastWeek_statistic && commaNumber(lastWeek_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastWeek_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastWeek_statistic && commaNumber(lastWeek_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Month</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(2)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastMonth_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastMonth_statistic && commaNumber(lastMonth_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastMonth_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastMonth_statistic && commaNumber(lastMonth_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Year</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(3)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastYear_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastYear_statistic && commaNumber(lastYear_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastYear_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastYear_statistic && commaNumber(lastYear_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n        </Row>    \n\n            }\n\n            \n            \n            {customAggregateData && \n                <div className=\"sheet\">\n                    <div style={{display : \"flex\", flexFlow : \"row\", justifyContent : \"space-between\", alignItems : \"center\"}}>\n                        { dates.length == 2 && <h2>Viewing Data from {dates[0].format(\"Do MMMM, YYYY\")} to {dates[1].format(\"Do MMMM, YYYY\")}</h2> }\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setAggregateDataType(val === \"Amount\")} />\n                    </div>\n                {aggregateDataType ? \n                    \n                    <>\n                        <h3>Amount vs Date</h3>\n                        <div className=\"chart-wrapper\">\n                            <Area data={customAggregateData} {...lastMonth_config_1}></Area>\n                        </div>\n                    </>\n                : \n                    <>\n                        <h3>Invoice Count vs Date</h3>\n                        <div className=\"chart-wrapper\">\n                            <Area data={customAggregateData} {...lastMonth_config_2}></Area>\n                        </div>\n                    </>\n                }\n                </div>\n            }\n            <div className=\"sheet\">\n                \n                <Carousel ref={ref => carousel_ref.current = ref} dotPosition='top' autoplaySpeed={5000}>\n\n                {/* YESTERDAY'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Yesterday's Hourly Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setYesterday_type_amount(val === \"Amount\")} />\n                    </div>\n                    {yesterday_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Hour</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={yesterday} {...yesterday_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Hour</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={yesterday} {...yesterday_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST WEEK'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Weeks's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastWeek_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastWeek_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastWeek} {...lastWeek_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastWeek} {...lastWeek_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                </div>\n\n                {/* LAST MONTH'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Month's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastMonth_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastMonth_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastMonth} {...lastMonth_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastMonth} {...lastMonth_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST YEAR'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Year's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastYear_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastYear_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastYear} {...lastYear_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastYear} {...lastYear_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n                    \n                </Carousel>\n            </div>\n            \n        </div>\n    )\n}\n\n\n\nexport default Dashboard;","import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { apiCall, getDateObject } from '../../helpers';\nimport gradient from 'random-gradient';\nimport \"./styles/ViewInvoiceSheet.css\"\nimport { Col, Divider, Tag, Row, Button, Table, Skeleton } from 'antd';\nimport StatusTag from './snippets/StatusTag';\nimport { RollbackOutlined } from '@ant-design/icons';\nimport { useAuthHeader } from 'react-auth-kit';\n\nconst getSymbolFromCurrency = require('currency-symbol-map')\nconst hdate = require(\"human-date\");\n\nfunction toTitleCase(str) {\n    return str.replace(\n      /\\w\\S*/g,\n      function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n    );\n  }\n\nconst cols = [\n    {\n        title : \"No.\",\n        dataIndex : \"dummy\",\n        key : \"dummy\",\n        render : (t, o, index) => {\n            return index + 1;\n        }\n    },\n    {\n        title : \"Description\",\n        dataIndex : \"description\",\n        key : \"description\"\n    },\n    {\n        title : \"Type\",\n        dataIndex : \"price\",\n        render : (price) => {\n            let s = toTitleCase(price.type);\n            s = s.replaceAll('_', ' ');\n            return s;\n        },\n        key : \"type\"\n    },\n    {\n        title : \"Quantity\",\n        dataIndex : \"quantity\",\n        key : \"quantity\"\n    },\n    {\n        title : \"Amount\",\n        dataIndex : \"amount\",\n        key : \"amount\",\n        render : (amount, invoice) => {\n            \n          return getSymbolFromCurrency(invoice.currency) + Math.round(amount/100);\n        }\n    }\n]\n\nconst ViewInvoiceSheet = () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    let { invoice_id } = useParams();\n    const [invoice, setInvoice] = useState({});\n    const [items, setItems] = useState([]);\n    \n    useEffect(() => {\n      \n        apiCall(\"/invoices/retrieve\", {invoice_id}, (response) => {\n            const invoice = response.data.data;\n            // console.log(invoice_id, bg)\n\n\n            setInvoice(invoice);\n            setItems(invoice.lines.data);\n        }, authHeader(), null, navigate);\n    }, [])\n    \n\n    return (\n        <div className='sheet'>\n            <div className='sheet envelope no-margin' >\n                {invoice.id ?\n                    <>\n                        <div>\n                            <h1>{(invoice.customer_name) ? `${invoice.customer_name.split(\" \")[0]}'s Invoice` : \"Invoice\"} </h1>\n                            <h3>{invoice.number} for {getSymbolFromCurrency(invoice.currency) + invoice.amount_due}  </h3>\n                            <h3>Due in {hdate.relativeTime(getDateObject(invoice.due_date))}.  </h3>\n                        </div>\n                        <div className='envelope-sub'>\n                            <div className=\"row\">\n                                <div>Invoice ID :</div>\n                                <div><Tag >{invoice.id}</Tag></div>\n                            </div>\n                            <div className=\"row\">\n                                <div>Charge Date : </div>\n                                <div><Tag >{hdate.prettyPrint(getDateObject(invoice.created), { showTime : true })}</Tag></div>\n                            </div>\n                            <div className=\"row\" style={{marginTop : '1.2em', display : 'flex', justifyContent : 'flex-end', marginRight : '0.2em'}}>\n                                <Button size='huge' type='primary' danger icon={<RollbackOutlined/>} >Refund</Button>\n                            </div>\n                        </div>\n                    </>\n                    :\n                    <Skeleton active />\n                }\n            </div>\n            {invoice.id ?\n            \n            <div className=\"sheet no-margin invoice-container\">\n                <Row gutter={16}>\n                    <Col span={8}>\n                        <h2>From</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        <h3>{invoice.account_name}</h3>\n\n                    </Col>\n                    <Col span={8}>\n                        <h2>To</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        {invoice.customer_name && <h4>Name : {invoice.customer_name}</h4>}\n                        {invoice.customer_email && <h4>Email : {invoice.customer_email}</h4>}\n                        {invoice.customer_address && <h4>Address : {invoice.customer_address}</h4>}\n                        {invoice.customer_phone && <h4>Phone : {invoice.customer_phone}</h4>}\n                    </Col>\n                    <Col span={8}>\n                        <h2>Details</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        <h4>Invoice total : {getSymbolFromCurrency(invoice.currency)}{Math.round(invoice.amount_due/100)}</h4>\n                        <h4>Status : <StatusTag status={invoice.status}/></h4>\n\n                    </Col>\n                </Row>\n\n                <Divider/>\n                <Table columns={cols} dataSource={items} />\n            </div>\n                :\n            <Skeleton active />\n            }\n            <Divider/>\n        </div>\n    )\n}\n\n\n\nexport default ViewInvoiceSheet;","import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { apiCall, getDateObject, reportVerbose } from '../../helpers';\nimport \"./styles/ViewInvoiceSheet.css\"\nimport \"./styles/ViewReportSheet.css\"\nimport { Col, Divider, Tag, Row, Button, Table, Skeleton, Segmented, Space, DatePicker, Result, Select, notification } from 'antd';\nimport { useAuthHeader, useIsAuthenticated } from 'react-auth-kit';\nimport { AuditOutlined, BookOutlined, CloudDownloadOutlined, DownloadOutlined, LoadingOutlined, RollbackOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nconst getSymbolFromCurrency = require('currency-symbol-map')\nconst hdate = require(\"human-date\");\nconst commaNumber = require('comma-number')\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\n\nfunction toTitleCase(str) {\n    return str.replace(\n      /\\w\\S*/g,\n      function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n    );\n}\n\n\nconst categories = {\n    \"Balance\" : {\n        1 : \"balance.summary.1\",\n        2 : \"balance_change_from_activity.summary.1\",\n        3 : \"balance_change_from_activity.itemized.3\",\n        4 : \"payouts.summary.1\",\n        5 : \"payouts.itemized.3\",\n    },\n    \"Payout Reconciliation\" : {\n        6 : \"balance.summary.1\",\n        7 : \"payout_reconciliation.summary.1\",\n        8 : \"payout_reconciliation.itemized.5\",\n        9 : \"ending_balance_reconciliation.summary.1\",\n        10 : \"ending_balance_reconciliation.itemized.4\"\n    }\n}\n\nconst inv_categories = {\n        \"balance.summary.1\" : 1,\n        \"balance_change_from_activity.summary.1\" : 2,\n        \"balance_change_from_activity.itemized.3\" : 3,\n        \"payouts.summary.1\" : 4,\n        \"payouts.itemized.3\" : 5,\n        \"balance.summary.1\" : 6,\n        \"payout_reconciliation.summary.1\" : 7,\n        \"payout_reconciliation.itemized.5\" : 8,\n        \"ending_balance_reconciliation.summary.1\" : 9,\n         \"ending_balance_reconciliation.itemized.4\" : 1,\n}\n\nconst fieldNames = {\n    label : \"title\",\n    value : \"key\",\n}\n\n\n\nconst ViewReportSheet = () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    \n    const [dates, setDates] = useState([1642662478, 1658128249]);\n    const [cols, setCols] = useState([]);\n\n    const [domain, setDomain] = useState(\"Balance\");\n    const [current_page_status, setCurrent_page_status] = useState(false);\n\n    const [balance_summary_1, set_balance_summary_1] = useState(false);\n    const [balance_summary_1_cols, set_balance_summary_1_cols] = useState([]);\n    \n    \n    const [balance_change_from_activity_type, set_balance_change_from_activity_type] = useState(\"summary\");\n    const [balance_change_from_activity_summary_1, set_balance_change_from_activity_summary_1] = useState(false);\n    const [balance_change_from_activity_summary_1_cols, set_balance_change_from_activity_summary_1_cols] = useState([]);\n    const [balance_change_from_activity_itemized_3, set_balance_change_from_activity_itemized_3] = useState(false);\n    const [balance_change_from_activity_itemized_3_cols, set_balance_change_from_activity_itemized_3_cols] = useState([]);\n    \n    const [payouts_type, set_payouts_type] = useState(\"summary\");\n    const [payouts_summary_1, set_payouts_summary_1] = useState(false);\n    const [payouts_summary_1_cols, set_payouts_summary_1_cols] = useState([]);\n    const [payouts_itemized_3, set_payouts_itemized_3] = useState(false);\n    const [payouts_itemized_3_cols, set_payouts_itemized_3_cols] = useState([]);\n\n    \n    const [payout_reconciliation_type, set_payout_reconciliation_type] = useState(\"summary\");\n    const [payout_reconciliation_summary_1, set_payout_reconciliation_summary_1] = useState(false);\n    const [payout_reconciliation_summary_1_cols, set_payout_reconciliation_summary_1_cols] = useState([]);\n    const [payout_reconciliation_itemized_5, set_payout_reconciliation_itemized_5] = useState(false);\n    const [payout_reconciliation_itemized_5_cols, set_payout_reconciliation_itemized_5_cols] = useState([]);\n    \n    const [ending_balance_reconciliation_type, set_ending_balance_reconciliation_type] = useState(\"summary\");\n    const [ending_balance_reconciliation_summary_1, set_ending_balance_reconciliation_summary_1] = useState(false);\n    const [ending_balance_reconciliation_summary_1_cols, set_ending_balance_reconciliation_summary_1_cols] = useState([]);\n    const [ending_balance_reconciliation_itemized_4, set_ending_balance_reconciliation_itemized_4] = useState(false);\n    const [ending_balance_reconciliation_itemized_4_cols, set_ending_balance_reconciliation_itemized_4_cols] = useState([]);\n\n\n    useEffect(() => {\n        let start = moment().subtract(1, \"month\").startOf(\"month\").startOf(\"day\").unix();\n        let end = moment().subtract(1, \"month\").endOf(\"month\").endOf(\"day\").unix();\n        setDates([start, end]);\n\n        makeReport();\n    }, [])\n    \n\n\n\n    const fetchSetReportStateCols = (report_type) => {\n      switch (inv_categories[report_type]) {\n          case 1:\n              return set_balance_summary_1_cols;\n              break;\n              \n          case 2:\n              return set_balance_change_from_activity_summary_1_cols;\n              break;\n              \n          case 3:\n              return set_balance_change_from_activity_itemized_3_cols;\n              break;\n              \n          case 4:\n              return set_payouts_summary_1_cols;\n              break;\n              \n          case 5:\n              return set_payouts_itemized_3_cols;\n              break;\n              \n          case 6:\n              return set_balance_summary_1_cols;\n              break;\n              \n          case 7:\n              return set_payout_reconciliation_summary_1_cols;\n              break;\n              \n          case 8:\n              return set_payout_reconciliation_itemized_5_cols;\n              break;\n              \n          case 9:\n              return set_ending_balance_reconciliation_summary_1_cols;\n              break;\n              \n          case 10:\n              return set_ending_balance_reconciliation_itemized_4_cols;\n              break;\n              \n        default:\n              return console.log;\n              break;\n      }\n    }\n\n    const fetchSetReportState = (report_type) => {\n      switch (inv_categories[report_type]) {\n          case 1:\n              return set_balance_summary_1;\n              break;\n              \n          case 2:\n              return set_balance_change_from_activity_summary_1;\n              break;\n              \n          case 3:\n              return set_balance_change_from_activity_itemized_3;\n              break;\n              \n          case 4:\n              return set_payouts_summary_1;\n              break;\n              \n          case 5:\n              return set_payouts_itemized_3;\n              break;\n              \n          case 6:\n              return set_balance_summary_1;\n              break;\n              \n          case 7:\n              return set_payout_reconciliation_summary_1;\n              break;\n              \n          case 8:\n              return set_payout_reconciliation_itemized_5;\n              break;\n              \n          case 9:\n              return set_ending_balance_reconciliation_summary_1;\n              break;\n              \n          case 10:\n              return set_ending_balance_reconciliation_itemized_4;\n              break;\n              \n        default:\n              return console.log;\n              break;\n      }\n    }\n\n    const downloadAndSetFileStateContents = (report) => {\n        apiCall(\"/reports/file\", {file_id : report.result.id}, async (response) => {\n            const data = response.data.data;\n            const content = data.content;\n            const link = data.link;\n            \n            // Create and set columns\n    \n            const cols = makeColumns(content);\n            content.forEach((row, index) => {\n                row.key = index\n                if(row.category){\n                    let str = toTitleCase(row.category.replaceAll(\"_\", \" \"));\n                    if(\n                        (\n                            ( row.category == \"payouts_gross\" || row.category == \"payouts_fee\"  ) ||\n                            ( row.category == \"activity_gross\" || row.category == \"activity_fee\"  ) \n                        ) &&  \n                        report.report_type == \"balance.summary.1\"\n                    ) str = \"\\xa0\\xa0\\xa0\\xa0\" + str;\n                    row.category = str;\n                }\n                if(row.reporting_category){\n                    let str = toTitleCase(row.reporting_category.replaceAll(\"_\", \" \"));\n                    if(\n                        (\n                            ( row.category == \"payouts_gross\" || row.category == \"payouts_fee\"  ) ||\n                            ( row.category == \"activity_gross\" || row.category == \"activity_fee\"  ) \n                        ) &&  \n                        report.report_type == \"balance.summary.1\"\n                    ) str = \"\\xa0\\xa0\\xa0\\xa0\" + str;\n                    row.category = str;\n                }\n            });\n\n            apiCall(\n                \"/reports/dashboard/amount\", \n                {\n                    start : dates[0],\n                    end : dates[1],\n                },\n                (response) => {\n                    const invoice_report = response.data.data;\n\n                    const invoice_arr = [];\n\n                    const sums = {};\n\n                    invoice_report.forEach(row => {\n\n                        const type = row._id.status;\n\n                        if(!sums[type]) sums[type] = { total_amount : 0};\n\n                        \n                        \n                        sums[type].type = type;\n\n                        const voucher_type = row._id.voucher_type;\n\n                        if(voucher_type){\n                            if(!sums[voucher_type]) sums[voucher_type] = { total_amount : 0};\n\n                            sums[voucher_type].total_amount += row.total_amount/100;\n                            sums[type].total_amount += row.voucher_discount/100;\n\n                        }\n                        else{\n                            sums[type].total_amount += row.total_amount/100;\n                        }\n                        \n                        // invoice_arr.push([row._id, row.total_amount/100]);\n\n                    })\n\n                    for (const key in sums) {\n                        if (Object.hasOwnProperty.call(sums, key)) {\n                            const curr = sums[key];\n                            invoice_arr.push([curr.type, curr.total_amount]);\n                        }\n                    }\n                    // console.log(invoice_arr);\n\n                    if(report.report_type == \"balance.summary.1\"){\n                        const row = {\n                            category : \"Invoice Details\",\n                            description : \"This shows a breakdown of the total amount gained from invoices.\",\n                            net_amount : invoice_arr\n                        };\n\n                        content.push(row);\n                    }\n\n                    const reportStateObject = { content, link, cols };\n\n                    console.log(report.report_type, reportStateObject)\n\n                    fetchSetReportStateCols(report.report_type)(cols);\n                    fetchSetReportState(report.report_type)(reportStateObject);\n                    setCurrent_page_status('ready');\n                },\n                authHeader(),\n                null,\n                navigate\n            );\n            \n    \n        }, authHeader(), null, navigate);\n    }\n    \n    const makeColumns = (data) => {\n        // Create and set columns\n        let columns = [];\n    \n        for (const key in data[0]) {\n            if (Object.hasOwnProperty.call(data[0], key)) {\n    \n                const curr = {\n                    dataIndex : key,\n                    key : key,\n                    value : key,\n                };\n                let title = key.replaceAll('_', ' ');\n                curr.title = toTitleCase(title);\n                if(key == \"net_amount\"){\n                    curr.align = \"center\";\n                    curr.render = (arr) => {\n                        if(typeof arr === \"string\" || typeof arr === \"number\"){\n                            return (\n                                <span>$ {arr}</span>\n                            )\n                        }\n\n                        if(Array.isArray(arr)){                            \n                            let final = 0;\n\n                            let new_arr = [];\n                            console.log(arr);\n                            arr.forEach(row => {\n                                new_arr.push({\n                                    _id : row[0],\n                                    total_amount : row[1]\n                                })\n                                // if(row[0] === \"open\" || row[0] === \"paid\") final += row[1];\n                                // else final -= row[1];\n                                final += row[1];\n                            })\n\n                            new_arr.push({\n                                _id : \"Gross Invoiced Value\",\n                                total_amount : final\n                            })\n\n                            const cols = [\n                                {\n                                    title : \"Description\",\n                                    dataIndex : \"_id\",\n                                    key : 1,\n                                    // render : (_id) => toTitleCase(_id == \"open\" ? \"paid\" : _id)\n                                    render : (_id) => toTitleCase(_id)\n                                },\n                                {\n                                    title : \"Amount\",\n                                    dataIndex : \"total_amount\",\n                                    key : 2,\n                                    render : (amount) => '$ ' + commaNumber(amount)\n                                }\n                            ]\n\n                            return (\n                                <Table pagination={false} dataSource={new_arr} columns={cols} />\n                            )\n                        }\n                    }\n                }\n\n                columns.push(curr);\n            }\n        }\n        console.log(columns);\n        return columns;\n    }\n    \n    const createReportAndAwaitCompletion = (report_type) => {\n\n        const apiCallObject = {\n            report_type,\n            parameters : {\n                interval_end : dates[1]\n            }\n        }\n        if(!report_type.startsWith(\"ending_balance_reconciliation\")) apiCallObject.parameters.interval_start = dates[0]\n\n        apiCall(\n            \"/reports/create\",\n            apiCallObject,\n            (response) => {\n            \n            const report = response.data.data;\n            console.log(report_type, report);\n            const ah = authHeader();\n            const token = ah.split(\" \")[1];\n            const url = `ws${window.location.hostname == \"localhost\" ? \"\" : \"s\"}://${window.location.hostname}${window.location.hostname == \"localhost\" ? \":4000\" : \"\"}/?auth_token=${token}&report_id=${report.id}`\n            \n            const ws = new WebSocket(url);\n    \n            ws.addEventListener('open', function (event) {\n                console.log(`[${report_type}] Websocket connected.`);\n            })\n    \n            ws.addEventListener('message', function (event) {\n                const msg = event.data;\n                // console.log(msg, );\n                const report = JSON.parse(msg);\n                console.log(\"Websocket report : \",report_type, report);\n                downloadAndSetFileStateContents(report);\n                ws.close();\n            });\n            \n        }, authHeader(), null, navigate);\n    }\n    \n    const handleDomainChange = (option) => {\n        setDomain(option);\n    }\n    \n    const makeReport = async () => {\n        setCurrent_page_status(\"loading\");\n\n        if(dates.length != 2){\n            notification['error']({\n                message : \"Validation Error\",\n                description : \"Please select start and end dates\"\n            });\n            return;\n        }\n\n        for (const i in categories[domain]) {\n            if (Object.hasOwnProperty.call(categories[domain], i)) {\n                const report_type_desc = categories[domain][i];\n                console.log(report_type_desc);\n                createReportAndAwaitCompletion(report_type_desc);\n            }\n        }\n    }\n\n\n    return (\n        <div className='sheet main'>\n            <Space>\n            <Segmented options={[\"Balance\", \"Payout Reconciliation\"]} onChange={handleDomainChange} />\n            <RangePicker onChange={(moment_dates) => {\n                if(moment_dates.length == 2) setDates([moment_dates[0].unix(), moment_dates[1].unix()]);\n            }} defaultValue={[ moment().subtract(1, \"month\").startOf(\"month\").startOf(\"day\"), moment().subtract(1, \"month\").endOf(\"month\").endOf(\"day\")]} />\n            <Button icon={<AuditOutlined />} loading={current_page_status === \"loading\" } type='primary' onClick={makeReport} >Create Report</Button>\n            </Space>\n            <Divider />\n            \n            {!current_page_status && \n                <Result \n                    icon={<BookOutlined />}\n                    title=\"Create a Report\"\n                />\n            }\n\n            {/* {current_page_status === \"loading\" &&\n            \n            <Result \n                icon={<LoadingOutlined spin />}\n                title=\"Generating Report...\"\n            />\n            \n            } */}\n\n            {\n                domain === \"Balance\" && \n                <>\n\n                    <h2>Balance Summary</h2>\n                    <p>The Balance summary section shows your starting and ending Stripe balance for the selected date range, along with a high level summary of your activity during the period. Your balance includes funds that are available, pending, and any reserved funds, if applicable.</p>\n                    {balance_summary_1 ?\n                        <>\n\n                            <Row style={{marginBottom : \"0.8em\"}} justify=\"space-between\">\n                                <Col>\n                                    <Select \n                                        mode=\"multiple\" \n                                        options={balance_summary_1.cols} \n                                        onChange={(arr) => {\n                                            const new_arr = balance_summary_1.cols.filter((el) => {\n                                                return arr.includes(el.key)\n                                            });\n                                            set_balance_summary_1_cols(new_arr);\n                                        }}\n                                        defaultValue={() => {\n                                            let cols = [];\n                                            balance_summary_1_cols.forEach(c => cols.push(c.key));\n                                            console.log(cols);\n                                            return cols;\n                                        }}\n                                        placeholder=\"Select Columns\" \n                                        showSearch \n                                        showArrow\n                                        fieldNames={fieldNames}\n                                    >\n                                        Select Columns\n                                    </Select>\n                                </Col>\n                                <Col>\n                                    <Button target=\"_blank\" disabled={!balance_summary_1.link} href={balance_summary_1 && balance_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                        Download CSV\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                            <Table pagination={false} columns={balance_summary_1_cols} dataSource={balance_summary_1.content} >\n                                {/* {balance_summary_1_cols && balance_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)} */}\n                            </Table>\n\n                            <Divider />\n                            \n                        </>\n\n                        : \n\n                        <Skeleton active />\n                    }\n                    <br></br>\n                    <h2>\n                        Balance change from activity - \n\n                        <Select className='category-select' bordered={false} onChange={(val) => set_balance_change_from_activity_type(val)} value={balance_change_from_activity_type}>\n                            <Option value=\"summary\">Summary</Option>\n                            <Option value=\"itemized\">Itemized</Option>\n                        </Select>\n\n                    </h2>\n                    <p>The Balance change from activity section provides a more detailed breakdown of your transactions by reporting category. This section includes all transactions except for payouts that affect your balance, including charges, refunds, disputes, other adjustments, and fees.</p>\n                    \n                    {(balance_change_from_activity_summary_1 || balance_change_from_activity_itemized_3) ?\n                        <>\n                            {\n                                balance_change_from_activity_type === \"summary\" ?\n                                <>\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                            <Select \n                                                mode=\"multiple\" \n                                                options={balance_change_from_activity_summary_1.cols} \n                                                onChange={(arr) => {\n                                                    const new_arr = balance_change_from_activity_summary_1.cols.filter((el) => {\n                                                        return arr.includes(el.key)\n                                                    });\n                                                    set_balance_change_from_activity_summary_1_cols(new_arr);\n                                                }}\n                                                defaultValue={() => {\n                                                    let cols = [];\n                                                    balance_change_from_activity_summary_1_cols.forEach(c => cols.push(c.key));\n                                                    console.log(cols);\n                                                    return cols;\n                                                }}\n                                                placeholder=\"Select Columns\" \n                                                showSearch \n                                                showArrow\n                                                fieldNames={fieldNames}\n                                            >\n                                                Select Columns \n                                            </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!balance_change_from_activity_summary_1.link} href={balance_change_from_activity_summary_1 && balance_change_from_activity_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={balance_change_from_activity_summary_1.content} >\n                                        {balance_change_from_activity_summary_1_cols && balance_change_from_activity_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                                :\n                                <>\n\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                        <Select \n                                            mode=\"multiple\" \n                                            options={balance_change_from_activity_itemized_3.cols} \n                                            onChange={(arr) => {\n                                                const new_arr = balance_change_from_activity_itemized_3.cols.filter((el) => {\n                                                    return arr.includes(el.key)\n                                                });\n                                                set_balance_change_from_activity_itemized_3_cols(new_arr);\n                                            }}\n                                            defaultValue={() => {\n                                                let cols = [];\n                                                balance_change_from_activity_itemized_3_cols.forEach(c => cols.push(c.key));\n                                                console.log(cols);\n                                                return cols;\n                                            }}\n                                            placeholder=\"Select Columns\" \n                                            showSearch \n                                            showArrow\n                                            fieldNames={fieldNames}\n                                        >\n                                            Select Columns \n                                        </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!balance_change_from_activity_itemized_3.link} href={balance_change_from_activity_itemized_3 && balance_change_from_activity_itemized_3.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={balance_change_from_activity_itemized_3.content} >\n                                        {balance_change_from_activity_itemized_3_cols && balance_change_from_activity_itemized_3_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                            }\n                            \n                            <Divider />\n                        </>\n\n                        :\n\n                        <Skeleton active />\n                    }\n\n                    <br></br>\n                    <h2>    \n                        Payouts - \n\n                        <Select className='category-select' bordered={false} onChange={(val) => set_payouts_type(val)} value={payouts_type}>\n                            <Option value=\"summary\">Summary</Option>\n                            <Option value=\"itemized\">Itemized</Option>\n                        </Select>\n\n                    </h2>\n                    <p>The Payouts section provides the quantity and total amount of payouts to your bank account during the period. You can download a list of individual payout transactions by clicking the Download button.</p>\n                    \n                    { (payouts_summary_1 || payouts_itemized_3) ?\n                        <>\n\n\n\n                            {\n                                payouts_type === \"summary\" ?\n                                <>\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                            <Select \n                                                mode=\"multiple\" \n                                                options={payouts_summary_1.cols} \n                                                onChange={(arr) => {\n                                                    const new_arr = payouts_summary_1.cols.filter((el) => {\n                                                        return arr.includes(el.key)\n                                                    });\n                                                    set_payouts_summary_1_cols(new_arr);\n                                                }}\n                                                defaultValue={() => {\n                                                    let cols = [];\n                                                    payouts_summary_1_cols.forEach(c => cols.push(c.key));\n                                                    console.log(cols);\n                                                    return cols;\n                                                }}\n                                                placeholder=\"Select Columns\" \n                                                showSearch \n                                                showArrow\n                                                fieldNames={fieldNames}\n                                            >\n                                                Select Columns \n                                            </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!payouts_summary_1.link} href={payouts_summary_1 && payouts_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={payouts_summary_1.content} >\n                                        {payouts_summary_1_cols && payouts_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                                :\n                                <>\n\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                        <Select \n                                            mode=\"multiple\" \n                                            options={payouts_itemized_3.cols} \n                                            onChange={(arr) => {\n                                                const new_arr = payouts_itemized_3.cols.filter((el) => {\n                                                    return arr.includes(el.key)\n                                                });\n                                                set_payouts_itemized_3_cols(new_arr);\n                                            }}\n                                            defaultValue={() => {\n                                                let cols = [];\n                                                payouts_itemized_3_cols.forEach(c => cols.push(c.key));\n                                                console.log(cols);\n                                                return cols;\n                                            }}\n                                            placeholder=\"Select Columns\" \n                                            showSearch \n                                            showArrow\n                                            fieldNames={fieldNames}\n                                        >\n                                            Select Columns \n                                        </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!payouts_itemized_3.link} href={payouts_itemized_3 && payouts_itemized_3.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={payouts_itemized_3.content} >\n                                        {payouts_itemized_3_cols && payouts_itemized_3_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                            }\n                            \n                            <Divider />\n                        </>\n\n                        :\n\n                        <Skeleton active />\n                    }\n\n                </>\n            }\n\n            {\n                domain == \"Payout Reconciliation\" &&\n                <>\n\n                    <h2>Balance Summary</h2>\n                    <p>The Balance summary section shows your starting and ending Stripe balance for the selected date range, along with a high level summary of your activity during the period. Your balance includes funds that are available, pending, and any reserved funds, if applicable.</p>\n                    { balance_summary_1 ?\n                        <>\n                            <Row style={{marginBottom : \"0.8em\"}} justify=\"space-between\">\n                                <Col>\n                                    <Select \n                                        mode=\"multiple\" \n                                        options={balance_summary_1.cols} \n                                        onChange={(arr) => {\n                                            const new_arr = balance_summary_1.cols.filter((el) => {\n                                                return arr.includes(el.key)\n                                            });\n                                            set_balance_summary_1_cols(new_arr);\n                                        }}\n                                        defaultValue={() => {\n                                            let cols = [];\n                                            balance_summary_1_cols.forEach(c => cols.push(c.key));\n                                            console.log(cols);\n                                            return cols;\n                                        }}\n                                        placeholder=\"Select Columns\" \n                                        showSearch \n                                        showArrow\n                                        fieldNames={fieldNames}\n                                    >\n                                        Select Columns\n                                    </Select>\n                                </Col>\n                                <Col>\n                                    <Button target=\"_blank\" disabled={!balance_summary_1.link} href={balance_summary_1 && balance_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                        Download CSV\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                            <Table pagination={false} columns={balance_summary_1_cols} dataSource={balance_summary_1.content} >\n                                {/* {balance_summary_1_cols && balance_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)} */}\n                            </Table>\n\n                            <Divider />\n                            \n                        </>\n\n                        :\n\n                        <Skeleton active />\n                    }\n\n                    <h2>\n                        Payout Reconciliation - \n\n                        <Select className='category-select' bordered={false} onChange={(val) => set_payout_reconciliation_type(val)} value={balance_change_from_activity_type}>\n                            <Option value=\"summary\">Summary</Option>\n                            <Option value=\"itemized\">Itemized</Option>\n                        </Select>\n\n                    </h2>\n                    <p>The Payout reconciliation section provides a breakdown of the automatic payouts that were received in your bank account during the selected date range. The transactions included in those settlement batches are grouped by reporting category.</p>\n                    {(payout_reconciliation_summary_1 || payout_reconciliation_itemized_5) ?\n                        <>\n\n\n\n                            {\n                                payout_reconciliation_type === \"summary\" ?\n                                <>\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                            <Select \n                                                mode=\"multiple\" \n                                                options={payout_reconciliation_summary_1.cols} \n                                                onChange={(arr) => {\n                                                    const new_arr = payout_reconciliation_summary_1.cols.filter((el) => {\n                                                        return arr.includes(el.key)\n                                                    });\n                                                    set_payout_reconciliation_summary_1_cols(new_arr);\n                                                }}\n                                                defaultValue={() => {\n                                                    let cols = [];\n                                                    payout_reconciliation_summary_1_cols.forEach(c => cols.push(c.key));\n                                                    console.log(cols);\n                                                    return cols;\n                                                }}\n                                                placeholder=\"Select Columns\" \n                                                showSearch \n                                                showArrow\n                                                fieldNames={fieldNames}\n                                            >\n                                                Select Columns \n                                            </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!payout_reconciliation_summary_1.link} href={payout_reconciliation_summary_1 && payout_reconciliation_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={payout_reconciliation_summary_1.content} >\n                                        {payout_reconciliation_summary_1_cols && payout_reconciliation_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                                :\n                                <>\n\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                        <Select \n                                            mode=\"multiple\" \n                                            options={payout_reconciliation_itemized_5.cols} \n                                            onChange={(arr) => {\n                                                const new_arr = payout_reconciliation_itemized_5.cols.filter((el) => {\n                                                    return arr.includes(el.key)\n                                                });\n                                                set_payout_reconciliation_itemized_5_cols(new_arr);\n                                            }}\n                                            defaultValue={() => {\n                                                let cols = [];\n                                                payout_reconciliation_itemized_5_cols.forEach(c => cols.push(c.key));\n                                                console.log(cols);\n                                                return cols;\n                                            }}\n                                            placeholder=\"Select Columns\" \n                                            showSearch \n                                            showArrow\n                                            fieldNames={fieldNames}\n                                        >\n                                            Select Columns \n                                        </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!payout_reconciliation_itemized_5.link} href={payout_reconciliation_itemized_5 && payout_reconciliation_itemized_5.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={payout_reconciliation_itemized_5.content} >\n                                        {payout_reconciliation_itemized_5_cols && payout_reconciliation_itemized_5_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                            }\n                            \n                            <Divider />\n                        </>\n\n                        :\n\n                        <Skeleton active />\n                    }\n\n                    <br></br>   \n                    <h2>    \n                        Ending Balance Reconciliation - \n\n                        <Select className='category-select' bordered={false} onChange={(val) => set_ending_balance_reconciliation_type(val)} value={payouts_type}>\n                            <Option value=\"summary\">Summary</Option>\n                            <Option value=\"itemized\">Itemized</Option>\n                        </Select>\n\n                    </h2>\n                    <p>The Ending balance reconciliation section provides a similar breakdown of the transactions that hadn’t been settled as of the report’s end date.</p>\n                    {(ending_balance_reconciliation_summary_1 || ending_balance_reconciliation_itemized_4) ?\n                        <>\n\n\n\n                            {\n                                payouts_type === \"summary\" ?\n                                <>\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                            <Select \n                                                mode=\"multiple\" \n                                                options={ending_balance_reconciliation_summary_1.cols} \n                                                onChange={(arr) => {\n                                                    const new_arr = ending_balance_reconciliation_summary_1.cols.filter((el) => {\n                                                        return arr.includes(el.key)\n                                                    });\n                                                    set_ending_balance_reconciliation_summary_1_cols(new_arr);\n                                                }}\n                                                defaultValue={() => {\n                                                    let cols = [];\n                                                    ending_balance_reconciliation_summary_1_cols.forEach(c => cols.push(c.key));\n                                                    return cols;\n                                                }}\n                                                placeholder=\"Select Columns\" \n                                                showSearch \n                                                showArrow\n                                                fieldNames={fieldNames}\n                                            >\n                                                Select Columns \n                                            </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!ending_balance_reconciliation_summary_1.link} href={ending_balance_reconciliation_summary_1 && ending_balance_reconciliation_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={ending_balance_reconciliation_summary_1.content} >\n                                        {ending_balance_reconciliation_summary_1_cols && ending_balance_reconciliation_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                                :\n                                <>\n\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                        <Select \n                                            mode=\"multiple\" \n                                            options={ending_balance_reconciliation_itemized_4.cols} \n                                            onChange={(arr) => {\n                                                const new_arr = ending_balance_reconciliation_itemized_4.cols.filter((el) => {\n                                                    return arr.includes(el.key)\n                                                });\n                                                set_ending_balance_reconciliation_itemized_4_cols(new_arr);\n                                            }}\n                                            defaultValue={() => {\n                                                let cols = [];\n                                                ending_balance_reconciliation_itemized_4_cols.forEach(c => cols.push(c.key));\n                                                console.log(cols);\n                                                return cols;\n                                            }}\n                                            placeholder=\"Select Columns\" \n                                            showSearch \n                                            showArrow\n                                            fieldNames={fieldNames}\n                                        >\n                                            Select Columns \n                                        </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!ending_balance_reconciliation_itemized_4.link} href={ending_balance_reconciliation_itemized_4 && ending_balance_reconciliation_itemized_4.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={ending_balance_reconciliation_itemized_4.content} >\n                                        {ending_balance_reconciliation_itemized_4_cols && ending_balance_reconciliation_itemized_4_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                            }\n                            \n                            <Divider />\n                        </>\n\n                        :\n\n                        <Skeleton active />\n                    }\n\n                </>\n            }\n\n\n        </div>\n    )\n}\n\n\n\nexport default ViewReportSheet;","import React, {useState, useEffect} from 'react'\nimport { AreaChartOutlined, BookOutlined, LayoutOutlined, LogoutOutlined, UserOutlined } from '@ant-design/icons';\nimport { Affix, Button, Menu } from 'antd';\nimport Layout from 'antd/lib/layout/layout';\nimport Sider from 'antd/lib/layout/Sider';\nimport { useAuthUser, useSignOut } from 'react-auth-kit';\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { MenuItem } from 'semantic-ui-react';\nimport { ListInvoicesSheet, ListReportsSheet, ListUsersSheet } from '.';\nimport Dashboard from './Dashboard';\nimport ViewInvoiceSheet from './ViewInvoiceSheet';\nimport ViewReportSheet from './ViewReportSheet';\n\n\nfunction getItem(label, key, icon, items) {\n    return {\n      key,\n      icon,\n      items,\n      label,\n    };\n  }\n  \n\n  \n\nexport default () => {\n\n    const navigate = useNavigate();\n    const auth_user = useAuthUser();\n    const signOutFunction = useSignOut();\n\n    const [collapsed, setCollapsed] = useState(true);\n    const [user, setUser] = useState(false);\n\n\n    const signOut = () => {\n        signOutFunction();\n        navigate(\"/\");\n    }\n\n    const toggleSideBar = () => {\n        setCollapsed(!collapsed);\n    }\n\n    // Check user permissions and display Sidebar menu accordingly.\n    useEffect(() => {\n        const user = auth_user();\n        console.log(user);\n        setUser(user);\n\n    }, [])\n    \n\n\n    return (\n        <Layout style={{minHeight : '100vh'}}>\n            <Affix> \n                <Menu className='menubar' theme=\"dark\" style={{backgroundColor : \"red !important\"}} mode='horizontal'>\n\n                    <Menu.Item onClick={signOut} style={{marginLeft : \"auto\"}} icon={<LogoutOutlined/>}>\n                        Sign Out\n                    </Menu.Item>\n                    {/* <Menu.SubMenu style={{marginLeft : \"auto\"}} title={<Button icon={<LogoutOutlined />}>Sign Out</Button>}>\n                    \n                    </Menu.SubMenu> */}\n                </Menu>\n            </Affix>\n            <Layout>\n            <Sider trigger={null} onMouseEnter={toggleSideBar} onMouseLeave={toggleSideBar} collapsible collapsed={collapsed}>\n                <Menu\n                theme=\"dark\"\n                mode=\"inline\"\n                // items={items}\n                >\n                    <Menu.Item key={0}  icon={<AreaChartOutlined className='sidebar-icon' />}>\n                        <Link to=\"/sheet\">\n                            {!collapsed && \"Dashboard\"}\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key={1}  icon={<LayoutOutlined className='sidebar-icon' />}>\n                        <Link to=\"/sheet/invoice/list\">\n                            {!collapsed && \"Access Invoices\"}\n                        </Link>\n                    </Menu.Item>\n                    {user && \n                        <>\n                            {(user.isAdmin || user.general_permissions.access_reports) && \n                                <Menu.Item key={2}  icon={<BookOutlined className='sidebar-icon' />}>\n                                    <Link to=\"/sheet/report/view\">\n                                        {!collapsed && \"Check Reports\"}\n                                    </Link>\n                                </Menu.Item>\n                            }\n                            {(user.isAdmin || user.general_permissions.manage_users) && \n                                <Menu.Item key={3}  icon={<UserOutlined className='sidebar-icon' />}>\n                                    <Link to=\"/sheet/users/list\">\n                                        {!collapsed && \"Manage Users\"}\n                                    </Link>\n                                </Menu.Item>\n                            }\n                        </>\n                    }\n                </Menu>\n            </Sider>\n            <Layout>\n            <Routes>\n                <Route path=\"\" element={<Dashboard/>} />\n                <Route path=\"invoice/list\" element={<ListInvoicesSheet/>} />\n                <Route path=\"invoice/view/:invoice_id\" element={<ViewInvoiceSheet/>} />\n                <Route path=\"report/list\" element={<ListReportsSheet/>} />\n                <Route path=\"report/view/\" element={<ViewReportSheet/>} />\n                <Route path=\"users/list\" element={<ListUsersSheet/>} />\n            </Routes>\n            </Layout>\n            </Layout>\n            \n        </Layout>\n    )\n}\n","import React, { useState } from 'react'\nimport \"./Login.css\"\nimport { Alert, Button, Divider, Input, Space, Tabs } from 'antd'\nimport { ExclamationCircleOutlined, LockOutlined, LoginOutlined, UserAddOutlined, UserOutlined } from '@ant-design/icons';\nimport Wave from \"react-wavify\";\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { apiCall } from '../../helpers';\nimport { useSignIn } from 'react-auth-kit';\n\nconst Login = () => {\n\n    const [login_email, setLogin_email] = useState(\"hrushikeshchapke@gmail.com\");\n    const [login_password, setLogin_password] = useState(\"password\");\n    const [register_email, setRegister_email] = useState(\"\");\n    const [register_password, setRegister_password] = useState(\"\");\n    const [register_password_confirm, setRegister_password_confirm] = useState(\"\");\n\n    const [login_errors, setLogin_errors] = useState([]);\n    const [register_errors, setRegister_errors] = useState([]);\n\n    const signIn = useSignIn()\n    const navigate = useNavigate();\n\n\n    const tryLogin = () => {\n        let errors = [];\n\n        if(!login_email) errors.push(\"Please enter a valid e-mail.\");\n        if(!login_password) errors.push(\"Please enter your password.\");\n\n        if(errors.length > 0){\n            setLogin_errors(errors);\n            return;\n        }\n\n\n        apiCall(\"/auth/login\", {\n            email : login_email,\n            password : login_password\n        }, (response, error) => {\n            console.log(\"LOGIN CALL RESPONSE\",response, error);\n            \n            if(response.data.token){\n                if(signIn({\n                    token: response.data.token,\n                    expiresIn: 86400,\n                    tokenType: \"Bearer\",\n                    authState: response.data.user,\n                })){\n                    navigate('/sheet/');        \n                }\n                \n            }\n        })\n    }\n\n    const tryRegister = () => {\n        let errors = [];\n\n        if(!register_email) errors.push(\"Please enter a valid e-mail.\");\n        if(!register_password) errors.push(\"Please enter your password.\");\n        if(!register_password_confirm) errors.push(\"Please confirm your password.\");\n        if(register_password !== register_password_confirm) errors.push(\"Your passwords don't match, please try again.\");\n\n        if(errors.length > 0){\n            setRegister_errors(errors);\n            return;\n        }\n\n        apiCall(\"/auth/register\", {\n            email : register_email,\n            password : register_password\n        }, (response, error) => {\n            console.log(\"REGISTER CALL RESPONSE\",response, error);\n            \n            if(response.data.token){\n                if(signIn({\n                    token: response.data.token,\n                    expiresIn: 86400,\n                    tokenType: \"Bearer\",\n                    authState: response.data.user,\n                })){\n                    navigate('/sheet/');        \n                }\n                \n            }\n        })\n\n\n    }\n\n    return (\n\n        <div className=\"login-container\">\n            <Wave fill='#7a7a7a2f'\n                paused={false}\n                options={{\n                height: 360,\n                amplitude: 40,\n                speed: 0.15,\n                points: 8\n                }}\n                style={{position : \"absolute\", bottom : '0px', top : '0px', zIndex : '2 !important'}}\n            />\n            <div className=\"sheet login\">\n                <Tabs tabPosition='bottom'>\n                    <Tabs.TabPane tab=\"Login\" key={1} >\n                        <Space direction='vertical' align='center' className='fields-container'>\n                        <h2 style={{textDecoration : \"underline\"}}>Login</h2>\n                        <Input onChange={(e) => setLogin_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\n                        <Input onChange={(e) => setLogin_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\n                        <a className='forgot-btn' href=\"#\">Forgot Password?</a>\n                        {login_errors.map((error, index) => {\n                            return (\n                                <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\n                            )\n                        })}\n                        <br></br>\n                        <Button type='primary' onClick={() => tryLogin()} icon={<LoginOutlined/>}>Login</Button>\n                        <br></br>\n                        </Space>\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Register\" key={2} >\n                        <Space direction='vertical' align='center' className='fields-container'>\n                            <h2 style={{textDecoration : \"underline\"}}>Register</h2>\n                            <Input onChange={(e) => setRegister_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\n                            <Input onChange={(e) => setRegister_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\n                            <Input onChange={(e) => setRegister_password_confirm(e.target.value)} type=\"password\" placeholder='Confirm password' prefix={<LockOutlined />} />\n                            {register_errors.map((error, index) => {\n                                return (\n                                    <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\n                                )\n                            })}\n                            <br></br>\n                            <Button onClick={() => tryRegister()} type='primary' icon={<UserAddOutlined/>}>Register</Button>\n                            <br></br>\n                        </Space>\n                    </Tabs.TabPane>\n                </Tabs>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react'\nimport { Route, Routes } from \"react-router-dom\";\nimport Login from \"./Login\";\n\n\n// ReactDOM.render(<App />, document.getElementById('root'))\n\nexport default () => {\n    return (\n        <Routes>\n            <Route path=\"\" element={<Login/>} />\n        </Routes>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport SheetRoutes from './pages/sheets/SheetRoutes'\nimport AuthRoutes from './pages/auth/AuthRoutes'\n// ReactDOM.render(<App />, document.getElementById('root'))\nimport { AuthProvider, RequireAuth } from 'react-auth-kit'\n\nReactDOM.render(\n    \n    <AuthProvider\n        authType='cookie'\n        authName='_auth'\n        expiresIn={86400}\n        cookieDomain={window.location.hostname}\n        cookieSecure={window.location.protocol === \"https:\"}\n    >\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={ <AuthRoutes/> } />\n\n                <Route path=\"sheet/*\" element={\n                    <RequireAuth loginPath={'/'}>\n                        <SheetRoutes/>\n                    </RequireAuth>\n                }></Route>\n            </Routes>\n        </Router>\n    </AuthProvider>\n    ,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}