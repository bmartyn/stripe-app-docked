{"version":3,"sources":["serviceWorker.js","helpers.js","pages/sheets/snippets/StatusTag.jsx","pages/sheets/ListInvoicesSheet.jsx","pages/sheets/ListReportsSheet.jsx","pages/sheets/ListUsersSheet.jsx","pages/sheets/Dashboard.jsx","pages/sheets/ViewInvoiceSheet.jsx","pages/sheets/ViewReportSheet.jsx","pages/sheets/SheetRoutes.jsx","pages/auth/Login.jsx","pages/auth/AuthRoutes.jsx","index.js"],"names":["Boolean","window","location","hostname","match","backend_api_url","concat","protocol","API_URL","apiCall","route","data","callback","token","loadingCallbackState","navigate","axios","post","headers","Authorization","then","catch","error","ReportError","axios_response","notif","console","log","message","response","notification","description","status","raw","Array","isArray","forEach","element","statusText","getDateObject","seconds","t","Date","setSeconds","getStatusColor","color","StatusTag","_ref","faint","react_default","a","createElement","tag","style","opacity","toUpperCase","RangePicker","DatePicker","Option","Select","hdate","require","changeStatus","new_status","invoice_id","auth_token","fetchInvoices","changeLabel","waiver_amount","voucher_amount","actionsMenu","invoice","modalFunction","menu","items","key","label","react_router_dom","to","es_button","type","icon","LayoutOutlined","block","children","onClick","danger","RollbackOutlined","e","onChange","pagination","filters","sorter","extra","ListInvoicesSheet","start","end","authHeader","useAuthHeader","useNavigate","_useState","useState","_useState2","Object","slicedToArray","invoices","setInvoices","_useState3","_useState4","loading","setLoading","_useState5","_useState6","dates","setDates","_useState7","_useState8","isModalVisible","setIsModalVisible","_useState9","_useState10","currentInvoice","setCurrentInvoice","_useState11","_useState12","coupans","setCoupans","_useState13","_useState14","isLoading","setIsLoading","_useState15","_useState16","selectedCoupan","setSelectedCoupan","_useState17","_useState18","selectedModalType","setModalType","_useState19","_useState20","voucherAmount","setVoucherAmount","created","gte","lte","r","row","index","created_verbose","prettyPrint","showTime","onChangeCoupans","value","JSON","parse","showModal","modalType","columns","title","dataIndex","align","render","amount","getSymbolFromCurrency","currency","Math","round","amount_due","printAmount","_invoice$metadata","metadata","floor","metadata_marked_status","marked_status","snippets_StatusTag","text","onFilter","record","hasOwnProperty","custom_status","dropdown","arrow","overlay","placement","space","DownOutlined","useEffect","moment","startOf","unix","subtract","endOf","options","map","item","id","stringify","amount_off","className","onCalendarChange","length","defaultValue","fetchCustomDateRangeData","OrderedListOutlined","shape","table","dataSource","modal","destroyOnClose","visible","onOk","onCancel","okButtonProps","disabled","account_name","customer_email","toLowerCase","es_select","placeholder","input","target","prefix","ListReportsSheet","reports","setReports","report_type","dict","balance.summary.1","balance_change_from_activity.summary.1","balance_change_from_activity.itemized.3","payouts.summary.1","payouts.itemized.3","payout_reconciliation.summary.1","payout_reconciliation.itemized.5","ending_balance_reconciliation.summary.1","replaceAll","reportVerbose","size","report","commaNumber","result","parameters","interval_start","interval_end","colSpan","report_id","BookOutlined","MinusCircleOutlined","String","prototype","toProperCase","this","replace","txt","charAt","substr","Search","Input","isChecked","selectedKeys","eventKey","includes","generateTree","treeNodes","arguments","undefined","checkedKeys","props","objectWithoutProperties","_excluded","objectSpread2","TreeTransfer","_ref2","targetKeys","restProps","_excluded2","transferDataSource","flatten","push","transfer","assign","showSelectAll","_ref3","direction","onItemSelect","toConsumableArray","tree","blockNode","checkable","checkStrictly","defaultExpandAll","treeData","onCheck","_","_ref4","node","onSelect","_ref5","TreeTransferComponent","_ref6","user_id","current_permissions","permissions","setTargetKeys","changed","setChanged","setPermissions","_ref7","asyncToGenerator","_regeneratorRuntime","mark","_callee","_invoice_permissions","permissions_bundle","update","_permissions2","permission","allow_status","wrap","_context","prev","next","invoice_permissions","set_refund","set_to_be_refund","set_paid","set_invoiced_in_error","set_waiver","set_voucher","defineProperty","report_permissions","balance_summary_1","balance_change_from_activity_summary_1","balance_change_from_activity_itemized_3","payouts_summary_1","payouts_itemized_3","payout_reconciliation_summary_1","payout_reconciliation_itemized_5","ending_balance_reconciliation_summary_1","general_permissions","view_invoice","access_reports","manage_users","allow_key","permission_type","call","permission_updates","stop","apply","Fragment","ListUsersSheet_TreeTransfer","keys","display","justifyContent","marginTop","SafetyOutlined","ListUsersSheet","users","setUsers","param","setParam","fetchUsers","isActive","user","es_switch","checked","unCheckedChildren","checkedChildren","Switch","toggleAccount","arr","current","permission_category","permission_group","collapse","CollapsePanel_default","header","ListUsersSheet_TreeTransferComponent","onSearch","Dashboard","carousel_ref","useRef","yesterday","setYesterday","yesterday_statistic","setYesterday_statistic","yesterday_type_amount","setYesterday_type_amount","lastWeek","setLastWeek","lastWeek_statistic","setLastWeek_statistic","lastWeek_type_amount","setLastWeek_type_amount","lastMonth","setLastMonth","lastMonth_statistic","setLastMonth_statistic","lastMonth_type_amount","setLastMonth_type_amount","lastYear","setLastYear","_useState21","_useState22","lastYear_statistic","setLastYear_statistic","_useState23","_useState24","lastYear_type_amount","setLastYear_type_amount","_useState25","_useState26","_useState27","_useState28","customAggregateData","setCustomAggregateData","_useState29","_useState30","aggregateDataType","setAggregateDataType","getYesterdayStatsData","getLastWeekStatsData","getLastMonthStatsData","getLastYearStatsData","count","el","date","setHours","_id","hour","total_amount","format","amount_avg","count_avg","fetchYesteday","last_week","year","month","day","fetchLastWeek","last_month","fetchLastMonth","last_year","fetchLastYear","annotationLineStyles","stroke","lineDash","lineWidth","gradientFill","fill","yesterday_config_1","xField","yField","annotations","position","content","offsetY","textBaseline","meta","alias","formatter","substring","xAxis","tickCount","smooth","areaStyle","yesterday_config_2","lastWeek_config_1","lastWeek_config_2","lastMonth_config_1","lastMonth_config_2","lastYear_config_1","lastYear_config_2","minHeight","Dashboard_RangePicker","AreaChartOutlined","es_row","es_col","span","onMouseOver","goTo","gutter","justify","statistic","DollarOutlined","PlusCircleFilled","flexFlow","alignItems","segmented","val","components_area","carousel","ref","dotPosition","autoplaySpeed","cols","o","price","s","ViewInvoiceSheet","useParams","setInvoice","setItems","lines","customer_name","split","number","relativeTime","due_date","marginRight","skeleton","active","customer_address","customer_phone","divider","toTitleCase","str","categories","Balance","1","2","3","4","5","Payout Reconciliation","6","7","8","9","10","inv_categories","_inv_categories","fieldNames","ViewReportSheet","domain","setDomain","current_page_status","setCurrent_page_status","set_balance_summary_1","balance_summary_1_cols","set_balance_summary_1_cols","balance_change_from_activity_type","set_balance_change_from_activity_type","set_balance_change_from_activity_summary_1","balance_change_from_activity_summary_1_cols","set_balance_change_from_activity_summary_1_cols","set_balance_change_from_activity_itemized_3","balance_change_from_activity_itemized_3_cols","set_balance_change_from_activity_itemized_3_cols","payouts_type","set_payouts_type","set_payouts_summary_1","payouts_summary_1_cols","set_payouts_summary_1_cols","set_payouts_itemized_3","_useState31","_useState32","payouts_itemized_3_cols","set_payouts_itemized_3_cols","_useState33","_useState34","payout_reconciliation_type","set_payout_reconciliation_type","_useState35","_useState36","set_payout_reconciliation_summary_1","_useState37","_useState38","payout_reconciliation_summary_1_cols","set_payout_reconciliation_summary_1_cols","_useState39","_useState40","set_payout_reconciliation_itemized_5","_useState41","_useState42","payout_reconciliation_itemized_5_cols","set_payout_reconciliation_itemized_5_cols","_useState43","_useState44","set_ending_balance_reconciliation_type","_useState45","_useState46","set_ending_balance_reconciliation_summary_1","_useState47","_useState48","ending_balance_reconciliation_summary_1_cols","set_ending_balance_reconciliation_summary_1_cols","_useState49","_useState50","ending_balance_reconciliation_itemized_4","set_ending_balance_reconciliation_itemized_4","_useState51","_useState52","ending_balance_reconciliation_itemized_4_cols","set_ending_balance_reconciliation_itemized_4_cols","makeReport","fetchSetReportStateCols","fetchSetReportState","makeColumns","curr","final","new_arr","createReportAndAwaitCompletion","apiCallObject","startsWith","url","ws","WebSocket","addEventListener","event","msg","file_id","ViewReportSheet_regeneratorRuntime","link","category","reporting_category","invoice_report","invoice_arr","sums","voucher_type","voucher_discount","net_amount","reportStateObject","_x","downloadAndSetFileStateContents","close","_callee2","i","report_type_desc","_context2","abrupt","option","ViewReportSheet_RangePicker","moment_dates","AuditOutlined","marginBottom","mode","filter","c","showSearch","showArrow","href","DownloadOutlined","bordered","ViewReportSheet_Option","col","SheetRoutes","auth_user","useAuthUser","signOutFunction","useSignOut","collapsed","setCollapsed","setUser","toggleSideBar","layout_default","affix","theme","backgroundColor","Item","marginLeft","LogoutOutlined","Sider_default","trigger","onMouseEnter","onMouseLeave","collapsible","isAdmin","UserOutlined","react_router","path","sheets_Dashboard","sheets_ListInvoicesSheet","sheets_ViewInvoiceSheet","sheets_ListReportsSheet","sheets_ViewReportSheet","sheets_ListUsersSheet","Login","login_email","setLogin_email","login_password","setLogin_password","register_email","setRegister_email","register_password","setRegister_password","register_password_confirm","setRegister_password_confirm","login_errors","setLogin_errors","register_errors","setRegister_errors","signIn","useSignIn","index_module","paused","height","amplitude","speed","points","bottom","top","zIndex","tabs","tabPosition","TabPane","tab","textDecoration","LockOutlined","es_alert","ExclamationCircleOutlined","showIcon","fontSize","errors","email","password","expiresIn","tokenType","authState","tryLogin","LoginOutlined","tryRegister","UserAddOutlined","AuthRoutes","pages_auth_Login","ReactDOM","index_modern","authType","authName","cookieDomain","cookieSecure","loginPath","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bed26d26.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import { notification } from 'antd';\r\nimport getSymbolFromCurrency from 'currency-symbol-map';\r\nimport { useAuthHeader } from 'react-auth-kit';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSignOut } from 'react-auth-kit';\r\n\r\n\r\n// export const API_URL = `${window.location.protocol}//${window.location.hostname}:${process.env.PORT || 3000}`;\r\n\r\nlet backend_api_url = `${window.location.protocol}//${window.location.hostname}`;\r\nif(window.location.hostname == \"localhost\") backend_api_url += \":4000\";\r\n\r\nexport const API_URL = backend_api_url;\r\nexport const apiCall = (route, data, callback, token, loadingCallbackState, navigate) => {\r\n    axios.post(API_URL + route, data, (token ? { headers : { Authorization : token } } : {})).then(callback).catch(error => {ReportError(error, navigate); if(loadingCallbackState) loadingCallbackState(false)});\r\n}\r\n\r\nexport const ReportError = (axios_response, navigate) => {\r\n\r\n    let notif = {\r\n        \r\n    }\r\n    \r\n    console.log(\"CAUGHT API CALL ERROR : \", axios_response);\r\n    \r\n\r\n    notif = {\r\n        message : \"There was an error.\",\r\n    };\r\n    if(!axios_response.response){\r\n\r\n        if(axios_response.data){\r\n\r\n        }\r\n        notification['error']({\r\n            message : \"There was an error.\",\r\n            description : (axios_response.message ? axios_response.message : axios_response)\r\n        })\r\n\r\n        return;\r\n    }\r\n    if(axios_response.response.status === 403){\r\n        notif.message = \"Your Session has timed out.\";\r\n        notif.description = \"Please sign in again to continue.\";\r\n        notification['error'](notif);\r\n\r\n        navigate(\"/\")\r\n\r\n        return;\r\n        \r\n    }\r\n    const response = axios_response.response;\r\n\r\n    if(response.data){\r\n        if(response.data.raw && response.data.raw.message) notif.description = response.data.raw.message;\r\n        else if(response.data.error && response.data.error.message) notif.description = response.data.error.message;\r\n        \r\n        else if(typeof response.data.error === \"string\") notif.description = response.data.error;\r\n        else if(Array.isArray(response.data.error)){\r\n            response.data.error.forEach(element => {\r\n                notif.description += element + '.'\r\n            });\r\n        }\r\n        else if(response.data.message) notif.description = response.data.message;\r\n        else if(response.message) notif.description = response.message;\r\n    }\r\n\r\n    if(!notif.description) notif.description = axios_response.response.statusText;\r\n    notification['error'](notif);\r\n}\r\n\r\nexport const getDateObject = (seconds) => {\r\n    var t = new Date(1970, 0, 1); // Epoch\r\n    t.setSeconds(seconds);\r\n    return t;\r\n}\r\n\r\nexport const getStatusColor = (status) => {\r\n    let color = false;\r\n    switch (status) {\r\n        case 'paid':\r\n            color = 'green';\r\n            break;\r\n    \r\n        case 'invoiced_in_error':\r\n            color = 'volcano';\r\n            break;\r\n    \r\n        case 'waiver':\r\n            color = 'geekblue';\r\n            break;\r\n    \r\n        case 'voucher':\r\n            color = 'geekblue';\r\n            break;\r\n    \r\n        case 'refund':\r\n            color = 'orange';\r\n            break;\r\n    \r\n        case 'uncollectible':\r\n            color = 'magenta';\r\n            break;\r\n    \r\n        case 'open':\r\n            color = 'cyan';\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    \r\n    return color;\r\n}\r\n\r\nexport const printAmount = (invoice) => {\r\n    return `${getSymbolFromCurrency(invoice.currency)}${Math.round(invoice.amount_due/100)}`;\r\n}\r\n\r\nexport const HaltIfNotPermitted = (event) => {\r\n\r\n}\r\n\r\nexport const reportVerbose = (report_type) => {\r\n    const dict = {\r\n        \"balance.summary.1\" : \"Balance - Summary\",\r\n        \"balance_change_from_activity.summary.1\" : \"Balance change from activity - Summary\",\r\n        \"balance_change_from_activity.itemized.3\" : \"Balance change from activity - Itemized\",\r\n        \"payouts.summary.1\" : \"Payouts - Summary\",\r\n        \"payouts.itemized.3\" : \"Payouts - Itemized\",\r\n        \"payout_reconciliation.summary.1\" : \"Payout reconciliation - Summary\",\r\n        \"payout_reconciliation.itemized.5\" : \"Payout reconciliation - Itemized\",\r\n        \"ending_balance_reconciliation.summary.1\" : \"Ending balance reconciliation - Summary\",\r\n    }\r\n\r\n    if(dict.hasOwnProperty(report_type)) return dict[report_type];\r\n\r\n    report_type = report_type.replaceAll('.', ' ');\r\n    report_type = report_type.replaceAll('_', ' ');\r\n\r\n    return report_type;\r\n\r\n}","import { Tag } from 'antd';\r\nimport React, { Component } from 'react'\r\nimport { getStatusColor } from '../../../helpers';\r\n\r\n\r\nconst StatusTag = ({status,faint}) => {\r\n\r\n    return (\r\n        <Tag style={{opacity : (faint ? '0.4' : '1')}} color={getStatusColor((status))}>{status ? status.toUpperCase() : \"None\"}</Tag>\r\n    )\r\n}\r\n\r\nexport default StatusTag;","import React, { useState, useEffect } from 'react'\r\nimport { Button, Dropdown, Menu, Space, Table, DatePicker, notification, Modal, Select, Input } from \"antd\"\r\nimport { DownOutlined, LayoutOutlined, OrderedListOutlined, RollbackOutlined, SmileOutlined } from '@ant-design/icons';\r\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError } from '../../helpers';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport StatusTag from './snippets/StatusTag';\r\nimport { useAuthHeader } from 'react-auth-kit';\r\nimport getSymbolFromCurrency from 'currency-symbol-map';\r\nimport moment from 'moment';\r\nconst { RangePicker } = DatePicker\r\nconst { Option } = Select;\r\nconst hdate = require(\"human-date\");\r\n\r\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\r\n\r\n    apiCall(`/invoices/update/${new_status}`, { invoice_id }, (response) => {\r\n        if (response.status == 200) fetchInvoices();\r\n        else {\r\n            ReportError(response);\r\n        }\r\n    }, auth_token, null, navigate);\r\n}\r\n\r\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices, navigate, waiver_amount, voucher_amount) => {\r\n    if (!waiver_amount) waiver_amount = 0;\r\n    if (!voucher_amount) voucher_amount = 0;\r\n    apiCall(`/invoices/update/label/${new_status}`, { invoice_id, waiver_amount, voucher_amount }, (response) => {\r\n        if (response.status == 200) fetchInvoices();\r\n        else {\r\n            ReportError(response);\r\n        }\r\n    }, auth_token, null, navigate);\r\n}\r\n\r\nconst actionsMenu = (invoice_id, invoice, auth_token, fetchInvoices, navigate, modalFunction) => {\r\n    return (\r\n        <Menu\r\n            items={[\r\n                {\r\n                    key: 1,\r\n                    label: (\r\n                        <NavLink to={\"/sheet/invoice/view/\" + invoice_id}>\r\n                            <Button type='dashed' icon={<LayoutOutlined />} block >View Invoice</Button>\r\n                        </NavLink>\r\n                    ),\r\n\r\n                },\r\n                {\r\n                    key: 2,\r\n                    label: 'Mark Invoice',\r\n                    children: [\r\n                        {\r\n                            key: '2.1',\r\n                            label: (\r\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"paid\", invoice_id, auth_token, fetchInvoices, navigate)}>Paid</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '2.2',\r\n                            label: (\r\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices, navigate)}>Invoiced in error</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '2.3',\r\n                            label: (\r\n                                <Button block type=\"dashed\" onClick={() => modalFunction('Waiver', invoice)}>Waiver</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '2.4',\r\n                            label: (\r\n                                <Button block type=\"dashed\" onClick={() => modalFunction('Voucher', invoice)}>Voucher</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '2.5',\r\n                            label: (\r\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"refund\", invoice_id, auth_token, fetchInvoices, navigate)}>Refund</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '2.6',\r\n                            label: (\r\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)}>Uncollectible</Button>\r\n                            )\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    key: 3,\r\n                    label: 'Change Status',\r\n                    children: [\r\n                        {\r\n                            key: '3.1',\r\n                            label: (\r\n                                <Button block onClick={() => changeStatus(\"paid\", invoice_id, auth_token, fetchInvoices, navigate)}>Paid</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '3.2',\r\n                            label: (\r\n                                <Button block onClick={() => changeStatus(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices, navigate)}>Invoiced in error</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '3.3',\r\n                            label: (\r\n                                <Button block onClick={() => changeStatus(\"waiver\", invoice_id, auth_token, fetchInvoices, navigate)}>Waiver</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '3.4',\r\n                            label: (\r\n                                <Button block onClick={() => changeStatus(\"voucher\", invoice_id, auth_token, fetchInvoices, navigate)}>Voucher</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '3.5',\r\n                            label: (\r\n                                <Button block onClick={() => changeStatus(\"refund\", invoice_id, auth_token, fetchInvoices, navigate)}>Refund</Button>\r\n                            )\r\n                        },\r\n                        {\r\n                            key: '3.6',\r\n                            label: (\r\n                                <Button block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)}>Uncollectible</Button>\r\n                            )\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    key: 4,\r\n                    label: (\r\n                        <Button type='primary' danger icon={<RollbackOutlined />} block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)} >Refund</Button>\r\n                    )\r\n                },\r\n            ]}\r\n\r\n            onClick={(e) => console.log(e)}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst onChange = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n};\r\n\r\n\r\nconst ListInvoicesSheet = () => {\r\n\r\n    const authHeader = useAuthHeader();\r\n    const navigate = useNavigate();\r\n\r\n    const [invoices, setInvoices] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [dates, setDates] = useState([]);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [currentInvoice, setCurrentInvoice] = useState({});\r\n    const [coupans, setCoupans] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selectedCoupan, setSelectedCoupan] = useState({});\r\n    const [selectedModalType, setModalType] = useState('');\r\n    const [voucherAmount, setVoucherAmount] = useState(null);\r\n    let start, end\r\n    const fetchCustomDateRangeData = () => {\r\n        if (dates.length < 2) {\r\n            return notification['warning']({\r\n                title: \"View Invoice\",\r\n                description: \"Please select start and end dates.\"\r\n            });\r\n        }\r\n        start = dates[0].unix();\r\n        end = dates[1].unix();\r\n        fetchInvoices();\r\n    }\r\n\r\n\r\n    const fetchInvoices = () => {\r\n        setLoading(true);\r\n        apiCall(\"/invoices/list\", { created: { gte: start, lte: end } }, (r) => {\r\n\r\n            let invoices = r.data.data.data;\r\n\r\n            invoices.forEach((row, index) => {\r\n                row.created_verbose = hdate.prettyPrint(getDateObject(row.created), { showTime: true });\r\n                row.key = index;\r\n            })\r\n\r\n            console.log(invoices)\r\n            setLoading(false);\r\n            setInvoices(invoices);\r\n        }, authHeader(), setLoading, navigate)\r\n\r\n    }\r\n\r\n    const fetchCoupans = () => {\r\n        apiCall('/invoices/all-coupans-list', {}, (r) => {\r\n            let coupans = r.data.data.data;\r\n            setCoupans(coupans)\r\n            setIsLoading(false)\r\n        }, authHeader())\r\n    }\r\n\r\n    const onChangeCoupans = (value) => {\r\n        if (selectedModalType === 'Waiver') {\r\n            setSelectedCoupan(JSON.parse(value))\r\n        } else {\r\n            setVoucherAmount(value)\r\n        }\r\n    }\r\n    const showModal = (modalType, invoice) => {\r\n        setModalType(modalType)\r\n        setCurrentInvoice(invoice);\r\n        setIsModalVisible(true);\r\n        fetchCoupans()\r\n    };\r\n\r\n    const handleOk = () => {\r\n        if (selectedModalType === 'Waiver') {\r\n            changeLabel(\"waiver\", currentInvoice.id, authHeader(), fetchInvoices, navigate,\r\n                selectedCoupan.amount_off || currentInvoice.metadata.waiver_amount)\r\n        } else {\r\n            changeLabel(\"voucher\", currentInvoice.id, authHeader(), fetchInvoices, navigate,\r\n                selectedCoupan.amount_off || currentInvoice.metadata.waiver_amount,\r\n                voucherAmount * 100 || currentInvoice.metadata.voucher_amount)\r\n        }\r\n        setCoupans([])\r\n        setVoucherAmount(null)\r\n        setIsModalVisible(false);\r\n        fetchInvoices()\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setSelectedCoupan({})\r\n        setCoupans([])\r\n        setVoucherAmount(null)\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const columns = [\r\n        // Offering\r\n        {\r\n            title: \"Offering\",\r\n            dataIndex: \"account_name\",\r\n            key: \"account_name\"\r\n        },\r\n        // Email\r\n        {\r\n            title: \"Email\",\r\n            dataIndex: \"customer_email\",\r\n            key: \"customer_email\"\r\n        },\r\n        // Amount\r\n        {\r\n            title: \"Amount\",\r\n            dataIndex: \"amount_due\",\r\n            key: \"amount_due\",\r\n            align: \"center\",\r\n            render: (amount, invoice) => {\r\n                return (\r\n                    <span>{printAmount(invoice)}</span>\r\n                )\r\n            }\r\n        },\r\n        // Waiver Amount\r\n        {\r\n            title: \"Waiver Amount\",\r\n            dataIndex: \"metadata.waiver_amount\",\r\n            key: \"waiver_amount\",\r\n            align: \"center\",\r\n            render: (waiver_amount, invoice) => {\r\n                if (invoice?.metadata?.waiver_amount) {\r\n                    return (\r\n                        <span>{getSymbolFromCurrency(invoice.currency)}{invoice.metadata.waiver_amount ? Math.floor(invoice.metadata.waiver_amount / 100) : 0}</span>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <span>{getSymbolFromCurrency(invoice.currency)}0</span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        // Marked for Status\r\n        {\r\n            title: \"Marked for\",\r\n            dataIndex: \"metadata.marked_status\",\r\n            key: \"marked_status\",\r\n            align: \"center\",\r\n            render: (metadata_marked_status, invoice) => {\r\n\r\n                if (invoice.metadata.marked_status) {\r\n                    return <StatusTag faint status={invoice.metadata.marked_status} />\r\n                }\r\n            },\r\n            filters: [\r\n                {\r\n                    text: 'Draft',\r\n                    value: 'draft'\r\n                },\r\n                {\r\n                    text: 'Invoiced in error',\r\n                    value: 'invoiced_in_error'\r\n                },\r\n                {\r\n                    text: 'Waiver',\r\n                    value: 'waiver'\r\n                },\r\n                {\r\n                    text: 'Voucher',\r\n                    value: 'voucher'\r\n                },\r\n                {\r\n                    text: 'Refund',\r\n                    value: 'refund'\r\n                },\r\n                {\r\n                    text: 'Uncollectible',\r\n                    value: 'uncollectible'\r\n                },\r\n                {\r\n                    text: \"Open\",\r\n                    value: \"open\"\r\n                },\r\n                {\r\n                    text: \"Paid\",\r\n                    value: \"paid\"\r\n                }\r\n            ],\r\n            onFilter: (value, record) => record.status === value,\r\n        },\r\n        // Current Status\r\n        {\r\n            title: \"Current status\",\r\n            dataIndex: \"status\",\r\n            key: \"status\",\r\n            align: \"center\",\r\n            render: (status, invoice) => <StatusTag status={invoice.metadata.hasOwnProperty(\"custom_status\") ? invoice.metadata.custom_status : status} />,\r\n            filters: [\r\n                {\r\n                    text: 'Draft',\r\n                    value: 'draft'\r\n                },\r\n                {\r\n                    text: 'Invoiced in error',\r\n                    value: 'invoiced_in_error'\r\n                },\r\n                {\r\n                    text: 'Invoiced in error',\r\n                    value: 'void'\r\n                },\r\n                {\r\n                    text: 'Waiver',\r\n                    value: 'waiver'\r\n                },\r\n                {\r\n                    text: 'Voucher',\r\n                    value: 'voucher'\r\n                },\r\n                {\r\n                    text: 'Refund',\r\n                    value: 'refund'\r\n                },\r\n                {\r\n                    text: 'Uncollectible',\r\n                    value: 'uncollectible'\r\n                },\r\n                {\r\n                    text: \"Open\",\r\n                    value: \"open\"\r\n                },\r\n                {\r\n                    text: \"Paid\",\r\n                    value: \"paid\"\r\n                }\r\n            ],\r\n            onFilter: (value, record) => record.status === value,\r\n        },\r\n        {\r\n            title: \"Created\",\r\n            dataIndex: \"created_verbose\",\r\n            key: \"created_verbose\"\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"id\",\r\n            key: \"action\",\r\n            render: (invoice_id, invoice) => {\r\n                return (\r\n                    <Dropdown\r\n                        arrow={false}\r\n                        overlay={actionsMenu(invoice_id, invoice, authHeader(), fetchInvoices, navigate, showModal)}\r\n                        placement=\"bottomRight\"\r\n                    >\r\n                        <Button >\r\n                            <Space>\r\n                                Actions\r\n                                <DownOutlined />\r\n                            </Space>\r\n                        </Button>\r\n                    </Dropdown>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    const getAmount = (invoice) => {\r\n        return `${getSymbolFromCurrency(invoice.currency)}${Math.floor((invoice.amount_due - (selectedCoupan.amount_off || 0)) / 100) - Math.floor(voucherAmount || 0)}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        end = moment().startOf(\"day\").unix();\r\n        start = moment().subtract(1, \"month\").endOf(\"day\").unix();\r\n        setDates([start, end]);\r\n        fetchInvoices();\r\n\r\n    }, [])\r\n    const options = coupans ? coupans.map(item => <Option key={item.id} value={JSON.stringify(item)}>${Math.floor(item.amount_off / 100)}</Option>) : []\r\n    return (\r\n        <div className='sheet'>\r\n            <Space />\r\n            <Space>\r\n                <h2>Invoices </h2>\r\n                <RangePicker onCalendarChange={(dates) => { if (dates.length) setDates(dates) }}\r\n                    defaultValue={[moment().startOf(\"day\"), moment().subtract(30, \"days\").endOf(\"day\")]} />\r\n                <Button onClick={() => fetchCustomDateRangeData()} icon={<OrderedListOutlined />} shape=\"round\" type=\"primary\">Get Invoices</Button>\r\n            </Space>\r\n            <Table loading={loading} dataSource={invoices} columns={columns} onChange={onChange} />\r\n            <Modal destroyOnClose={true} title={selectedModalType + \" Details\"}\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                okButtonProps={{ disabled: !selectedCoupan.hasOwnProperty('amount_off') && !voucherAmount }}>\r\n                <p>Offerting : {currentInvoice.account_name}</p>\r\n                <p>Email : {currentInvoice.customer_email}</p>\r\n                <p>Amount : {getAmount(currentInvoice)}</p>\r\n                <p>Created At : {currentInvoice.created_verbose}</p>\r\n                {selectedModalType.toLowerCase() === 'waiver' ?\r\n                    <Space>\r\n                        <p>Coupans list :</p>\r\n                        <Select\r\n                            placeholder='Select Waiver Amount'\r\n                            onChange={onChangeCoupans}\r\n                            loading={isLoading}\r\n                        >\r\n                            {options}\r\n                        </Select>\r\n                    </Space> :\r\n                    <Space>\r\n                        <p>Voucher amount :</p>\r\n                        <Input placeholder=\"Enter voucher amount\"\r\n                            value={voucherAmount}\r\n                            onChange={(e) => onChangeCoupans(e.target.value)}\r\n                            prefix={getSymbolFromCurrency(currentInvoice.currency)} />\r\n                    </Space>\r\n                }\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListInvoicesSheet","import React, { useState, useEffect } from 'react'\r\nimport { Button, Dropdown, Menu, Space, Table, Tag } from \"antd\"\r\nimport { BookOutlined, MinusCircleOutlined} from '@ant-design/icons';\r\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError, reportVerbose } from '../../helpers';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport StatusTag from './snippets/StatusTag';\r\nimport { useAuthHeader } from 'react-auth-kit';\r\nimport commaNumber from 'comma-number';\r\n\r\nconst hdate = require(\"human-date\");\r\n\r\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\r\n\r\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\r\n        if(response.status == 200) fetchInvoices();\r\n        else{\r\n            ReportError(response);\r\n        }\r\n    }, auth_token, null, navigate);\r\n}\r\n\r\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\r\n\r\n    apiCall(`/invoices/update/label/${new_status}`, {invoice_id}, (response) => {\r\n        if(response.status == 200) fetchInvoices();\r\n        else{\r\n            ReportError(response);\r\n        }\r\n    }, auth_token, null, navigate);\r\n}\r\n\r\n\r\n\r\n\r\nconst onChange = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n  };\r\n\r\n\r\nconst ListReportsSheet =  () => {\r\n\r\n    const authHeader = useAuthHeader();\r\n    const navigate = useNavigate();\r\n    \r\n    const [reports, setReports] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchReports = () => {\r\n        setLoading(true);\r\n        apiCall(\"/reports/list\", {}, (r) => {\r\n    \r\n            const reports = r.data.data.data;\r\n            reports.forEach(r => {\r\n                r.key = r.id\r\n            });\r\n\r\n            setReports(reports);\r\n            setLoading(false);\r\n        }, authHeader(), setLoading, navigate)\r\n        \r\n    }\r\n\r\n    const columns = [\r\n        // Report Category\r\n        {\r\n            title : \"Report Category\",\r\n            dataIndex : \"report_type\",\r\n            key : \"report_type\",\r\n            render : (report_type) => {\r\n                return reportVerbose(report_type);\r\n            }\r\n        },\r\n        // Size\r\n        {\r\n            title : \"Size\",\r\n            dataIndex : \"size\",\r\n            key : \"size\",\r\n            render : (size, report) => commaNumber(report.result.size) + \" KB\"\r\n        },\r\n        // Created\r\n        {\r\n            title : \"Created\",\r\n            dataIndex : \"created\",\r\n            key : \"created\",\r\n            render : (created) => hdate.prettyPrint(getDateObject(created))\r\n        },\r\n        {\r\n            title : \"Interval\",\r\n            dataIndex : \"parameters\",\r\n            key : \"parameters\",\r\n            render : (parameters) => {\r\n              return `${hdate.prettyPrint(getDateObject(parameters.interval_start))} to ${hdate.prettyPrint(getDateObject(parameters.interval_end))}.`;\r\n            }\r\n        },\r\n        \r\n        {\r\n            title : \"Action\",\r\n            dataIndex : \"id\",\r\n            key : \"action\",\r\n            colSpan : 2,\r\n            render : (report_id, report) => {\r\n\r\n                if(report.status == 'succeeded') return (\r\n                    <NavLink to={\"/sheet/report/view/\" + report_id}>\r\n                        <Button type='primary' icon={<BookOutlined />} block >View Report</Button>\r\n                    </NavLink>\r\n                )\r\n                else return (\r\n                    <Button disabled type=\"primary\" icon={<MinusCircleOutlined/>} block >Report {report.status}</Button>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        fetchReports();\r\n      \r\n    }, [])\r\n    \r\n    return (\r\n        <div className='sheet'>\r\n            <Space/>\r\n            <h1>Reports </h1>\r\n            \r\n            <Table loading={loading} dataSource={reports} columns={columns} onChange={onChange} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ListReportsSheet","import React, { useState, useEffect } from 'react'\r\nimport { Button, Dropdown, Col, Space, Table, Row, Input, Switch, Collapse, notification } from \"antd\"\r\nimport { BranchesOutlined, DownOutlined, LayoutOutlined, RightCircleOutlined, RollbackOutlined, SafetyOutlined, SmileOutlined } from '@ant-design/icons';\r\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError } from '../../helpers';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport StatusTag from './snippets/StatusTag';\r\nimport { useAuthHeader } from 'react-auth-kit';\r\nimport { Transfer, Tree } from 'antd';\r\nimport CollapsePanel from 'antd/lib/collapse/CollapsePanel';\r\n\r\nString.prototype.toProperCase = function () {\r\n    return this.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\r\n};\r\n\r\nconst { Search } = Input;\r\n\r\nconst isChecked = (selectedKeys, eventKey) => selectedKeys.includes(eventKey);\r\n\r\nconst generateTree = (treeNodes = [], checkedKeys = []) =>\r\n  treeNodes.map(({ children, ...props }) => ({\r\n    ...props,\r\n    disabled: checkedKeys.includes(props.key),\r\n    children: generateTree(children, checkedKeys),\r\n}));\r\n\r\nconst TreeTransfer = ({ dataSource, targetKeys, ...restProps }) => {\r\n    const transferDataSource = [];\r\n  \r\n    function flatten(list = []) {\r\n      list.forEach((item) => {\r\n        transferDataSource.push(item);\r\n        flatten(item.children);\r\n      });\r\n    }\r\n  \r\n    flatten(dataSource);\r\n    return (\r\n      <Transfer\r\n        {...restProps}\r\n        targetKeys={targetKeys}\r\n        dataSource={transferDataSource}\r\n        className=\"tree-transfer\"\r\n        render={(item) => item.title}\r\n        showSelectAll={false}\r\n      >\r\n        {({ direction, onItemSelect, selectedKeys }) => {\r\n          if (direction === 'left') {\r\n            const checkedKeys = [...selectedKeys, ...targetKeys];\r\n            return (\r\n              <Tree\r\n                blockNode\r\n                checkable\r\n                checkStrictly\r\n                defaultExpandAll\r\n                checkedKeys={checkedKeys}\r\n                treeData={generateTree(dataSource, targetKeys)}\r\n                onCheck={(_, { node: { key } }) => {\r\n                  onItemSelect(key, !isChecked(checkedKeys, key));\r\n                }}\r\n                onSelect={(_, { node: { key } }) => {\r\n                  onItemSelect(key, !isChecked(checkedKeys, key));\r\n                }}\r\n              />\r\n            );\r\n          }\r\n        }}\r\n      </Transfer>\r\n    );\r\n  };\r\n\r\nconst TreeTransferComponent = ({user_id, current_permissions, permissions}) => {\r\n\r\n    const authHeader = useAuthHeader();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const [targetKeys, setTargetKeys] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [changed, setChanged] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        console.log(current_permissions);\r\n        setTargetKeys(current_permissions);\r\n      \r\n    }, [])\r\n    \r\n\r\n    const onChange = (keys) => {\r\n        console.log(keys);\r\n        if(!changed) setChanged(true);\r\n        setTargetKeys(keys);\r\n    };\r\n\r\n    const setPermissions = async () => {\r\n\r\n        setLoading(true);\r\n\r\n        const permissions_bundle = {\r\n            invoice_permissions : {\r\n                set_refund : false,\r\n            set_to_be_refund : false,\r\n            // Set permanent statuses.\r\n            set_paid : false,\r\n            set_invoiced_in_error : false,\r\n            set_waiver : false,\r\n            set_voucher : false,\r\n            set_refund : false,\r\n            set_uncollectible : false,\r\n            // Set temporary statuses.\r\n            set_to_be_paid : false,\r\n            set_to_be_invoiced_in_error : false,\r\n            set_to_be_waiver : false,\r\n            set_to_be_voucher : false,\r\n            set_to_be_refund : false,\r\n            set_to_be_uncollectible : false,\r\n            },\r\n            report_permissions : {\r\n                balance_summary_1 : false,\r\n                balance_change_from_activity_summary_1 : false,\r\n                balance_change_from_activity_itemized_3 : false,\r\n                payouts_summary_1 : false,\r\n                payouts_itemized_3 : false,\r\n                payout_reconciliation_summary_1 : false,\r\n                payout_reconciliation_itemized_5 : false,\r\n                ending_balance_reconciliation_summary_1 : false,\r\n            },\r\n            general_permissions : {\r\n                view_invoice : false,\r\n                access_reports : false,\r\n                manage_users : false\r\n            }\r\n        }\r\n\r\n        targetKeys.forEach(allow_key => {\r\n            for (const permission_type in permissions_bundle) {\r\n    \r\n                if (Object.hasOwnProperty.call(permissions_bundle, permission_type)) {\r\n                    const permissions = permissions_bundle[permission_type];\r\n                    \r\n                    if(permissions.hasOwnProperty(allow_key)){\r\n                        permissions[allow_key] = true;\r\n                        break;\r\n                    }\r\n    \r\n                }\r\n            }\r\n        })\r\n\r\n        let update = {};\r\n\r\n        for (const type in permissions_bundle) {\r\n            if (Object.hasOwnProperty.call(permissions_bundle, type)) {\r\n                const permissions = permissions_bundle[type];\r\n\r\n                for (const permission in permissions) {\r\n                    if (Object.hasOwnProperty.call(permissions, permission)) {\r\n                        const allow_status = permissions[permission];\r\n                        \r\n                        update[`${type}.${permission}`] = `${allow_status}`\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        apiCall(\"/users/permit\", {permission_updates : update, user_id}, (response) => {\r\n            try {\r\n                if(response.data.data && response.data.data.id){\r\n                    notification['success']({\r\n                        message : \"User update action\",\r\n                        description : \"Permissions updated successfully!\"\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                notification['error']({\r\n                    message : \"Error\",\r\n                    description : \"Permissions could not be updated, try again later.\"\r\n                })\r\n                setTargetKeys(current_permissions);\r\n            }\r\n            setLoading(false);\r\n        }, authHeader(), setLoading, navigate )\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n            {/* <Space direction='vertical'> */}\r\n            <TreeTransfer dataSource={permissions} targetKeys={targetKeys} onChange={onChange} />\r\n            \r\n            <div style={{display : \"flex\", justifyContent : 'flex-end', marginTop : \"1em\"}}>\r\n            <Button disabled={!changed} type=\"primary\" icon={<SafetyOutlined />} onClick={setPermissions} loading={loading} >Set Permissions</Button>\r\n            </div>\r\n            {/* </Space> */}\r\n        </>\r\n    )\r\n}\r\n\r\nconst hdate = require(\"human-date\");\r\n\r\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\r\n\r\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\r\n        if(response.status == 200) fetchInvoices();\r\n        else{\r\n            ReportError(response);\r\n        }\r\n    }, auth_token, null, navigate);\r\n}\r\n\r\n\r\n\r\nconst ListUsersSheet =  () => {\r\n\r\n    const authHeader = useAuthHeader();\r\n    const navigate = useNavigate();\r\n    \r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [param, setParam] = useState(\"\");\r\n\r\n    \r\n    useEffect(() => {\r\n      apiCall(\"/users/list\", {}, (response) => {\r\n        const users = response.data.data;\r\n\r\n        setUsers(users);\r\n      }, authHeader(), setLoading, navigate);\r\n    \r\n    }, [])\r\n    \r\n\r\n\r\n    const fetchUsers = (param) => {\r\n        setLoading(true);\r\n        setParam(param);\r\n        \r\n        apiCall(\"/auth/find\", {param}, (r) => {\r\n            console.log(r)\r\n            let users = r.data;\r\n            \r\n            console.log(\"USERSSS\", users);\r\n            setLoading(false);\r\n            setUsers(users);\r\n        }, authHeader(), setLoading, navigate)\r\n        \r\n    }\r\n\r\n\r\n    const toggleAccount = (isActive, user_id, Switch) => {\r\n        \r\n        apiCall(\"/auth/toggle\", {user_id, status : !isActive}, (r) => {\r\n            if(r.isActive !== isActive) fetchUsers(param);\r\n        }, authHeader(), setLoading, navigate)\r\n    }\r\n\r\n    const names = (a) => {\r\n        a = a.replace(\"set_to_be\", \"Mark_as\");\r\n        a = a.replace(\"set\", \"Set_status_to\");\r\n        a = a.replaceAll(\"_\", \" \").replace(/\\d+$/, \"\");\r\n        return a.toProperCase();\r\n    }\r\n    \r\n\r\n\r\n    const columns = [\r\n        // Offering\r\n        {\r\n            title : \"Email\",\r\n            dataIndex : \"email\",\r\n            key : \"email\"\r\n        },\r\n        {\r\n            title : \"Account status\",\r\n            dataIndex : \"isActive\",\r\n            key : \"isActive\",\r\n            render : (isActive, user) => {\r\n                return (\r\n                    <Switch checked={isActive} unCheckedChildren=\"Disabled\" checkedChildren=\"enabled\" onChange={() => toggleAccount(isActive, user.id)} />\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title : \"Permissions\",\r\n            dataIndex : \"permissions\",\r\n            key : \"permissions\",\r\n            render : (permissions, user) => {\r\n\r\n                const arr = [];\r\n                const current = []\r\n                const types = [\"general_permissions\", \"invoice_permissions\", \"report_permissions\"];\r\n                types.forEach(permission_category => {\r\n                    \r\n                    const permission_group = {\r\n                        title : permission_category.replaceAll(\"_\", \" \").toProperCase(),\r\n                        value : permission_category,\r\n                        checkable : false,\r\n                        children : []\r\n\r\n                    };\r\n\r\n                    for (const key in user[permission_category]) {\r\n                        if (Object.hasOwnProperty.call(user[permission_category], key)) {\r\n                            const value = user[permission_category][key];\r\n                            \r\n                             permission_group.children.push({\r\n                                title : names(key),\r\n                                value : key,\r\n                                key : key,\r\n                            })\r\n                            if(value === \"true\"){\r\n                                current.push(key);\r\n                            }\r\n                            \r\n                        }\r\n                    }\r\n\r\n                    arr.push(permission_group)\r\n                });\r\n\r\n                console.log(arr, current);\r\n                return (\r\n                    <Collapse >\r\n                        <CollapsePanel key={1} header=\"Manage Permissions\">\r\n                            <TreeTransferComponent user_id={user.id} permissions={arr} current_permissions={current} />    \r\n                        </CollapsePanel>\r\n                    </Collapse>\r\n                )\r\n            }\r\n        }\r\n\r\n    ]\r\n    \r\n    \r\n    return (\r\n        <div className='sheet'>\r\n            <Space/>\r\n            <h2>Manage Users </h2>\r\n            <Search \r\n                placeholder='Search for a User'\r\n                onSearch={fetchUsers}\r\n            />\r\n            \r\n            <Table pagination={false} loading={loading} dataSource={users} columns={columns} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListUsersSheet","import { AreaChartOutlined, DollarOutlined, PlusCircleFilled } from '@ant-design/icons';\r\nimport { Carousel, Col, DatePicker, Row, Segmented, Statistic, Button, Space, notification } from 'antd';\r\nimport { Area, Line } from \"@ant-design/charts\";\r\nimport { apiCall } from '../../helpers';\r\nimport \"./styles/Dashboard.css\"\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useAuthHeader } from 'react-auth-kit';\r\nimport moment from 'moment';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nconst commaNumber = require('comma-number')\r\n\r\nconst dummyStateData = 36000;\r\nconst dummyStateDataSmall = 36;\r\n\r\nconst Dashboard = () => {\r\n\r\n    const carousel_ref = useRef();\r\n\r\n    const [yesterday, setYesterday] = useState([]);\r\n    const [yesterday_statistic, setYesterday_statistic] = useState(false);\r\n    const [yesterday_type_amount, setYesterday_type_amount] = useState(true);\r\n\r\n    const [lastWeek, setLastWeek] = useState([]);\r\n    const [lastWeek_statistic, setLastWeek_statistic] = useState(false);\r\n    const [lastWeek_type_amount, setLastWeek_type_amount] = useState(true);\r\n\r\n    const [lastMonth, setLastMonth] = useState([]);\r\n    const [lastMonth_statistic, setLastMonth_statistic] = useState(false);\r\n    const [lastMonth_type_amount, setLastMonth_type_amount] = useState(true);\r\n\r\n    const [lastYear, setLastYear] = useState([]);\r\n    const [lastYear_statistic, setLastYear_statistic] = useState(false);\r\n    const [lastYear_type_amount, setLastYear_type_amount] = useState(true);\r\n\r\n    const [dates, setDates] = useState([]);\r\n    const [customAggregateData, setCustomAggregateData] = useState(false);\r\n    const [aggregateDataType, setAggregateDataType] = useState(true)\r\n\r\n    const authHeader = useAuthHeader();\r\n    const navigate = useNavigate();\r\n\r\n    const fetchCustomDateRangeData = () => {\r\n        if(dates.length < 2){\r\n            return notification['warning']({\r\n                title : \"Create Dashboard\",\r\n                description : \"Please select start and end dates.\"\r\n            });\r\n        }\r\n\r\n        console.log(dates[0].format(), dates[1].format())\r\n\r\n        const start = dates[0].unix();\r\n        const end = dates[1].unix();\r\n\r\n        apiCall('/reports/dashboard/custom', {start, end}, (response) => {\r\n\r\n            const data = response.data.data;\r\n\r\n          \r\n            data.forEach(el => {\r\n\r\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\r\n                \r\n                el.total_amount /= 100;\r\n                \r\n                delete el._id\r\n            });\r\n\r\n            console.log(\"CUSTOM AGGREGATE DATA\", data);\r\n\r\n            setCustomAggregateData(data);\r\n\r\n        }, authHeader(), null, navigate);\r\n\r\n\r\n        \r\n    }\r\n\r\n    const fetchYesteday = () => {\r\n\r\n        let yesterday = moment().subtract(1, \"day\");\r\n        let start = yesterday.startOf(\"day\").unix();\r\n        let end = yesterday.endOf(\"day\").unix();\r\n    \r\n        apiCall(\"/reports/dashboard/day\", {start, end}, (response) => {\r\n            const data = response.data.data;\r\n\r\n\r\n            let amount = 0, count = 0;\r\n            data.forEach(el => {\r\n                \r\n                const date = new Date();\r\n                date.setHours(el._id.hour);\r\n\r\n                el.total_amount /= 100;\r\n\r\n                el.hour = moment(date).format(\"hh a\");\r\n                count += el.count;\r\n                amount += el.total_amount\r\n                delete el._id\r\n            });\r\n            setYesterday_statistic({\r\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\r\n            });\r\n\r\n            console.log(\"YESTERDAY AGGREGATE DATA\", data);\r\n            setYesterday(data);\r\n\r\n        }, authHeader(), null, navigate);\r\n    }\r\n\r\n    const fetchLastWeek = () => {\r\n\r\n        let last_week = moment().subtract(1, \"week\");\r\n        let start = last_week.startOf(\"day\").unix();\r\n        let end = last_week.endOf(\"day\").unix();\r\n    \r\n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\r\n            const data = response.data.data;\r\n\r\n\r\n            let amount = 0, count = 0;\r\n            data.forEach(el => {\r\n\r\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\r\n                \r\n                el.total_amount /= 100;\r\n                \r\n                count += el.count;\r\n                amount += el.total_amount\r\n                delete el._id\r\n            });\r\n\r\n            console.log(data)\r\n\r\n            setLastWeek_statistic({\r\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\r\n            });\r\n\r\n            console.log(\"LAST WEEK AGGREGATE DATA\", data);\r\n\r\n            setLastWeek(data);\r\n\r\n        }, authHeader(), null, navigate);\r\n    }\r\n\r\n    const fetchLastYear = () => {\r\n\r\n        let last_year = moment().subtract(1, \"month\");\r\n        let start = last_year.startOf(\"day\").unix();\r\n        let end = last_year.endOf(\"day\").unix();\r\n    \r\n        apiCall(\"/reports/dashboard/year\", {start, end}, (response) => {\r\n            const data = response.data.data;\r\n\r\n\r\n            let amount = 0, count = 0;\r\n            data.forEach(el => {\r\n\r\n                el.date = `${el._id.year}/${el._id.month}`;\r\n                \r\n                el.total_amount /= 100;\r\n\r\n                count += el.count;\r\n                amount += el.total_amount\r\n                delete el._id\r\n            });\r\n\r\n            \r\n\r\n            setLastYear_statistic({\r\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\r\n            });\r\n\r\n            console.log(\"LAST YEAR AGGREGATE DATA\", data);\r\n\r\n            setLastYear(data);\r\n\r\n        }, authHeader(), null, navigate);\r\n    }\r\n\r\n    const fetchLastMonth = () => {\r\n\r\n        let last_month = moment().subtract(1, \"month\");\r\n        let start = last_month.startOf(\"day\").unix();\r\n        let end = last_month.endOf(\"day\").unix();\r\n    \r\n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\r\n            const data = response.data.data;\r\n\r\n\r\n            let amount = 0, count = 0;\r\n            data.forEach(el => {\r\n\r\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\r\n                \r\n                el.total_amount /= 100;\r\n                \r\n                count += el.count;\r\n                amount += el.total_amount\r\n                delete el._id\r\n            });\r\n\r\n            console.log(data)\r\n\r\n            setLastMonth_statistic({\r\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\r\n            });\r\n\r\n            console.log(\"LAST MONTH AGGREGATE DATA\", data);\r\n\r\n            setLastMonth(data);\r\n\r\n        }, authHeader(), null, navigate);\r\n    }\r\n\r\n    const getYesterdayStatsData = (key) => {\r\n        if(yesterday_statistic) return yesterday_statistic[key];\r\n        else return 0;\r\n    }\r\n\r\n    const getLastWeekStatsData = (key) => {\r\n        if(lastWeek_statistic) return lastWeek_statistic[key];\r\n        else return 0;\r\n    }\r\n\r\n    const getLastMonthStatsData = (key) => {\r\n        if(lastMonth_statistic) return lastMonth_statistic[key];\r\n        else return 0;\r\n    }\r\n\r\n    const getLastYearStatsData = (key) => {\r\n        if(lastYear_statistic) return lastYear_statistic[key];\r\n        else return 0;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchYesteday();\r\n        fetchLastWeek();\r\n        fetchLastMonth();\r\n        fetchLastYear();\r\n    }, [])\r\n\r\n    const annotationLineStyles = {\r\n        stroke : \"rgb(80, 80, 80)\",\r\n        lineDash : [10, 5],\r\n        lineWidth : 2,\r\n        opacity : 0.75\r\n    };\r\n\r\n    const gradientFill = {\r\n        fill: 'l(270) 0:#af7bb4b2 1:#165481ad',\r\n    };\r\n\r\n    const yesterday_config_1 = {\r\n        xField: 'hour',\r\n        yField: 'total_amount',\r\n        annotations : [\r\n            {\r\n                type : \"text\",\r\n                position : ['min', getYesterdayStatsData(\"amount_avg\")],\r\n                content : `Average Amount : $${commaNumber(getYesterdayStatsData(\"amount_avg\"))}`,\r\n                offsetY : -4,\r\n                style : {\r\n                    textBaseline : \"bottom\"\r\n                }\r\n            },\r\n            {\r\n                type : \"line\",\r\n                start : ['min', getYesterdayStatsData(\"amount_avg\")],\r\n                end : ['max', getYesterdayStatsData(\"amount_avg\")],\r\n                style : annotationLineStyles\r\n            }\r\n        ],\r\n        meta : {\r\n            hour : {\r\n                alias : \"Time\",\r\n                formatter : (hour) => {\r\n                    \r\n                    if(hour[0] == '0') return hour.substring(1);\r\n                    return hour;\r\n                },\r\n            },\r\n            total_amount : {\r\n                alias : \"Amount\",\r\n                formatter : (amount) => {\r\n                    return `$ ${commaNumber(amount)}`\r\n                }\r\n            }\r\n        },\r\n        xAxis : {\r\n            tickCount : 24,\r\n        },\r\n        smooth : true,\r\n        areaStyle : gradientFill\r\n    };\r\n    \r\n\r\n    const yesterday_config_2 = {\r\n        xField: 'hour',\r\n        yField: 'count',\r\n        annotations : [\r\n            {\r\n                type : \"text\",\r\n                position : ['min', getYesterdayStatsData(\"count_avg\")],\r\n                content : `Average Count : ${commaNumber(getYesterdayStatsData(\"count_avg\"))} Invoices`,\r\n                offsetY : -4,\r\n                style : {\r\n                    textBaseline : \"bottom\"\r\n                }\r\n            },\r\n            {\r\n                type : \"line\",\r\n                start : ['min', getYesterdayStatsData(\"count_avg\")],\r\n                end : ['max', getYesterdayStatsData(\"count_avg\")],\r\n                style : annotationLineStyles\r\n            }\r\n        ],\r\n        meta : {\r\n            hour : {\r\n                alias : \"Time\",\r\n                formatter : (hour) => {\r\n                    \r\n                    if(hour[0] == '0') return hour.substring(1);\r\n                    return hour;\r\n                },\r\n            },\r\n            count : {\r\n                alias : \"Invoice Count\",\r\n                formatter : (count) => {\r\n                    \r\n                    return `${count} Invoices`\r\n                },\r\n            }\r\n        },\r\n        xAxis : {\r\n            tickCount : 24,\r\n        },\r\n        smooth : true\r\n    };\r\n\r\n    const lastWeek_config_1 = {\r\n        xField: 'date',\r\n        yField: 'total_amount',\r\n        annotations : [\r\n            {\r\n                type : \"text\",\r\n                position : ['min', getLastWeekStatsData(\"amount_avg\")],\r\n                content : `Average Amount : $${commaNumber(getLastWeekStatsData(\"amount_avg\"))}`,\r\n                offsetY : -4,\r\n                style : {\r\n                    textBaseline : \"bottom\"\r\n                }\r\n            },\r\n            {\r\n                type : \"line\",\r\n                start : ['min', getLastWeekStatsData(\"amount_avg\")],\r\n                end : ['max', getLastWeekStatsData(\"amount_avg\")],\r\n                style : annotationLineStyles\r\n            }\r\n        ],\r\n        meta : {\r\n            date : {\r\n                alias : \"Date\",\r\n                formatter : (date) => {\r\n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\r\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, Do MMMM\");\r\n\r\n                    return mdate;\r\n                }\r\n            },\r\n            total_amount : {\r\n                alias : \"Total Amount\",\r\n                formatter : (amount) => {\r\n                    \r\n                    return `$ ${commaNumber(amount)}`\r\n                },\r\n            }\r\n        },\r\n        smooth : true,\r\n        areaStyle : gradientFill\r\n    };\r\n\r\n    const lastWeek_config_2 = {\r\n        xField: 'date',\r\n        yField: 'count',\r\n        annotations : [\r\n            {\r\n                type : \"text\",\r\n                position : ['min', getLastWeekStatsData(\"count_avg\")],\r\n                content : `Average Count : ${commaNumber(getLastWeekStatsData(\"count_avg\"))} Invoices`,\r\n                offsetY : -4,\r\n                style : {\r\n                    textBaseline : \"bottom\"\r\n                }\r\n            },\r\n            {\r\n                type : \"line\",\r\n                start : ['min', getLastWeekStatsData(\"count_avg\")],\r\n                end : ['max', getLastWeekStatsData(\"count_avg\")],\r\n                style : annotationLineStyles\r\n            }\r\n        ],\r\n        meta : {\r\n            date : {\r\n                alias : \"Date\",\r\n                formatter : (date) => {\r\n                    \r\n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\r\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, DD MMMM\");\r\n\r\n                    return mdate;\r\n                },\r\n            },\r\n            count : {\r\n                alias : \"Invoice Count\",\r\n                formatter : (count) => {\r\n                    \r\n                    return `${count} Invoices`\r\n                },\r\n            }\r\n        },\r\n        smooth : true,\r\n        areaStyle : gradientFill\r\n    };\r\n\r\n    const lastMonth_config_1 = {\r\n        xField: 'date',\r\n        yField: 'total_amount',\r\n        annotations : [\r\n            {\r\n                type : \"text\",\r\n                position : ['min', getLastMonthStatsData(\"amount_avg\")],\r\n                content : `Average Amount : $${commaNumber(getLastMonthStatsData(\"amount_avg\"))}`,\r\n                offsetY : -4,\r\n                style : {\r\n                    textBaseline : \"bottom\"\r\n                }\r\n            },\r\n            {\r\n                type : \"line\",\r\n                start : ['min', getLastMonthStatsData(\"amount_avg\")],\r\n                end : ['max', getLastMonthStatsData(\"amount_avg\")],\r\n                style : annotationLineStyles\r\n            }\r\n        ],\r\n        meta : {\r\n            date : {\r\n                alias : \"Date\",\r\n                formatter : (date) => {\r\n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY\");\r\n\r\n                    return mdate;\r\n                }\r\n            },\r\n            total_amount : {\r\n                alias : \"Total Amount\",\r\n                formatter : (amount) => {\r\n                    \r\n                    return `$ ${commaNumber(amount)}`\r\n                },\r\n            }\r\n        },\r\n        smooth : true,\r\n        areaStyle : gradientFill\r\n    };\r\n\r\n    const lastMonth_config_2 = {\r\n        xField: 'date',\r\n        yField: 'count',\r\n        annotations : [\r\n            {\r\n                type : \"text\",\r\n                position : ['min', getLastMonthStatsData(\"count_avg\")],\r\n                content : `Average Count : ${commaNumber(getLastMonthStatsData(\"count_avg\"))} Invoices`,\r\n                offsetY : -4,\r\n                style : {\r\n                    textBaseline : \"bottom\"\r\n                }\r\n            },\r\n            {\r\n                type : \"line\",\r\n                start : ['min', getLastMonthStatsData(\"count_avg\")],\r\n                end : ['max', getLastMonthStatsData(\"count_avg\")],\r\n                style : annotationLineStyles\r\n            }\r\n        ],\r\n        meta : {\r\n            date : {\r\n                alias : \"Date\",\r\n                formatter : (date) => {\r\n                    \r\n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY\");\r\n\r\n                    return mdate;\r\n                },\r\n            },\r\n            count : {\r\n                alias : \"Invoice Count\",\r\n                formatter : (count) => {\r\n                    \r\n                    return `${count} Invoices`\r\n                },\r\n            }\r\n        },\r\n        smooth : true,\r\n        areaStyle : gradientFill\r\n    };\r\n\r\n    const lastYear_config_1 = {\r\n        xField: 'date',\r\n        yField: 'total_amount',\r\n        annotations : [\r\n            {\r\n                type : \"text\",\r\n                position : ['min', getLastYearStatsData(\"amount_avg\")],\r\n                content : `Average Amount : $${commaNumber(getLastYearStatsData(\"amount_avg\"))}`,\r\n                offsetY : -4,\r\n                style : {\r\n                    textBaseline : \"bottom\"\r\n                }\r\n            },\r\n            {\r\n                type : \"line\",\r\n                start : ['min', getLastYearStatsData(\"amount_avg\")],\r\n                end : ['max', getLastYearStatsData(\"amount_avg\")],\r\n                style : annotationLineStyles\r\n            }\r\n        ],\r\n        meta : {\r\n            date : {\r\n                alias : \"Date\",\r\n                formatter : (date) => {\r\n                    const mdate = moment(date, 'YYYY/M').format(\"Do MMM, YYYY (ddd)\");\r\n\r\n                    return mdate;\r\n                }\r\n            },\r\n            total_amount : {\r\n                alias : \"Total Amount\",\r\n                formatter : (amount) => {\r\n                    \r\n                    return `$ ${commaNumber(amount)}`\r\n                },\r\n            }\r\n        },\r\n        smooth : true,\r\n        areaStyle : gradientFill\r\n    };\r\n\r\n    const lastYear_config_2 = {\r\n        xField: 'date',\r\n        yField: 'count',\r\n        annotations : [\r\n            {\r\n                type : \"text\",\r\n                position : ['min', getLastYearStatsData(\"count_avg\")],\r\n                content : `Average Count : ${commaNumber(getLastYearStatsData(\"count_avg\"))} Invoices`,\r\n                offsetY : -4,\r\n                style : {\r\n                    textBaseline : \"bottom\"\r\n                }\r\n            },\r\n            {\r\n                type : \"line\",\r\n                start : ['min', getLastYearStatsData(\"count_avg\")],\r\n                end : ['max', getLastYearStatsData(\"count_avg\")],\r\n                style : annotationLineStyles\r\n            }\r\n        ],\r\n        meta : {\r\n            date : {\r\n                alias : \"Date\",\r\n                formatter : (date) => {\r\n                    \r\n                    const mdate = moment(date, 'YYYY/M').format(\"MMMM d, YYYY (dddd)\");\r\n\r\n                    return mdate;\r\n                },\r\n            },\r\n            count : {\r\n                alias : \"Invoice Count\",\r\n                formatter : (count) => {\r\n                    \r\n                    return `${count} Invoices`\r\n                },\r\n            }\r\n        },\r\n        smooth : true,\r\n        areaStyle : gradientFill\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\" statistic-wrapper sheet\" style={{minHeight : \"90vh\"}}>\r\n\r\n<div className=\"sheet menu range-picker\">\r\n                <h3>Show for a Custom Time Range</h3>\r\n                <Space>\r\n                    <RangePicker onCalendarChange={(dates) => {if(dates.length) setDates(dates)}} />\r\n                    <Button onClick={() => fetchCustomDateRangeData()} icon={<AreaChartOutlined />} shape=\"round\" type=\"primary\">Get data</Button>\r\n                </Space>\r\n            </div>\r\n\r\n            {!customAggregateData && \r\n            \r\n            <Row>\r\n            <Col span={6}>\r\n                <div className=\"statistic-card sheet\">\r\n                    <h3>Yesterday</h3>\r\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(0)}>\r\n                        <Row gutter={16} justify=\"space-between\">\r\n                            <Col>\r\n                                <Statistic loading={!yesterday_statistic} title='Amount' prefix={<DollarOutlined/>} value={yesterday_statistic && commaNumber(yesterday_statistic.amount)} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Statistic loading={!yesterday_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={yesterday_statistic && commaNumber(yesterday_statistic.count)} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            <Col span={6}>\r\n                <div className=\"statistic-card sheet\">\r\n                    <h3>Last Week</h3>\r\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(1)}>\r\n                        <Row gutter={16} justify=\"space-between\">\r\n                            <Col>\r\n                                <Statistic loading={!lastWeek_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastWeek_statistic && commaNumber(lastWeek_statistic.amount)} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Statistic loading={!lastWeek_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastWeek_statistic && commaNumber(lastWeek_statistic.count)} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            <Col span={6}>\r\n                <div className=\"statistic-card sheet\">\r\n                    <h3>Last Month</h3>\r\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(2)}>\r\n                        <Row gutter={16} justify=\"space-between\">\r\n                            <Col>\r\n                                <Statistic loading={!lastMonth_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastMonth_statistic && commaNumber(lastMonth_statistic.amount)} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Statistic loading={!lastMonth_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastMonth_statistic && commaNumber(lastMonth_statistic.count)} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            <Col span={6}>\r\n                <div className=\"statistic-card sheet\">\r\n                    <h3>Last Year</h3>\r\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(3)}>\r\n                        <Row gutter={16} justify=\"space-between\">\r\n                            <Col>\r\n                                <Statistic loading={!lastYear_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastYear_statistic && commaNumber(lastYear_statistic.amount)} />\r\n                            </Col>\r\n                            <Col>\r\n                                <Statistic loading={!lastYear_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastYear_statistic && commaNumber(lastYear_statistic.count)} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>    \r\n\r\n            }\r\n\r\n            \r\n            \r\n            {customAggregateData && \r\n                <div className=\"sheet\">\r\n                    <div style={{display : \"flex\", flexFlow : \"row\", justifyContent : \"space-between\", alignItems : \"center\"}}>\r\n                        { dates.length == 2 && <h2>Viewing Data from {dates[0].format(\"Do MMMM, YYYY\")} to {dates[1].format(\"Do MMMM, YYYY\")}</h2> }\r\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setAggregateDataType(val === \"Amount\")} />\r\n                    </div>\r\n                {aggregateDataType ? \r\n                    \r\n                    <>\r\n                        <h3>Amount vs Date</h3>\r\n                        <div className=\"chart-wrapper\">\r\n                            <Area data={customAggregateData} {...lastMonth_config_1}></Area>\r\n                        </div>\r\n                    </>\r\n                : \r\n                    <>\r\n                        <h3>Invoice Count vs Date</h3>\r\n                        <div className=\"chart-wrapper\">\r\n                            <Area data={customAggregateData} {...lastMonth_config_2}></Area>\r\n                        </div>\r\n                    </>\r\n                }\r\n                </div>\r\n            }\r\n            <div className=\"sheet\">\r\n                \r\n                <Carousel ref={ref => carousel_ref.current = ref} dotPosition='top' autoplaySpeed={5000}>\r\n\r\n                {/* YESTERDAY'S CHART SHEET */}\r\n                <div className='carousel-container'>\r\n                    \r\n                    <div className=\"sheet menu\">\r\n                        <div>\r\n                            <h2>Yesterday's Hourly Data</h2>\r\n                        </div>\r\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setYesterday_type_amount(val === \"Amount\")} />\r\n                    </div>\r\n                    {yesterday_type_amount ? \r\n                    \r\n                        <>\r\n                            <h3>Amount vs Hour</h3>\r\n                            <div className=\"chart-wrapper\">\r\n                                <Area data={yesterday} {...yesterday_config_1}></Area>\r\n                            </div>\r\n                        </>\r\n                    : \r\n                        <>\r\n                            <h3>Invoice Count vs Hour</h3>\r\n                            <div className=\"chart-wrapper\">\r\n                                <Area data={yesterday} {...yesterday_config_2}></Area>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    <div>\r\n                    \r\n                    </div>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                {/* LAST WEEK'S CHART SHEET */}\r\n                <div className='carousel-container'>\r\n                    \r\n                    <div className=\"sheet menu\">\r\n                        <div>\r\n                            <h2>Last Weeks's Data</h2>\r\n                        </div>\r\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastWeek_type_amount(val === \"Amount\")} />\r\n                    </div>\r\n                    {lastWeek_type_amount ? \r\n                    \r\n                        <>\r\n                            <h3>Amount vs Date</h3>\r\n                            <div className=\"chart-wrapper\">\r\n                                <Area data={lastWeek} {...lastWeek_config_1}></Area>\r\n                            </div>\r\n                        </>\r\n                    : \r\n                        <>\r\n                            <h3>Invoice Count vs Date</h3>\r\n                            <div className=\"chart-wrapper\">\r\n                                <Area data={lastWeek} {...lastWeek_config_2}></Area>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                {/* LAST MONTH'S CHART SHEET */}\r\n                <div className='carousel-container'>\r\n                    \r\n                    <div className=\"sheet menu\">\r\n                        <div>\r\n                            <h2>Last Month's Data</h2>\r\n                        </div>\r\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastMonth_type_amount(val === \"Amount\")} />\r\n                    </div>\r\n                    {lastMonth_type_amount ? \r\n                    \r\n                        <>\r\n                            <h3>Amount vs Date</h3>\r\n                            <div className=\"chart-wrapper\">\r\n                                <Area data={lastMonth} {...lastMonth_config_1}></Area>\r\n                            </div>\r\n                        </>\r\n                    : \r\n                        <>\r\n                            <h3>Invoice Count vs Date</h3>\r\n                            <div className=\"chart-wrapper\">\r\n                                <Area data={lastMonth} {...lastMonth_config_2}></Area>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    <div>\r\n                    \r\n                    </div>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                {/* LAST YEAR'S CHART SHEET */}\r\n                <div className='carousel-container'>\r\n                    \r\n                    <div className=\"sheet menu\">\r\n                        <div>\r\n                            <h2>Last Year's Data</h2>\r\n                        </div>\r\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastYear_type_amount(val === \"Amount\")} />\r\n                    </div>\r\n                    {lastYear_type_amount ? \r\n                    \r\n                        <>\r\n                            <h3>Amount vs Date</h3>\r\n                            <div className=\"chart-wrapper\">\r\n                                <Area data={lastYear} {...lastYear_config_1}></Area>\r\n                            </div>\r\n                        </>\r\n                    : \r\n                        <>\r\n                            <h3>Invoice Count vs Date</h3>\r\n                            <div className=\"chart-wrapper\">\r\n                                <Area data={lastYear} {...lastYear_config_2}></Area>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    <div>\r\n                    \r\n                    </div>\r\n                    <div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                    \r\n                </Carousel>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dashboard;","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { apiCall, getDateObject } from '../../helpers';\r\nimport gradient from 'random-gradient';\r\nimport \"./styles/ViewInvoiceSheet.css\"\r\nimport { Col, Divider, Tag, Row, Button, Table, Skeleton } from 'antd';\r\nimport StatusTag from './snippets/StatusTag';\r\nimport { RollbackOutlined } from '@ant-design/icons';\r\nimport { useAuthHeader } from 'react-auth-kit';\r\n\r\nconst getSymbolFromCurrency = require('currency-symbol-map')\r\nconst hdate = require(\"human-date\");\r\n\r\nfunction toTitleCase(str) {\r\n    return str.replace(\r\n      /\\w\\S*/g,\r\n      function(txt) {\r\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      }\r\n    );\r\n  }\r\n\r\nconst cols = [\r\n    {\r\n        title : \"No.\",\r\n        dataIndex : \"dummy\",\r\n        key : \"dummy\",\r\n        render : (t, o, index) => {\r\n            return index + 1;\r\n        }\r\n    },\r\n    {\r\n        title : \"Description\",\r\n        dataIndex : \"description\",\r\n        key : \"description\"\r\n    },\r\n    {\r\n        title : \"Type\",\r\n        dataIndex : \"price\",\r\n        render : (price) => {\r\n            let s = toTitleCase(price.type);\r\n            s = s.replaceAll('_', ' ');\r\n            return s;\r\n        },\r\n        key : \"type\"\r\n    },\r\n    {\r\n        title : \"Quantity\",\r\n        dataIndex : \"quantity\",\r\n        key : \"quantity\"\r\n    },\r\n    {\r\n        title : \"Amount\",\r\n        dataIndex : \"amount\",\r\n        key : \"amount\",\r\n        render : (amount, invoice) => {\r\n            \r\n          return getSymbolFromCurrency(invoice.currency) + Math.round(amount/100);\r\n        }\r\n    }\r\n]\r\n\r\nconst ViewInvoiceSheet = () => {\r\n\r\n    const authHeader = useAuthHeader();\r\n    const navigate = useNavigate();\r\n\r\n    let { invoice_id } = useParams();\r\n    const [invoice, setInvoice] = useState({});\r\n    const [items, setItems] = useState([]);\r\n    \r\n    useEffect(() => {\r\n      \r\n        apiCall(\"/invoices/retrieve\", {invoice_id}, (response) => {\r\n            const invoice = response.data.data;\r\n            // console.log(invoice_id, bg)\r\n\r\n\r\n            setInvoice(invoice);\r\n            setItems(invoice.lines.data);\r\n        }, authHeader(), null, navigate);\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div className='sheet'>\r\n            <div className='sheet envelope no-margin' >\r\n                {invoice.id ?\r\n                    <>\r\n                        <div>\r\n                            <h1>{(invoice.customer_name) ? `${invoice.customer_name.split(\" \")[0]}'s Invoice` : \"Invoice\"} </h1>\r\n                            <h3>{invoice.number} for {getSymbolFromCurrency(invoice.currency) + invoice.amount_due}  </h3>\r\n                            <h3>Due in {hdate.relativeTime(getDateObject(invoice.due_date))}.  </h3>\r\n                        </div>\r\n                        <div className='envelope-sub'>\r\n                            <div className=\"row\">\r\n                                <div>Invoice ID :</div>\r\n                                <div><Tag >{invoice.id}</Tag></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div>Charge Date : </div>\r\n                                <div><Tag >{hdate.prettyPrint(getDateObject(invoice.created), { showTime : true })}</Tag></div>\r\n                            </div>\r\n                            <div className=\"row\" style={{marginTop : '1.2em', display : 'flex', justifyContent : 'flex-end', marginRight : '0.2em'}}>\r\n                                <Button size='huge' type='primary' danger icon={<RollbackOutlined/>} >Refund</Button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <Skeleton active />\r\n                }\r\n            </div>\r\n            {invoice.id ?\r\n            \r\n            <div className=\"sheet no-margin invoice-container\">\r\n                <Row gutter={16}>\r\n                    <Col span={8}>\r\n                        <h2>From</h2>\r\n                        <div className=\"bulky-divider\" ></div>\r\n                        <h3>{invoice.account_name}</h3>\r\n\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <h2>To</h2>\r\n                        <div className=\"bulky-divider\" ></div>\r\n                        {invoice.customer_name && <h4>Name : {invoice.customer_name}</h4>}\r\n                        {invoice.customer_email && <h4>Email : {invoice.customer_email}</h4>}\r\n                        {invoice.customer_address && <h4>Address : {invoice.customer_address}</h4>}\r\n                        {invoice.customer_phone && <h4>Phone : {invoice.customer_phone}</h4>}\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <h2>Details</h2>\r\n                        <div className=\"bulky-divider\" ></div>\r\n                        <h4>Invoice total : {getSymbolFromCurrency(invoice.currency)}{Math.round(invoice.amount_due/100)}</h4>\r\n                        <h4>Status : <StatusTag status={invoice.status}/></h4>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Divider/>\r\n                <Table columns={cols} dataSource={items} />\r\n            </div>\r\n                :\r\n            <Skeleton active />\r\n            }\r\n            <Divider/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ViewInvoiceSheet;","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { apiCall, getDateObject, reportVerbose } from '../../helpers';\r\nimport \"./styles/ViewInvoiceSheet.css\"\r\nimport \"./styles/ViewReportSheet.css\"\r\nimport { Col, Divider, Tag, Row, Button, Table, Skeleton, Segmented, Space, DatePicker, Result, Select, notification } from 'antd';\r\nimport { useAuthHeader, useIsAuthenticated } from 'react-auth-kit';\r\nimport { AuditOutlined, BookOutlined, CloudDownloadOutlined, DownloadOutlined, LoadingOutlined, RollbackOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nconst getSymbolFromCurrency = require('currency-symbol-map')\r\nconst hdate = require(\"human-date\");\r\nconst commaNumber = require('comma-number')\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\n\r\n\r\nfunction toTitleCase(str) {\r\n    return str.replace(\r\n      /\\w\\S*/g,\r\n      function(txt) {\r\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      }\r\n    );\r\n}\r\n\r\n\r\nconst categories = {\r\n    \"Balance\" : {\r\n        1 : \"balance.summary.1\",\r\n        2 : \"balance_change_from_activity.summary.1\",\r\n        3 : \"balance_change_from_activity.itemized.3\",\r\n        4 : \"payouts.summary.1\",\r\n        5 : \"payouts.itemized.3\",\r\n    },\r\n    \"Payout Reconciliation\" : {\r\n        6 : \"balance.summary.1\",\r\n        7 : \"payout_reconciliation.summary.1\",\r\n        8 : \"payout_reconciliation.itemized.5\",\r\n        9 : \"ending_balance_reconciliation.summary.1\",\r\n        10 : \"ending_balance_reconciliation.itemized.4\"\r\n    }\r\n}\r\n\r\nconst inv_categories = {\r\n        \"balance.summary.1\" : 1,\r\n        \"balance_change_from_activity.summary.1\" : 2,\r\n        \"balance_change_from_activity.itemized.3\" : 3,\r\n        \"payouts.summary.1\" : 4,\r\n        \"payouts.itemized.3\" : 5,\r\n        \"balance.summary.1\" : 6,\r\n        \"payout_reconciliation.summary.1\" : 7,\r\n        \"payout_reconciliation.itemized.5\" : 8,\r\n        \"ending_balance_reconciliation.summary.1\" : 9,\r\n         \"ending_balance_reconciliation.itemized.4\" : 1,\r\n}\r\n\r\nconst fieldNames = {\r\n    label : \"title\",\r\n    value : \"key\",\r\n}\r\n\r\n\r\n\r\nconst ViewReportSheet = () => {\r\n\r\n    const authHeader = useAuthHeader();\r\n    const navigate = useNavigate();\r\n\r\n    \r\n    const [dates, setDates] = useState([1642662478, 1658128249]);\r\n    const [cols, setCols] = useState([]);\r\n\r\n    const [domain, setDomain] = useState(\"Balance\");\r\n    const [current_page_status, setCurrent_page_status] = useState(false);\r\n\r\n    const [balance_summary_1, set_balance_summary_1] = useState(false);\r\n    const [balance_summary_1_cols, set_balance_summary_1_cols] = useState([]);\r\n    \r\n    \r\n    const [balance_change_from_activity_type, set_balance_change_from_activity_type] = useState(\"summary\");\r\n    const [balance_change_from_activity_summary_1, set_balance_change_from_activity_summary_1] = useState(false);\r\n    const [balance_change_from_activity_summary_1_cols, set_balance_change_from_activity_summary_1_cols] = useState([]);\r\n    const [balance_change_from_activity_itemized_3, set_balance_change_from_activity_itemized_3] = useState(false);\r\n    const [balance_change_from_activity_itemized_3_cols, set_balance_change_from_activity_itemized_3_cols] = useState([]);\r\n    \r\n    const [payouts_type, set_payouts_type] = useState(\"summary\");\r\n    const [payouts_summary_1, set_payouts_summary_1] = useState(false);\r\n    const [payouts_summary_1_cols, set_payouts_summary_1_cols] = useState([]);\r\n    const [payouts_itemized_3, set_payouts_itemized_3] = useState(false);\r\n    const [payouts_itemized_3_cols, set_payouts_itemized_3_cols] = useState([]);\r\n\r\n    \r\n    const [payout_reconciliation_type, set_payout_reconciliation_type] = useState(\"summary\");\r\n    const [payout_reconciliation_summary_1, set_payout_reconciliation_summary_1] = useState(false);\r\n    const [payout_reconciliation_summary_1_cols, set_payout_reconciliation_summary_1_cols] = useState([]);\r\n    const [payout_reconciliation_itemized_5, set_payout_reconciliation_itemized_5] = useState(false);\r\n    const [payout_reconciliation_itemized_5_cols, set_payout_reconciliation_itemized_5_cols] = useState([]);\r\n    \r\n    const [ending_balance_reconciliation_type, set_ending_balance_reconciliation_type] = useState(\"summary\");\r\n    const [ending_balance_reconciliation_summary_1, set_ending_balance_reconciliation_summary_1] = useState(false);\r\n    const [ending_balance_reconciliation_summary_1_cols, set_ending_balance_reconciliation_summary_1_cols] = useState([]);\r\n    const [ending_balance_reconciliation_itemized_4, set_ending_balance_reconciliation_itemized_4] = useState(false);\r\n    const [ending_balance_reconciliation_itemized_4_cols, set_ending_balance_reconciliation_itemized_4_cols] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        let start = moment().subtract(1, \"month\").startOf(\"month\").startOf(\"day\").unix();\r\n        let end = moment().subtract(1, \"month\").endOf(\"month\").endOf(\"day\").unix();\r\n        setDates([start, end]);\r\n\r\n        makeReport();\r\n    }, [])\r\n    \r\n\r\n\r\n\r\n    const fetchSetReportStateCols = (report_type) => {\r\n      switch (inv_categories[report_type]) {\r\n          case 1:\r\n              return set_balance_summary_1_cols;\r\n              break;\r\n              \r\n          case 2:\r\n              return set_balance_change_from_activity_summary_1_cols;\r\n              break;\r\n              \r\n          case 3:\r\n              return set_balance_change_from_activity_itemized_3_cols;\r\n              break;\r\n              \r\n          case 4:\r\n              return set_payouts_summary_1_cols;\r\n              break;\r\n              \r\n          case 5:\r\n              return set_payouts_itemized_3_cols;\r\n              break;\r\n              \r\n          case 6:\r\n              return set_balance_summary_1_cols;\r\n              break;\r\n              \r\n          case 7:\r\n              return set_payout_reconciliation_summary_1_cols;\r\n              break;\r\n              \r\n          case 8:\r\n              return set_payout_reconciliation_itemized_5_cols;\r\n              break;\r\n              \r\n          case 9:\r\n              return set_ending_balance_reconciliation_summary_1_cols;\r\n              break;\r\n              \r\n          case 10:\r\n              return set_ending_balance_reconciliation_itemized_4_cols;\r\n              break;\r\n              \r\n        default:\r\n              return console.log;\r\n              break;\r\n      }\r\n    }\r\n\r\n    const fetchSetReportState = (report_type) => {\r\n      switch (inv_categories[report_type]) {\r\n          case 1:\r\n              return set_balance_summary_1;\r\n              break;\r\n              \r\n          case 2:\r\n              return set_balance_change_from_activity_summary_1;\r\n              break;\r\n              \r\n          case 3:\r\n              return set_balance_change_from_activity_itemized_3;\r\n              break;\r\n              \r\n          case 4:\r\n              return set_payouts_summary_1;\r\n              break;\r\n              \r\n          case 5:\r\n              return set_payouts_itemized_3;\r\n              break;\r\n              \r\n          case 6:\r\n              return set_balance_summary_1;\r\n              break;\r\n              \r\n          case 7:\r\n              return set_payout_reconciliation_summary_1;\r\n              break;\r\n              \r\n          case 8:\r\n              return set_payout_reconciliation_itemized_5;\r\n              break;\r\n              \r\n          case 9:\r\n              return set_ending_balance_reconciliation_summary_1;\r\n              break;\r\n              \r\n          case 10:\r\n              return set_ending_balance_reconciliation_itemized_4;\r\n              break;\r\n              \r\n        default:\r\n              return console.log;\r\n              break;\r\n      }\r\n    }\r\n\r\n    const downloadAndSetFileStateContents = (report) => {\r\n        apiCall(\"/reports/file\", {file_id : report.result.id}, async (response) => {\r\n            const data = response.data.data;\r\n            const content = data.content;\r\n            const link = data.link;\r\n            \r\n            // Create and set columns\r\n    \r\n            const cols = makeColumns(content);\r\n            content.forEach((row, index) => {\r\n                row.key = index\r\n                if(row.category){\r\n                    let str = toTitleCase(row.category.replaceAll(\"_\", \" \"));\r\n                    if(\r\n                        (\r\n                            ( row.category == \"payouts_gross\" || row.category == \"payouts_fee\"  ) ||\r\n                            ( row.category == \"activity_gross\" || row.category == \"activity_fee\"  ) \r\n                        ) &&  \r\n                        report.report_type == \"balance.summary.1\"\r\n                    ) str = \"\\xa0\\xa0\\xa0\\xa0\" + str;\r\n                    row.category = str;\r\n                }\r\n                if(row.reporting_category){\r\n                    let str = toTitleCase(row.reporting_category.replaceAll(\"_\", \" \"));\r\n                    if(\r\n                        (\r\n                            ( row.category == \"payouts_gross\" || row.category == \"payouts_fee\"  ) ||\r\n                            ( row.category == \"activity_gross\" || row.category == \"activity_fee\"  ) \r\n                        ) &&  \r\n                        report.report_type == \"balance.summary.1\"\r\n                    ) str = \"\\xa0\\xa0\\xa0\\xa0\" + str;\r\n                    row.category = str;\r\n                }\r\n            });\r\n\r\n            apiCall(\r\n                \"/reports/dashboard/amount\", \r\n                {\r\n                    start : dates[0],\r\n                    end : dates[1],\r\n                },\r\n                (response) => {\r\n                    const invoice_report = response.data.data;\r\n\r\n                    const invoice_arr = [];\r\n\r\n                    const sums = {};\r\n\r\n                    invoice_report.forEach(row => {\r\n\r\n                        const type = row._id.status;\r\n\r\n                        if(!sums[type]) sums[type] = { total_amount : 0};\r\n\r\n                        \r\n                        \r\n                        sums[type].type = type;\r\n\r\n                        const voucher_type = row._id.voucher_type;\r\n\r\n                        if(voucher_type){\r\n                            if(!sums[voucher_type]) sums[voucher_type] = { total_amount : 0};\r\n\r\n                            sums[voucher_type].total_amount += row.total_amount/100;\r\n                            sums[type].total_amount += row.voucher_discount/100;\r\n\r\n                        }\r\n                        else{\r\n                            sums[type].total_amount += row.total_amount/100;\r\n                        }\r\n                        \r\n                        // invoice_arr.push([row._id, row.total_amount/100]);\r\n\r\n                    })\r\n\r\n                    for (const key in sums) {\r\n                        if (Object.hasOwnProperty.call(sums, key)) {\r\n                            const curr = sums[key];\r\n                            invoice_arr.push([curr.type, curr.total_amount]);\r\n                        }\r\n                    }\r\n                    // console.log(invoice_arr);\r\n\r\n                    if(report.report_type == \"balance.summary.1\"){\r\n                        const row = {\r\n                            category : \"Invoice Details\",\r\n                            description : \"This shows a breakdown of the total amount gained from invoices.\",\r\n                            net_amount : invoice_arr\r\n                        };\r\n\r\n                        content.push(row);\r\n                    }\r\n\r\n                    const reportStateObject = { content, link, cols };\r\n\r\n                    console.log(report.report_type, reportStateObject)\r\n\r\n                    fetchSetReportStateCols(report.report_type)(cols);\r\n                    fetchSetReportState(report.report_type)(reportStateObject);\r\n                    setCurrent_page_status('ready');\r\n                },\r\n                authHeader(),\r\n                null,\r\n                navigate\r\n            );\r\n            \r\n    \r\n        }, authHeader(), null, navigate);\r\n    }\r\n    \r\n    const makeColumns = (data) => {\r\n        // Create and set columns\r\n        let columns = [];\r\n    \r\n        for (const key in data[0]) {\r\n            if (Object.hasOwnProperty.call(data[0], key)) {\r\n    \r\n                const curr = {\r\n                    dataIndex : key,\r\n                    key : key,\r\n                    value : key,\r\n                };\r\n                let title = key.replaceAll('_', ' ');\r\n                curr.title = toTitleCase(title);\r\n                if(key == \"net_amount\"){\r\n                    curr.align = \"center\";\r\n                    curr.render = (arr) => {\r\n                        if(typeof arr === \"string\" || typeof arr === \"number\"){\r\n                            return (\r\n                                <span>$ {arr}</span>\r\n                            )\r\n                        }\r\n\r\n                        if(Array.isArray(arr)){                            \r\n                            let final = 0;\r\n\r\n                            let new_arr = [];\r\n                            console.log(arr);\r\n                            arr.forEach(row => {\r\n                                new_arr.push({\r\n                                    _id : row[0],\r\n                                    total_amount : row[1]\r\n                                })\r\n                                // if(row[0] === \"open\" || row[0] === \"paid\") final += row[1];\r\n                                // else final -= row[1];\r\n                                final += row[1];\r\n                            })\r\n\r\n                            new_arr.push({\r\n                                _id : \"Gross Invoiced Value\",\r\n                                total_amount : final\r\n                            })\r\n\r\n                            const cols = [\r\n                                {\r\n                                    title : \"Description\",\r\n                                    dataIndex : \"_id\",\r\n                                    key : 1,\r\n                                    // render : (_id) => toTitleCase(_id == \"open\" ? \"paid\" : _id)\r\n                                    render : (_id) => toTitleCase(_id)\r\n                                },\r\n                                {\r\n                                    title : \"Amount\",\r\n                                    dataIndex : \"total_amount\",\r\n                                    key : 2,\r\n                                    render : (amount) => '$ ' + commaNumber(amount)\r\n                                }\r\n                            ]\r\n\r\n                            return (\r\n                                <Table pagination={false} dataSource={new_arr} columns={cols} />\r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n\r\n                columns.push(curr);\r\n            }\r\n        }\r\n        console.log(columns);\r\n        return columns;\r\n    }\r\n    \r\n    const createReportAndAwaitCompletion = (report_type) => {\r\n\r\n        const apiCallObject = {\r\n            report_type,\r\n            parameters : {\r\n                interval_end : dates[1]\r\n            }\r\n        }\r\n        if(!report_type.startsWith(\"ending_balance_reconciliation\")) apiCallObject.parameters.interval_start = dates[0]\r\n\r\n        apiCall(\r\n            \"/reports/create\",\r\n            apiCallObject,\r\n            (response) => {\r\n            \r\n            const report = response.data.data;\r\n            console.log(report_type, report);\r\n            const ah = authHeader();\r\n            const token = ah.split(\" \")[1];\r\n            const url = `ws${window.location.hostname == \"localhost\" ? \"\" : \"s\"}://${window.location.hostname}${window.location.hostname == \"localhost\" ? \":4000\" : \"\"}/?auth_token=${token}&report_id=${report.id}`\r\n            \r\n            const ws = new WebSocket(url);\r\n    \r\n            ws.addEventListener('open', function (event) {\r\n                console.log(`[${report_type}] Websocket connected.`);\r\n            })\r\n    \r\n            ws.addEventListener('message', function (event) {\r\n                const msg = event.data;\r\n                // console.log(msg, );\r\n                const report = JSON.parse(msg);\r\n                console.log(\"Websocket report : \",report_type, report);\r\n                downloadAndSetFileStateContents(report);\r\n                ws.close();\r\n            });\r\n            \r\n        }, authHeader(), null, navigate);\r\n    }\r\n    \r\n    const handleDomainChange = (option) => {\r\n        setDomain(option);\r\n    }\r\n    \r\n    const makeReport = async () => {\r\n        setCurrent_page_status(\"loading\");\r\n\r\n        if(dates.length != 2){\r\n            notification['error']({\r\n                message : \"Validation Error\",\r\n                description : \"Please select start and end dates\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        for (const i in categories[domain]) {\r\n            if (Object.hasOwnProperty.call(categories[domain], i)) {\r\n                const report_type_desc = categories[domain][i];\r\n                console.log(report_type_desc);\r\n                createReportAndAwaitCompletion(report_type_desc);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='sheet main'>\r\n            <Space>\r\n            <Segmented options={[\"Balance\", \"Payout Reconciliation\"]} onChange={handleDomainChange} />\r\n            <RangePicker onChange={(moment_dates) => {\r\n                if(moment_dates.length == 2) setDates([moment_dates[0].unix(), moment_dates[1].unix()]);\r\n            }} defaultValue={[ moment().subtract(1, \"month\").startOf(\"month\").startOf(\"day\"), moment().subtract(1, \"month\").endOf(\"month\").endOf(\"day\")]} />\r\n            <Button icon={<AuditOutlined />} loading={current_page_status === \"loading\" } type='primary' onClick={makeReport} >Create Report</Button>\r\n            </Space>\r\n            <Divider />\r\n            \r\n            {!current_page_status && \r\n                <Result \r\n                    icon={<BookOutlined />}\r\n                    title=\"Create a Report\"\r\n                />\r\n            }\r\n\r\n            {/* {current_page_status === \"loading\" &&\r\n            \r\n            <Result \r\n                icon={<LoadingOutlined spin />}\r\n                title=\"Generating Report...\"\r\n            />\r\n            \r\n            } */}\r\n\r\n            {\r\n                domain === \"Balance\" && \r\n                <>\r\n\r\n                    <h2>Balance Summary</h2>\r\n                    <p>The Balance summary section shows your starting and ending Stripe balance for the selected date range, along with a high level summary of your activity during the period. Your balance includes funds that are available, pending, and any reserved funds, if applicable.</p>\r\n                    {balance_summary_1 ?\r\n                        <>\r\n\r\n                            <Row style={{marginBottom : \"0.8em\"}} justify=\"space-between\">\r\n                                <Col>\r\n                                    <Select \r\n                                        mode=\"multiple\" \r\n                                        options={balance_summary_1.cols} \r\n                                        onChange={(arr) => {\r\n                                            const new_arr = balance_summary_1.cols.filter((el) => {\r\n                                                return arr.includes(el.key)\r\n                                            });\r\n                                            set_balance_summary_1_cols(new_arr);\r\n                                        }}\r\n                                        defaultValue={() => {\r\n                                            let cols = [];\r\n                                            balance_summary_1_cols.forEach(c => cols.push(c.key));\r\n                                            console.log(cols);\r\n                                            return cols;\r\n                                        }}\r\n                                        placeholder=\"Select Columns\" \r\n                                        showSearch \r\n                                        showArrow\r\n                                        fieldNames={fieldNames}\r\n                                    >\r\n                                        Select Columns\r\n                                    </Select>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Button target=\"_blank\" disabled={!balance_summary_1.link} href={balance_summary_1 && balance_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                        Download CSV\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Table pagination={false} columns={balance_summary_1_cols} dataSource={balance_summary_1.content} >\r\n                                {/* {balance_summary_1_cols && balance_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)} */}\r\n                            </Table>\r\n\r\n                            <Divider />\r\n                            \r\n                        </>\r\n\r\n                        : \r\n\r\n                        <Skeleton active />\r\n                    }\r\n                    <br></br>\r\n                    <h2>\r\n                        Balance change from activity - \r\n\r\n                        <Select className='category-select' bordered={false} onChange={(val) => set_balance_change_from_activity_type(val)} value={balance_change_from_activity_type}>\r\n                            <Option value=\"summary\">Summary</Option>\r\n                            <Option value=\"itemized\">Itemized</Option>\r\n                        </Select>\r\n\r\n                    </h2>\r\n                    <p>The Balance change from activity section provides a more detailed breakdown of your transactions by reporting category. This section includes all transactions except for payouts that affect your balance, including charges, refunds, disputes, other adjustments, and fees.</p>\r\n                    \r\n                    {(balance_change_from_activity_summary_1 || balance_change_from_activity_itemized_3) ?\r\n                        <>\r\n                            {\r\n                                balance_change_from_activity_type === \"summary\" ?\r\n                                <>\r\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\r\n                                        <Col>\r\n                                            <Select \r\n                                                mode=\"multiple\" \r\n                                                options={balance_change_from_activity_summary_1.cols} \r\n                                                onChange={(arr) => {\r\n                                                    const new_arr = balance_change_from_activity_summary_1.cols.filter((el) => {\r\n                                                        return arr.includes(el.key)\r\n                                                    });\r\n                                                    set_balance_change_from_activity_summary_1_cols(new_arr);\r\n                                                }}\r\n                                                defaultValue={() => {\r\n                                                    let cols = [];\r\n                                                    balance_change_from_activity_summary_1_cols.forEach(c => cols.push(c.key));\r\n                                                    console.log(cols);\r\n                                                    return cols;\r\n                                                }}\r\n                                                placeholder=\"Select Columns\" \r\n                                                showSearch \r\n                                                showArrow\r\n                                                fieldNames={fieldNames}\r\n                                            >\r\n                                                Select Columns \r\n                                            </Select>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Button target=\"_blank\" disabled={!balance_change_from_activity_summary_1.link} href={balance_change_from_activity_summary_1 && balance_change_from_activity_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                            Download CSV\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Table pagination={false} dataSource={balance_change_from_activity_summary_1.content} >\r\n                                        {balance_change_from_activity_summary_1_cols && balance_change_from_activity_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\r\n                                    </Table>\r\n\r\n                                </>\r\n                                :\r\n                                <>\r\n\r\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\r\n                                        <Col>\r\n                                        <Select \r\n                                            mode=\"multiple\" \r\n                                            options={balance_change_from_activity_itemized_3.cols} \r\n                                            onChange={(arr) => {\r\n                                                const new_arr = balance_change_from_activity_itemized_3.cols.filter((el) => {\r\n                                                    return arr.includes(el.key)\r\n                                                });\r\n                                                set_balance_change_from_activity_itemized_3_cols(new_arr);\r\n                                            }}\r\n                                            defaultValue={() => {\r\n                                                let cols = [];\r\n                                                balance_change_from_activity_itemized_3_cols.forEach(c => cols.push(c.key));\r\n                                                console.log(cols);\r\n                                                return cols;\r\n                                            }}\r\n                                            placeholder=\"Select Columns\" \r\n                                            showSearch \r\n                                            showArrow\r\n                                            fieldNames={fieldNames}\r\n                                        >\r\n                                            Select Columns \r\n                                        </Select>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Button target=\"_blank\" disabled={!balance_change_from_activity_itemized_3.link} href={balance_change_from_activity_itemized_3 && balance_change_from_activity_itemized_3.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                            Download CSV\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Table pagination={false} dataSource={balance_change_from_activity_itemized_3.content} >\r\n                                        {balance_change_from_activity_itemized_3_cols && balance_change_from_activity_itemized_3_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\r\n                                    </Table>\r\n\r\n                                </>\r\n                            }\r\n                            \r\n                            <Divider />\r\n                        </>\r\n\r\n                        :\r\n\r\n                        <Skeleton active />\r\n                    }\r\n\r\n                    <br></br>\r\n                    <h2>    \r\n                        Payouts - \r\n\r\n                        <Select className='category-select' bordered={false} onChange={(val) => set_payouts_type(val)} value={payouts_type}>\r\n                            <Option value=\"summary\">Summary</Option>\r\n                            <Option value=\"itemized\">Itemized</Option>\r\n                        </Select>\r\n\r\n                    </h2>\r\n                    <p>The Payouts section provides the quantity and total amount of payouts to your bank account during the period. You can download a list of individual payout transactions by clicking the Download button.</p>\r\n                    \r\n                    { (payouts_summary_1 || payouts_itemized_3) ?\r\n                        <>\r\n\r\n\r\n\r\n                            {\r\n                                payouts_type === \"summary\" ?\r\n                                <>\r\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\r\n                                        <Col>\r\n                                            <Select \r\n                                                mode=\"multiple\" \r\n                                                options={payouts_summary_1.cols} \r\n                                                onChange={(arr) => {\r\n                                                    const new_arr = payouts_summary_1.cols.filter((el) => {\r\n                                                        return arr.includes(el.key)\r\n                                                    });\r\n                                                    set_payouts_summary_1_cols(new_arr);\r\n                                                }}\r\n                                                defaultValue={() => {\r\n                                                    let cols = [];\r\n                                                    payouts_summary_1_cols.forEach(c => cols.push(c.key));\r\n                                                    console.log(cols);\r\n                                                    return cols;\r\n                                                }}\r\n                                                placeholder=\"Select Columns\" \r\n                                                showSearch \r\n                                                showArrow\r\n                                                fieldNames={fieldNames}\r\n                                            >\r\n                                                Select Columns \r\n                                            </Select>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Button target=\"_blank\" disabled={!payouts_summary_1.link} href={payouts_summary_1 && payouts_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                            Download CSV\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Table pagination={false} dataSource={payouts_summary_1.content} >\r\n                                        {payouts_summary_1_cols && payouts_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\r\n                                    </Table>\r\n\r\n                                </>\r\n                                :\r\n                                <>\r\n\r\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\r\n                                        <Col>\r\n                                        <Select \r\n                                            mode=\"multiple\" \r\n                                            options={payouts_itemized_3.cols} \r\n                                            onChange={(arr) => {\r\n                                                const new_arr = payouts_itemized_3.cols.filter((el) => {\r\n                                                    return arr.includes(el.key)\r\n                                                });\r\n                                                set_payouts_itemized_3_cols(new_arr);\r\n                                            }}\r\n                                            defaultValue={() => {\r\n                                                let cols = [];\r\n                                                payouts_itemized_3_cols.forEach(c => cols.push(c.key));\r\n                                                console.log(cols);\r\n                                                return cols;\r\n                                            }}\r\n                                            placeholder=\"Select Columns\" \r\n                                            showSearch \r\n                                            showArrow\r\n                                            fieldNames={fieldNames}\r\n                                        >\r\n                                            Select Columns \r\n                                        </Select>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Button target=\"_blank\" disabled={!payouts_itemized_3.link} href={payouts_itemized_3 && payouts_itemized_3.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                            Download CSV\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Table pagination={false} dataSource={payouts_itemized_3.content} >\r\n                                        {payouts_itemized_3_cols && payouts_itemized_3_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\r\n                                    </Table>\r\n\r\n                                </>\r\n                            }\r\n                            \r\n                            <Divider />\r\n                        </>\r\n\r\n                        :\r\n\r\n                        <Skeleton active />\r\n                    }\r\n\r\n                </>\r\n            }\r\n\r\n            {\r\n                domain == \"Payout Reconciliation\" &&\r\n                <>\r\n\r\n                    <h2>Balance Summary</h2>\r\n                    <p>The Balance summary section shows your starting and ending Stripe balance for the selected date range, along with a high level summary of your activity during the period. Your balance includes funds that are available, pending, and any reserved funds, if applicable.</p>\r\n                    { balance_summary_1 ?\r\n                        <>\r\n                            <Row style={{marginBottom : \"0.8em\"}} justify=\"space-between\">\r\n                                <Col>\r\n                                    <Select \r\n                                        mode=\"multiple\" \r\n                                        options={balance_summary_1.cols} \r\n                                        onChange={(arr) => {\r\n                                            const new_arr = balance_summary_1.cols.filter((el) => {\r\n                                                return arr.includes(el.key)\r\n                                            });\r\n                                            set_balance_summary_1_cols(new_arr);\r\n                                        }}\r\n                                        defaultValue={() => {\r\n                                            let cols = [];\r\n                                            balance_summary_1_cols.forEach(c => cols.push(c.key));\r\n                                            console.log(cols);\r\n                                            return cols;\r\n                                        }}\r\n                                        placeholder=\"Select Columns\" \r\n                                        showSearch \r\n                                        showArrow\r\n                                        fieldNames={fieldNames}\r\n                                    >\r\n                                        Select Columns\r\n                                    </Select>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Button target=\"_blank\" disabled={!balance_summary_1.link} href={balance_summary_1 && balance_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                        Download CSV\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Table pagination={false} columns={balance_summary_1_cols} dataSource={balance_summary_1.content} >\r\n                                {/* {balance_summary_1_cols && balance_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)} */}\r\n                            </Table>\r\n\r\n                            <Divider />\r\n                            \r\n                        </>\r\n\r\n                        :\r\n\r\n                        <Skeleton active />\r\n                    }\r\n\r\n                    <h2>\r\n                        Payout Reconciliation - \r\n\r\n                        <Select className='category-select' bordered={false} onChange={(val) => set_payout_reconciliation_type(val)} value={balance_change_from_activity_type}>\r\n                            <Option value=\"summary\">Summary</Option>\r\n                            <Option value=\"itemized\">Itemized</Option>\r\n                        </Select>\r\n\r\n                    </h2>\r\n                    <p>The Payout reconciliation section provides a breakdown of the automatic payouts that were received in your bank account during the selected date range. The transactions included in those settlement batches are grouped by reporting category.</p>\r\n                    {(payout_reconciliation_summary_1 || payout_reconciliation_itemized_5) ?\r\n                        <>\r\n\r\n\r\n\r\n                            {\r\n                                payout_reconciliation_type === \"summary\" ?\r\n                                <>\r\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\r\n                                        <Col>\r\n                                            <Select \r\n                                                mode=\"multiple\" \r\n                                                options={payout_reconciliation_summary_1.cols} \r\n                                                onChange={(arr) => {\r\n                                                    const new_arr = payout_reconciliation_summary_1.cols.filter((el) => {\r\n                                                        return arr.includes(el.key)\r\n                                                    });\r\n                                                    set_payout_reconciliation_summary_1_cols(new_arr);\r\n                                                }}\r\n                                                defaultValue={() => {\r\n                                                    let cols = [];\r\n                                                    payout_reconciliation_summary_1_cols.forEach(c => cols.push(c.key));\r\n                                                    console.log(cols);\r\n                                                    return cols;\r\n                                                }}\r\n                                                placeholder=\"Select Columns\" \r\n                                                showSearch \r\n                                                showArrow\r\n                                                fieldNames={fieldNames}\r\n                                            >\r\n                                                Select Columns \r\n                                            </Select>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Button target=\"_blank\" disabled={!payout_reconciliation_summary_1.link} href={payout_reconciliation_summary_1 && payout_reconciliation_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                            Download CSV\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Table pagination={false} dataSource={payout_reconciliation_summary_1.content} >\r\n                                        {payout_reconciliation_summary_1_cols && payout_reconciliation_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\r\n                                    </Table>\r\n\r\n                                </>\r\n                                :\r\n                                <>\r\n\r\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\r\n                                        <Col>\r\n                                        <Select \r\n                                            mode=\"multiple\" \r\n                                            options={payout_reconciliation_itemized_5.cols} \r\n                                            onChange={(arr) => {\r\n                                                const new_arr = payout_reconciliation_itemized_5.cols.filter((el) => {\r\n                                                    return arr.includes(el.key)\r\n                                                });\r\n                                                set_payout_reconciliation_itemized_5_cols(new_arr);\r\n                                            }}\r\n                                            defaultValue={() => {\r\n                                                let cols = [];\r\n                                                payout_reconciliation_itemized_5_cols.forEach(c => cols.push(c.key));\r\n                                                console.log(cols);\r\n                                                return cols;\r\n                                            }}\r\n                                            placeholder=\"Select Columns\" \r\n                                            showSearch \r\n                                            showArrow\r\n                                            fieldNames={fieldNames}\r\n                                        >\r\n                                            Select Columns \r\n                                        </Select>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Button target=\"_blank\" disabled={!payout_reconciliation_itemized_5.link} href={payout_reconciliation_itemized_5 && payout_reconciliation_itemized_5.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                            Download CSV\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Table pagination={false} dataSource={payout_reconciliation_itemized_5.content} >\r\n                                        {payout_reconciliation_itemized_5_cols && payout_reconciliation_itemized_5_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\r\n                                    </Table>\r\n\r\n                                </>\r\n                            }\r\n                            \r\n                            <Divider />\r\n                        </>\r\n\r\n                        :\r\n\r\n                        <Skeleton active />\r\n                    }\r\n\r\n                    <br></br>   \r\n                    <h2>    \r\n                        Ending Balance Reconciliation - \r\n\r\n                        <Select className='category-select' bordered={false} onChange={(val) => set_ending_balance_reconciliation_type(val)} value={payouts_type}>\r\n                            <Option value=\"summary\">Summary</Option>\r\n                            <Option value=\"itemized\">Itemized</Option>\r\n                        </Select>\r\n\r\n                    </h2>\r\n                    <p>The Ending balance reconciliation section provides a similar breakdown of the transactions that hadn’t been settled as of the report’s end date.</p>\r\n                    {(ending_balance_reconciliation_summary_1 || ending_balance_reconciliation_itemized_4) ?\r\n                        <>\r\n\r\n\r\n\r\n                            {\r\n                                payouts_type === \"summary\" ?\r\n                                <>\r\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\r\n                                        <Col>\r\n                                            <Select \r\n                                                mode=\"multiple\" \r\n                                                options={ending_balance_reconciliation_summary_1.cols} \r\n                                                onChange={(arr) => {\r\n                                                    const new_arr = ending_balance_reconciliation_summary_1.cols.filter((el) => {\r\n                                                        return arr.includes(el.key)\r\n                                                    });\r\n                                                    set_ending_balance_reconciliation_summary_1_cols(new_arr);\r\n                                                }}\r\n                                                defaultValue={() => {\r\n                                                    let cols = [];\r\n                                                    ending_balance_reconciliation_summary_1_cols.forEach(c => cols.push(c.key));\r\n                                                    return cols;\r\n                                                }}\r\n                                                placeholder=\"Select Columns\" \r\n                                                showSearch \r\n                                                showArrow\r\n                                                fieldNames={fieldNames}\r\n                                            >\r\n                                                Select Columns \r\n                                            </Select>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Button target=\"_blank\" disabled={!ending_balance_reconciliation_summary_1.link} href={ending_balance_reconciliation_summary_1 && ending_balance_reconciliation_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                            Download CSV\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Table pagination={false} dataSource={ending_balance_reconciliation_summary_1.content} >\r\n                                        {ending_balance_reconciliation_summary_1_cols && ending_balance_reconciliation_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\r\n                                    </Table>\r\n\r\n                                </>\r\n                                :\r\n                                <>\r\n\r\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\r\n                                        <Col>\r\n                                        <Select \r\n                                            mode=\"multiple\" \r\n                                            options={ending_balance_reconciliation_itemized_4.cols} \r\n                                            onChange={(arr) => {\r\n                                                const new_arr = ending_balance_reconciliation_itemized_4.cols.filter((el) => {\r\n                                                    return arr.includes(el.key)\r\n                                                });\r\n                                                set_ending_balance_reconciliation_itemized_4_cols(new_arr);\r\n                                            }}\r\n                                            defaultValue={() => {\r\n                                                let cols = [];\r\n                                                ending_balance_reconciliation_itemized_4_cols.forEach(c => cols.push(c.key));\r\n                                                console.log(cols);\r\n                                                return cols;\r\n                                            }}\r\n                                            placeholder=\"Select Columns\" \r\n                                            showSearch \r\n                                            showArrow\r\n                                            fieldNames={fieldNames}\r\n                                        >\r\n                                            Select Columns \r\n                                        </Select>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Button target=\"_blank\" disabled={!ending_balance_reconciliation_itemized_4.link} href={ending_balance_reconciliation_itemized_4 && ending_balance_reconciliation_itemized_4.link} icon={<DownloadOutlined />} type='primary' shape='round'>\r\n                                            Download CSV\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Table pagination={false} dataSource={ending_balance_reconciliation_itemized_4.content} >\r\n                                        {ending_balance_reconciliation_itemized_4_cols && ending_balance_reconciliation_itemized_4_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\r\n                                    </Table>\r\n\r\n                                </>\r\n                            }\r\n                            \r\n                            <Divider />\r\n                        </>\r\n\r\n                        :\r\n\r\n                        <Skeleton active />\r\n                    }\r\n\r\n                </>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ViewReportSheet;","import React, {useState, useEffect} from 'react'\r\nimport { AreaChartOutlined, BookOutlined, LayoutOutlined, LogoutOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Affix, Button, Menu } from 'antd';\r\nimport Layout from 'antd/lib/layout/layout';\r\nimport Sider from 'antd/lib/layout/Sider';\r\nimport { useAuthUser, useSignOut } from 'react-auth-kit';\r\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport { MenuItem } from 'semantic-ui-react';\r\nimport { ListInvoicesSheet, ListReportsSheet, ListUsersSheet } from '.';\r\nimport Dashboard from './Dashboard';\r\nimport ViewInvoiceSheet from './ViewInvoiceSheet';\r\nimport ViewReportSheet from './ViewReportSheet';\r\n\r\n\r\nfunction getItem(label, key, icon, items) {\r\n    return {\r\n      key,\r\n      icon,\r\n      items,\r\n      label,\r\n    };\r\n  }\r\n  \r\n\r\n  \r\n\r\nexport default () => {\r\n\r\n    const navigate = useNavigate();\r\n    const auth_user = useAuthUser();\r\n    const signOutFunction = useSignOut();\r\n\r\n    const [collapsed, setCollapsed] = useState(true);\r\n    const [user, setUser] = useState(false);\r\n\r\n\r\n    const signOut = () => {\r\n        signOutFunction();\r\n        navigate(\"/\");\r\n    }\r\n\r\n    const toggleSideBar = () => {\r\n        setCollapsed(!collapsed);\r\n    }\r\n\r\n    // Check user permissions and display Sidebar menu accordingly.\r\n    useEffect(() => {\r\n        const user = auth_user();\r\n        console.log(user);\r\n        setUser(user);\r\n\r\n    }, [])\r\n    \r\n\r\n\r\n    return (\r\n        <Layout style={{minHeight : '100vh'}}>\r\n            <Affix> \r\n                <Menu className='menubar' theme=\"dark\" style={{backgroundColor : \"red !important\"}} mode='horizontal'>\r\n\r\n                    <Menu.Item onClick={signOut} style={{marginLeft : \"auto\"}} icon={<LogoutOutlined/>}>\r\n                        Sign Out\r\n                    </Menu.Item>\r\n                    {/* <Menu.SubMenu style={{marginLeft : \"auto\"}} title={<Button icon={<LogoutOutlined />}>Sign Out</Button>}>\r\n                    \r\n                    </Menu.SubMenu> */}\r\n                </Menu>\r\n            </Affix>\r\n            <Layout>\r\n            <Sider trigger={null} onMouseEnter={toggleSideBar} onMouseLeave={toggleSideBar} collapsible collapsed={collapsed}>\r\n                <Menu\r\n                theme=\"dark\"\r\n                mode=\"inline\"\r\n                // items={items}\r\n                >\r\n                    <Menu.Item key={0}  icon={<AreaChartOutlined className='sidebar-icon' />}>\r\n                        <Link to=\"/sheet\">\r\n                            {!collapsed && \"Dashboard\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key={1}  icon={<LayoutOutlined className='sidebar-icon' />}>\r\n                        <Link to=\"/sheet/invoice/list\">\r\n                            {!collapsed && \"Access Invoices\"}\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    {user && \r\n                        <>\r\n                            {(user.isAdmin || user.general_permissions.access_reports) && \r\n                                <Menu.Item key={2}  icon={<BookOutlined className='sidebar-icon' />}>\r\n                                    <Link to=\"/sheet/report/view\">\r\n                                        {!collapsed && \"Check Reports\"}\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                            }\r\n                            {(user.isAdmin || user.general_permissions.manage_users) && \r\n                                <Menu.Item key={3}  icon={<UserOutlined className='sidebar-icon' />}>\r\n                                    <Link to=\"/sheet/users/list\">\r\n                                        {!collapsed && \"Manage Users\"}\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                            }\r\n                        </>\r\n                    }\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n            <Routes>\r\n                <Route path=\"\" element={<Dashboard/>} />\r\n                <Route path=\"invoice/list\" element={<ListInvoicesSheet/>} />\r\n                <Route path=\"invoice/view/:invoice_id\" element={<ViewInvoiceSheet/>} />\r\n                <Route path=\"report/list\" element={<ListReportsSheet/>} />\r\n                <Route path=\"report/view/\" element={<ViewReportSheet/>} />\r\n                <Route path=\"users/list\" element={<ListUsersSheet/>} />\r\n            </Routes>\r\n            </Layout>\r\n            </Layout>\r\n            \r\n        </Layout>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport \"./Login.css\"\r\nimport { Alert, Button, Divider, Input, Space, Tabs } from 'antd'\r\nimport { ExclamationCircleOutlined, LockOutlined, LoginOutlined, UserAddOutlined, UserOutlined } from '@ant-design/icons';\r\nimport Wave from \"react-wavify\";\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { apiCall } from '../../helpers';\r\nimport { useSignIn } from 'react-auth-kit';\r\n\r\nconst Login = () => {\r\n\r\n    const [login_email, setLogin_email] = useState(\"hrushikeshchapke@gmail.com\");\r\n    const [login_password, setLogin_password] = useState(\"password\");\r\n    const [register_email, setRegister_email] = useState(\"\");\r\n    const [register_password, setRegister_password] = useState(\"\");\r\n    const [register_password_confirm, setRegister_password_confirm] = useState(\"\");\r\n\r\n    const [login_errors, setLogin_errors] = useState([]);\r\n    const [register_errors, setRegister_errors] = useState([]);\r\n\r\n    const signIn = useSignIn()\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const tryLogin = () => {\r\n        let errors = [];\r\n\r\n        if(!login_email) errors.push(\"Please enter a valid e-mail.\");\r\n        if(!login_password) errors.push(\"Please enter your password.\");\r\n\r\n        if(errors.length > 0){\r\n            setLogin_errors(errors);\r\n            return;\r\n        }\r\n\r\n\r\n        apiCall(\"/auth/login\", {\r\n            email : login_email,\r\n            password : login_password\r\n        }, (response, error) => {\r\n            console.log(\"LOGIN CALL RESPONSE\",response, error);\r\n            \r\n            if(response.data.token){\r\n                if(signIn({\r\n                    token: response.data.token,\r\n                    expiresIn: 86400,\r\n                    tokenType: \"Bearer\",\r\n                    authState: response.data.user,\r\n                })){\r\n                    navigate('/sheet/');        \r\n                }\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    const tryRegister = () => {\r\n        let errors = [];\r\n\r\n        if(!register_email) errors.push(\"Please enter a valid e-mail.\");\r\n        if(!register_password) errors.push(\"Please enter your password.\");\r\n        if(!register_password_confirm) errors.push(\"Please confirm your password.\");\r\n        if(register_password !== register_password_confirm) errors.push(\"Your passwords don't match, please try again.\");\r\n\r\n        if(errors.length > 0){\r\n            setRegister_errors(errors);\r\n            return;\r\n        }\r\n\r\n        apiCall(\"/auth/register\", {\r\n            email : register_email,\r\n            password : register_password\r\n        }, (response, error) => {\r\n            console.log(\"REGISTER CALL RESPONSE\",response, error);\r\n            \r\n            if(response.data.token){\r\n                if(signIn({\r\n                    token: response.data.token,\r\n                    expiresIn: 86400,\r\n                    tokenType: \"Bearer\",\r\n                    authState: response.data.user,\r\n                })){\r\n                    navigate('/sheet/');        \r\n                }\r\n                \r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"login-container\">\r\n            <Wave fill='#7a7a7a2f'\r\n                paused={false}\r\n                options={{\r\n                height: 360,\r\n                amplitude: 40,\r\n                speed: 0.15,\r\n                points: 8\r\n                }}\r\n                style={{position : \"absolute\", bottom : '0px', top : '0px', zIndex : '2 !important'}}\r\n            />\r\n            <div className=\"sheet login\">\r\n                <Tabs tabPosition='bottom'>\r\n                    <Tabs.TabPane tab=\"Login\" key={1} >\r\n                        <Space direction='vertical' align='center' className='fields-container'>\r\n                        <h2 style={{textDecoration : \"underline\"}}>Login</h2>\r\n                        <Input onChange={(e) => setLogin_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\r\n                        <Input onChange={(e) => setLogin_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\r\n                        <a className='forgot-btn' href=\"#\">Forgot Password?</a>\r\n                        {login_errors.map((error, index) => {\r\n                            return (\r\n                                <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\r\n                            )\r\n                        })}\r\n                        <br></br>\r\n                        <Button type='primary' onClick={() => tryLogin()} icon={<LoginOutlined/>}>Login</Button>\r\n                        <br></br>\r\n                        </Space>\r\n                    </Tabs.TabPane>\r\n                    <Tabs.TabPane tab=\"Register\" key={2} >\r\n                        <Space direction='vertical' align='center' className='fields-container'>\r\n                            <h2 style={{textDecoration : \"underline\"}}>Register</h2>\r\n                            <Input onChange={(e) => setRegister_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\r\n                            <Input onChange={(e) => setRegister_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\r\n                            <Input onChange={(e) => setRegister_password_confirm(e.target.value)} type=\"password\" placeholder='Confirm password' prefix={<LockOutlined />} />\r\n                            {register_errors.map((error, index) => {\r\n                                return (\r\n                                    <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\r\n                                )\r\n                            })}\r\n                            <br></br>\r\n                            <Button onClick={() => tryRegister()} type='primary' icon={<UserAddOutlined/>}>Register</Button>\r\n                            <br></br>\r\n                        </Space>\r\n                    </Tabs.TabPane>\r\n                </Tabs>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react'\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\n\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\n\r\nexport default () => {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"\" element={<Login/>} />\r\n        </Routes>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport 'antd/dist/antd.css';\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport SheetRoutes from './pages/sheets/SheetRoutes'\r\nimport AuthRoutes from './pages/auth/AuthRoutes'\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\nimport { AuthProvider, RequireAuth } from 'react-auth-kit'\r\n\r\nReactDOM.render(\r\n\r\n    <AuthProvider\r\n        authType='cookie'\r\n        authName='_auth'\r\n        expiresIn={86400}\r\n        cookieDomain={window.location.hostname}\r\n        cookieSecure={window.location.protocol === \"https:\"}\r\n    >\r\n        <Router>\r\n            <Routes>\r\n                <Route path=\"/\" element={<AuthRoutes />} />\r\n\r\n                <Route path=\"sheet/*\" element={\r\n                    <RequireAuth loginPath={'/'}>\r\n                        <SheetRoutes />\r\n                    </RequireAuth>\r\n                }></Route>\r\n            </Routes>\r\n        </Router>\r\n    </AuthProvider>\r\n    ,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}