{"version":3,"sources":["www/serviceWorker.js","www/helpers.js","www/pages/sheets/snippets/StatusTag.jsx","www/pages/sheets/ListInvoicesSheet.jsx","www/pages/sheets/ListReportsSheet.jsx","www/pages/sheets/Dashboard.jsx","www/pages/sheets/ViewInvoiceSheet.jsx","www/pages/sheets/ViewReportSheet.jsx","www/pages/sheets/SheetRoutes.jsx","www/pages/auth/Login.jsx","www/pages/auth/AuthRoutes.jsx","www/index.js"],"names":["Boolean","window","location","hostname","match","backend_api_url","concat","protocol","API_URL","apiCall","route","data","callback","token","loadingCallbackState","navigate","axios","post","headers","Authorization","then","catch","error","ReportError","axios_response","notif","console","log","message","response","notification","description","status","raw","Array","isArray","forEach","element","statusText","getDateObject","seconds","t","Date","setSeconds","getStatusColor","color","StatusTag","_ref","faint","react_default","a","createElement","tag","style","opacity","toUpperCase","hdate","require","changeStatus","new_status","invoice_id","auth_token","fetchInvoices","changeLabel","actionsMenu","menu","items","key","label","react_router_dom","to","es_button","type","icon","LayoutOutlined","block","children","onClick","danger","RollbackOutlined","e","onChange","pagination","filters","sorter","extra","ListInvoicesSheet","authHeader","useAuthHeader","useNavigate","_useState","useState","_useState2","Object","slicedToArray","invoices","setInvoices","_useState3","_useState4","loading","setLoading","r","row","index","created_verbose","prettyPrint","created","showTime","columns","title","dataIndex","align","render","amount","invoice","getSymbolFromCurrency","currency","Math","round","amount_due","printAmount","metadata_marked_status","metadata","marked_status","snippets_StatusTag","text","value","onFilter","record","hasOwnProperty","custom_status","dropdown","arrow","overlay","placement","space","DownOutlined","useEffect","className","table","dataSource","ListReportsSheet","reports","setReports","report_type","dict","balance.summary.1","balance_change_from_activity.summary.1","balance_change_from_activity.itemized.3","payouts.summary.1","payouts.itemized.3","payout_reconciliation.summary.1","payout_reconciliation.itemized.5","ending_balance_reconciliation.summary.1","replaceAll","reportVerbose","size","report","commaNumber","result","parameters","interval_start","interval_end","colSpan","report_id","BookOutlined","disabled","MinusCircleOutlined","id","RangePicker","DatePicker","Dashboard","carousel_ref","useRef","yesterday","setYesterday","yesterday_statistic","setYesterday_statistic","_useState5","_useState6","yesterday_type_amount","setYesterday_type_amount","_useState7","_useState8","lastWeek","setLastWeek","_useState9","_useState10","lastWeek_statistic","setLastWeek_statistic","_useState11","_useState12","lastWeek_type_amount","setLastWeek_type_amount","_useState13","_useState14","lastMonth","setLastMonth","_useState15","_useState16","lastMonth_statistic","setLastMonth_statistic","_useState17","_useState18","lastMonth_type_amount","setLastMonth_type_amount","_useState19","_useState20","lastYear","setLastYear","_useState21","_useState22","lastYear_statistic","setLastYear_statistic","_useState23","_useState24","lastYear_type_amount","setLastYear_type_amount","_useState25","_useState26","dates","setDates","_useState27","_useState28","customAggregateData","setCustomAggregateData","_useState29","_useState30","aggregateDataType","setAggregateDataType","getYesterdayStatsData","getLastWeekStatsData","getLastMonthStatsData","getLastYearStatsData","moment","subtract","start","startOf","unix","end","endOf","count","el","date","setHours","_id","hour","total_amount","format","amount_avg","length","count_avg","fetchYesteday","last_week","year","month","day","fetchLastWeek","last_month","fetchLastMonth","last_year","fetchLastYear","annotationLineStyles","stroke","lineDash","lineWidth","gradientFill","fill","yesterday_config_1","xField","yField","annotations","position","content","offsetY","textBaseline","meta","alias","formatter","substring","xAxis","tickCount","smooth","areaStyle","yesterday_config_2","lastWeek_config_1","lastWeek_config_2","lastMonth_config_1","lastMonth_config_2","lastYear_config_1","lastYear_config_2","minHeight","onCalendarChange","fetchCustomDateRangeData","AreaChartOutlined","shape","es_row","es_col","span","onMouseOver","current","goTo","gutter","justify","statistic","prefix","DollarOutlined","PlusCircleFilled","display","flexFlow","justifyContent","alignItems","segmented","options","val","Fragment","components_area","assign","carousel","ref","dotPosition","autoplaySpeed","cols","o","price","s","replace","txt","charAt","substr","toLowerCase","ViewInvoiceSheet","useParams","setInvoice","setItems","lines","customer_name","split","number","relativeTime","due_date","marginTop","marginRight","skeleton","active","account_name","customer_email","customer_address","customer_phone","divider","Option","Select","categories","Balance","1","2","3","4","5","Payout Reconciliation","6","7","8","9","10","inv_categories","_inv_categories","defineProperty","fieldNames","ViewReportSheet","domain","setDomain","current_page_status","setCurrent_page_status","balance_summary_1","set_balance_summary_1","balance_summary_1_cols","set_balance_summary_1_cols","balance_change_from_activity_type","set_balance_change_from_activity_type","balance_change_from_activity_summary_1","set_balance_change_from_activity_summary_1","balance_change_from_activity_summary_1_cols","set_balance_change_from_activity_summary_1_cols","balance_change_from_activity_itemized_3","set_balance_change_from_activity_itemized_3","balance_change_from_activity_itemized_3_cols","set_balance_change_from_activity_itemized_3_cols","payouts_type","set_payouts_type","payouts_summary_1","set_payouts_summary_1","payouts_summary_1_cols","set_payouts_summary_1_cols","payouts_itemized_3","set_payouts_itemized_3","_useState31","_useState32","payouts_itemized_3_cols","set_payouts_itemized_3_cols","_useState33","_useState34","payout_reconciliation_type","set_payout_reconciliation_type","_useState35","_useState36","payout_reconciliation_summary_1","set_payout_reconciliation_summary_1","_useState37","_useState38","payout_reconciliation_summary_1_cols","set_payout_reconciliation_summary_1_cols","_useState39","_useState40","payout_reconciliation_itemized_5","set_payout_reconciliation_itemized_5","_useState41","_useState42","payout_reconciliation_itemized_5_cols","set_payout_reconciliation_itemized_5_cols","_useState43","_useState44","set_ending_balance_reconciliation_type","_useState45","_useState46","ending_balance_reconciliation_summary_1","set_ending_balance_reconciliation_summary_1","_useState47","_useState48","ending_balance_reconciliation_summary_1_cols","set_ending_balance_reconciliation_summary_1_cols","_useState49","_useState50","ending_balance_reconciliation_itemized_4","set_ending_balance_reconciliation_itemized_4","_useState51","_useState52","ending_balance_reconciliation_itemized_4_cols","set_ending_balance_reconciliation_itemized_4_cols","downloadAndSetFileStateContents","file_id","link","makeColumns","reportStateObject","fetchSetReportStateCols","fetchSetReportState","call","curr","push","createReportAndAwaitCompletion","apiCallObject","startsWith","url","ws","WebSocket","addEventListener","event","msg","JSON","parse","close","option","ViewReportSheet_RangePicker","AuditOutlined","i","report_type_desc","LoadingOutlined","spin","marginBottom","es_select","mode","arr","new_arr","filter","includes","defaultValue","c","placeholder","showSearch","showArrow","target","href","DownloadOutlined","map","col","bordered","SheetRoutes","auth_user","useAuthUser","signOutFunction","useSignOut","collapsed","setCollapsed","user","setUser","toggleSideBar","layout_default","affix","theme","backgroundColor","Item","marginLeft","LogoutOutlined","Sider_default","trigger","onMouseEnter","onMouseLeave","collapsible","permissions","access_reports","isAdmin","UserOutlined","react_router","path","sheets_Dashboard","sheets_ListInvoicesSheet","sheets_ViewInvoiceSheet","sheets_ListReportsSheet","sheets_ViewReportSheet","Login","login_email","setLogin_email","login_password","setLogin_password","register_email","setRegister_email","register_password","setRegister_password","register_password_confirm","setRegister_password_confirm","login_errors","setLogin_errors","register_errors","setRegister_errors","signIn","useSignIn","index_module","paused","height","amplitude","speed","points","bottom","top","zIndex","tabs","tabPosition","TabPane","tab","direction","textDecoration","input","LockOutlined","es_alert","ExclamationCircleOutlined","showIcon","fontSize","errors","email","password","expiresIn","tokenType","authState","tryLogin","LoginOutlined","tryRegister","UserAddOutlined","AuthRoutes","pages_auth_Login","ReactDOM","index_modern","authType","authName","cookieDomain","cookieSecure","loginPath","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4adba0a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { notification } from 'antd';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport { useAuthHeader } from 'react-auth-kit';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useSignOut } from 'react-auth-kit';\n\n\n// export const API_URL = `${window.location.protocol}//${window.location.hostname}:${process.env.PORT || 3000}`;\n\nlet backend_api_url = `${window.location.protocol}//${window.location.hostname}`;\nif(window.location.hostname == \"localhost\") backend_api_url += \":4000\";\n\nexport const API_URL = backend_api_url;\nexport const apiCall = (route, data, callback, token, loadingCallbackState, navigate) => {\n    axios.post(API_URL + route, data, (token ? { headers : { Authorization : token } } : {})).then(callback).catch(error => {ReportError(error, navigate); if(loadingCallbackState) loadingCallbackState(false)});\n}\n\nexport const ReportError = (axios_response, navigate) => {\n\n    let notif = {\n        \n    }\n    \n    console.log(\"CAUGHT API CALL ERROR : \", axios_response);\n    \n\n    notif = {\n        message : \"There was an error.\",\n    };\n    if(!axios_response.response){\n\n        if(axios_response.data){\n\n        }\n        notification['error']({\n            message : \"There was an error.\",\n            description : (axios_response.message ? axios_response.message : axios_response)\n        })\n\n        return;\n    }\n    if(axios_response.response.status === 403){\n        notif.message = \"Your Session has timed out.\";\n        notif.description = \"Please sign in again to continue.\";\n        notification['error'](notif);\n\n        navigate(\"/\")\n\n        return;\n        \n    }\n    const response = axios_response.response;\n\n    if(response.data){\n        if(response.data.raw && response.data.raw.message) notif.description = response.data.raw.message;\n        else if(response.data.error && response.data.error.message) notif.description = response.data.error.message;\n        \n        else if(typeof response.data.error === \"string\") notif.description = response.data.error;\n        else if(Array.isArray(response.data.error)){\n            response.data.error.forEach(element => {\n                notif.description += element + '.'\n            });\n        }\n        else if(response.data.message) notif.description = response.data.message;\n        else if(response.message) notif.description = response.message;\n    }\n\n    if(!notif.description) notif.description = axios_response.response.statusText;\n    notification['error'](notif);\n}\n\nexport const getDateObject = (seconds) => {\n    var t = new Date(1970, 0, 1); // Epoch\n    t.setSeconds(seconds);\n    return t;\n}\n\nexport const getStatusColor = (status) => {\n    let color = false;\n    switch (status) {\n        case 'paid':\n            color = 'green';\n            break;\n    \n        case 'invoiced_in_error':\n            color = 'volcano';\n            break;\n    \n        case 'waiver':\n            color = 'geekblue';\n            break;\n    \n        case 'voucher':\n            color = 'geekblue';\n            break;\n    \n        case 'refund':\n            color = 'orange';\n            break;\n    \n        case 'uncollectible':\n            color = 'magenta';\n            break;\n    \n        case 'open':\n            color = 'cyan';\n            break;\n    \n        default:\n            break;\n    }\n    \n    return color;\n}\n\nexport const printAmount = (invoice) => {\n    return `${getSymbolFromCurrency(invoice.currency)}${Math.round(invoice.amount_due/100)}`;\n}\n\nexport const HaltIfNotPermitted = (event) => {\n\n}\n\nexport const reportVerbose = (report_type) => {\n    const dict = {\n        \"balance.summary.1\" : \"Balance - Summary\",\n        \"balance_change_from_activity.summary.1\" : \"Balance change from activity - Summary\",\n        \"balance_change_from_activity.itemized.3\" : \"Balance change from activity - Itemized\",\n        \"payouts.summary.1\" : \"Payouts - Summary\",\n        \"payouts.itemized.3\" : \"Payouts - Itemized\",\n        \"payout_reconciliation.summary.1\" : \"Payout reconciliation - Summary\",\n        \"payout_reconciliation.itemized.5\" : \"Payout reconciliation - Itemized\",\n        \"ending_balance_reconciliation.summary.1\" : \"Ending balance reconciliation - Summary\",\n    }\n\n    if(dict.hasOwnProperty(report_type)) return dict[report_type];\n\n    report_type = report_type.replaceAll('.', ' ');\n    report_type = report_type.replaceAll('_', ' ');\n\n    return report_type;\n\n}","import { Tag } from 'antd';\nimport React, { Component } from 'react'\nimport { getStatusColor } from '../../../helpers';\n\n\nconst StatusTag = ({status,faint}) => {\n\n    return (\n        <Tag style={{opacity : (faint ? '0.4' : '1')}} color={getStatusColor((status))}>{status ? status.toUpperCase() : \"None\"}</Tag>\n    )\n}\n\nexport default StatusTag;","import React, { useState, useEffect } from 'react'\nimport { Button, Dropdown, Menu, Space, Table, Tag } from \"antd\"\nimport { DownOutlined, LayoutOutlined, RightCircleOutlined, RollbackOutlined, SmileOutlined } from '@ant-design/icons';\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError } from '../../helpers';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport StatusTag from './snippets/StatusTag';\nimport { useAuthHeader } from 'react-auth-kit';\n\nconst hdate = require(\"human-date\");\n\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/label/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst actionsMenu = (invoice_id, auth_token, fetchInvoices, navigate) => {\n    \n    \n    return (\n\n        <Menu \n            items={[\n                {\n                    key : 1,\n                    label : (\n                        <NavLink to={\"/sheet/invoice/view/\" + invoice_id}>\n                            <Button type='dashed' icon={<LayoutOutlined/>} block >View Invoice</Button>\n                        </NavLink>\n                    ),\n\n                },\n                {\n                    key : 2,\n                    label : 'Mark Invoice',\n                    children : [\n                        {\n                            key : '2.1',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"paid\", invoice_id, auth_token, fetchInvoices, navigate)}>Paid</Button>\n                            )\n                        },\n                        {\n                            key : '2.2',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices, navigate)}>Invoiced in error</Button>\n                            )\n                        },\n                        {\n                            key : '2.3',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"waiver\", invoice_id, auth_token, fetchInvoices, navigate)}>Waiver</Button>\n                            )\n                        },\n                        {\n                            key : '2.4',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"voucher\", invoice_id, auth_token, fetchInvoices, navigate)}>Voucher</Button>\n                            )\n                        },\n                        {\n                            key : '2.5',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"refund\", invoice_id, auth_token, fetchInvoices, navigate)}>Refund</Button>\n                            )\n                        },\n                        {\n                            key : '2.6',\n                            label : (\n                                <Button block type=\"dashed\" onClick={() => changeLabel(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)}>Uncollectible</Button>\n                            )\n                        },\n                    ]\n                },\n                {\n                    key : 3,\n                    label : 'Change Status',\n                    children : [\n                        {\n                            key : '3.1',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"paid\", invoice_id, auth_token, fetchInvoices, navigate)}>Paid</Button>\n                            )\n                        },\n                        {\n                            key : '3.2',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"invoiced_in_error\", invoice_id, auth_token, fetchInvoices, navigate)}>Invoiced in error</Button>\n                            )\n                        },\n                        {\n                            key : '3.3',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"waiver\", invoice_id, auth_token, fetchInvoices, navigate)}>Waiver</Button>\n                            )\n                        },\n                        {\n                            key : '3.4',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"voucher\", invoice_id, auth_token, fetchInvoices, navigate)}>Voucher</Button>\n                            )\n                        },\n                        {\n                            key : '3.5',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"refund\", invoice_id, auth_token, fetchInvoices, navigate)}>Refund</Button>\n                            )\n                        },\n                        {\n                            key : '3.6',\n                            label : (\n                                <Button block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)}>Uncollectible</Button>\n                            )\n                        },\n                    ]\n                },\n                {\n                    key : 4,\n                    label : (\n                            <Button type='primary' danger icon={<RollbackOutlined/>} block onClick={() => changeStatus(\"uncollectible\", invoice_id, auth_token, fetchInvoices, navigate)} >Refund</Button>\n                    )\n                },\n            ]}\n\n            onClick={(e) => console.log(e)}\n        />\n    )\n}\n\n\n\n\nconst onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n\n\nconst ListInvoicesSheet =  () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n    \n    const [invoices, setInvoices] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const fetchInvoices = () => {\n        setLoading(true);\n        apiCall(\"/invoices/list\", {}, (r) => {\n    \n            let invoices = r.data.data.data;\n            // console.log(Array.isArray(invoices))\n            invoices.forEach((row, index) => {\n                row.created_verbose = hdate.prettyPrint(getDateObject(row.created), { showTime : true });\n                row.key = index;\n            })\n            setLoading(false);\n            setInvoices(invoices);\n        }, authHeader(), setLoading, navigate)\n        \n    }\n\n    const columns = [\n        // Offering\n        {\n            title : \"Offering\",\n            dataIndex : \"account_name\",\n            key : \"account_name\"\n        },\n        // Email\n        {\n            title : \"Email\",\n            dataIndex : \"customer_email\",\n            key : \"customer_email\"\n        },\n        // Amount\n        {\n            title : \"Amount\",\n            dataIndex : \"amount_due\",\n            key : \"amount_due\",\n            align : \"center\",\n            render : (amount, invoice) => {\n                return ( \n                    <span>{printAmount(invoice)}</span>\n                )\n            }\n        },\n        // Marked for Status\n        {\n            title : \"Marked for\",\n            dataIndex : \"metadata.marked_status\",\n            key : \"marked_status\",\n            align : \"center\",\n            render : (metadata_marked_status, invoice) => {\n                \n                if(invoice.metadata.marked_status){\n                    return <StatusTag faint status={invoice.metadata.marked_status}/>\n                }\n            },\n            filters : [\n                {\n                    text : 'Draft',\n                    value : 'draft'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'invoiced_in_error'\n                },\n                {\n                    text : 'Waiver',\n                    value : 'waiver'\n                },\n                {\n                    text : 'Voucher',\n                    value : 'voucher'\n                },\n                {\n                    text : 'Refund',\n                    value : 'refund'\n                },\n                {\n                    text : 'Uncollectible',\n                    value : 'uncollectible'\n                },\n                {\n                    text : \"Open\",\n                    value : \"open\"\n                },\n                {\n                    text : \"Paid\",\n                    value : \"paid\"\n                }\n            ],\n            onFilter: (value, record) => record.status === value,\n        },\n        // Current Status\n        {\n            title : \"Current status\",\n            dataIndex : \"status\",\n            key : \"status\",\n            align : \"center\",\n            render : (status, invoice) => <StatusTag status={invoice.metadata.hasOwnProperty(\"custom_status\") ? invoice.metadata.custom_status : status}/>,\n            filters : [\n                {\n                    text : 'Draft',\n                    value : 'draft'\n                },\n                {\n                    text : 'Invoiced in error',\n                    value : 'invoiced_in_error'\n                },\n                {\n                    text : 'Waiver',\n                    value : 'waiver'\n                },\n                {\n                    text : 'Voucher',\n                    value : 'voucher'\n                },\n                {\n                    text : 'Refund',\n                    value : 'refund'\n                },\n                {\n                    text : 'Uncollectible',\n                    value : 'uncollectible'\n                },\n                {\n                    text : \"Open\",\n                    value : \"open\"\n                },\n                {\n                    text : \"Paid\",\n                    value : \"paid\"\n                }\n            ],\n            onFilter: (value, record) => record.status === value,\n        },\n        {\n            title : \"Created\",\n            dataIndex : \"created_verbose\",\n            key : \"created_verbose\"\n        },\n        {\n            title : \"Action\",\n            dataIndex : \"id\",\n            key : \"action\",\n            render : (invoice_id) => {\n                return (\n                    <Dropdown\n                    arrow={false}\n                    overlay={actionsMenu(invoice_id, authHeader(), fetchInvoices, navigate)}\n                    placement=\"bottomRight\"\n                >\n                    <Button >\n                        <Space>\n                        Actions\n                        <DownOutlined/>\n                        </Space>\n                    </Button>\n                </Dropdown>\n                )\n            }\n        }\n    ]\n\n    \n\n    useEffect(() => {\n        \n        fetchInvoices();\n      \n    }, [])\n    \n    return (\n        <div className='sheet'>\n            <Space/>\n            <h2>Invoices </h2>\n            \n            <Table loading={loading} dataSource={invoices} columns={columns} onChange={onChange} />\n            \n        </div>\n    )\n}\n\nexport default ListInvoicesSheet","import React, { useState, useEffect } from 'react'\nimport { Button, Dropdown, Menu, Space, Table, Tag } from \"antd\"\nimport { BookOutlined, MinusCircleOutlined} from '@ant-design/icons';\nimport { apiCall, getDateObject, getStatusColor, printAmount, ReportError, reportVerbose } from '../../helpers';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport StatusTag from './snippets/StatusTag';\nimport { useAuthHeader } from 'react-auth-kit';\nimport commaNumber from 'comma-number';\n\nconst hdate = require(\"human-date\");\n\nconst changeStatus = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\nconst changeLabel = (new_status, invoice_id, auth_token, fetchInvoices, navigate) => {\n\n    apiCall(`/invoices/update/label/${new_status}`, {invoice_id}, (response) => {\n        if(response.status == 200) fetchInvoices();\n        else{\n            ReportError(response);\n        }\n    }, auth_token, null, navigate);\n}\n\n\n\n\nconst onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n\n\nconst ListReportsSheet =  () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n    \n    const [reports, setReports] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const fetchReports = () => {\n        setLoading(true);\n        apiCall(\"/reports/list\", {}, (r) => {\n    \n            const reports = r.data.data.data;\n            reports.forEach(r => {\n                r.key = r.id\n            });\n\n            setReports(reports);\n            setLoading(false);\n        }, authHeader(), setLoading, navigate)\n        \n    }\n\n    const columns = [\n        // Report Category\n        {\n            title : \"Report Category\",\n            dataIndex : \"report_type\",\n            key : \"report_type\",\n            render : (report_type) => {\n                return reportVerbose(report_type);\n            }\n        },\n        // Size\n        {\n            title : \"Size\",\n            dataIndex : \"size\",\n            key : \"size\",\n            render : (size, report) => commaNumber(report.result.size) + \" KB\"\n        },\n        // Created\n        {\n            title : \"Created\",\n            dataIndex : \"created\",\n            key : \"created\",\n            render : (created) => hdate.prettyPrint(getDateObject(created))\n        },\n        {\n            title : \"Interval\",\n            dataIndex : \"parameters\",\n            key : \"parameters\",\n            render : (parameters) => {\n              return `${hdate.prettyPrint(getDateObject(parameters.interval_start))} to ${hdate.prettyPrint(getDateObject(parameters.interval_end))}.`;\n            }\n        },\n        \n        {\n            title : \"Action\",\n            dataIndex : \"id\",\n            key : \"action\",\n            colSpan : 2,\n            render : (report_id, report) => {\n\n                if(report.status == 'succeeded') return (\n                    <NavLink to={\"/sheet/report/view/\" + report_id}>\n                        <Button type='primary' icon={<BookOutlined />} block >View Report</Button>\n                    </NavLink>\n                )\n                else return (\n                    <Button disabled type=\"primary\" icon={<MinusCircleOutlined/>} block >Report {report.status}</Button>\n                )\n            }\n        }\n    ]\n\n    \n\n    useEffect(() => {\n        \n        fetchReports();\n      \n    }, [])\n    \n    return (\n        <div className='sheet'>\n            <Space/>\n            <h1>Reports </h1>\n            \n            <Table loading={loading} dataSource={reports} columns={columns} onChange={onChange} />\n            \n        </div>\n    )\n}\n\n\n\nexport default ListReportsSheet","import { AreaChartOutlined, DollarOutlined, PlusCircleFilled } from '@ant-design/icons';\nimport { Carousel, Col, DatePicker, Row, Segmented, Statistic, Button, Space, notification } from 'antd';\nimport { Area, Line } from \"@ant-design/charts\";\nimport { apiCall } from '../../helpers';\nimport \"./styles/Dashboard.css\"\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useAuthHeader } from 'react-auth-kit';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\n\nconst { RangePicker } = DatePicker\n\nconst commaNumber = require('comma-number')\n\nconst dummyStateData = 36000;\nconst dummyStateDataSmall = 36;\n\nconst Dashboard = () => {\n\n    const carousel_ref = useRef();\n\n    const [yesterday, setYesterday] = useState([]);\n    const [yesterday_statistic, setYesterday_statistic] = useState(false);\n    const [yesterday_type_amount, setYesterday_type_amount] = useState(true);\n\n    const [lastWeek, setLastWeek] = useState([]);\n    const [lastWeek_statistic, setLastWeek_statistic] = useState(false);\n    const [lastWeek_type_amount, setLastWeek_type_amount] = useState(true);\n\n    const [lastMonth, setLastMonth] = useState([]);\n    const [lastMonth_statistic, setLastMonth_statistic] = useState(false);\n    const [lastMonth_type_amount, setLastMonth_type_amount] = useState(true);\n\n    const [lastYear, setLastYear] = useState([]);\n    const [lastYear_statistic, setLastYear_statistic] = useState(false);\n    const [lastYear_type_amount, setLastYear_type_amount] = useState(true);\n\n    const [dates, setDates] = useState([]);\n    const [customAggregateData, setCustomAggregateData] = useState(false);\n    const [aggregateDataType, setAggregateDataType] = useState(true)\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    const fetchCustomDateRangeData = () => {\n        if(dates.length < 2){\n            return notification['warning']({\n                title : \"Create Dashboard\",\n                description : \"Please select start and end dates.\"\n            });\n        }\n\n        console.log(dates[0].format(), dates[1].format())\n\n        const start = dates[0].unix();\n        const end = dates[1].unix();\n\n        apiCall('/reports/dashboard/custom', {start, end}, (response) => {\n\n            const data = response.data.data;\n\n          \n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                delete el._id\n            });\n\n            console.log(\"CUSTOM AGGREGATE DATA\", data);\n\n            setCustomAggregateData(data);\n\n        }, authHeader(), null, navigate);\n\n\n        \n    }\n\n    const fetchYesteday = () => {\n\n        let yesterday = moment().subtract(1, \"day\");\n        let start = yesterday.startOf(\"day\").unix();\n        let end = yesterday.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/day\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n                \n                const date = new Date();\n                date.setHours(el._id.hour);\n\n                el.total_amount /= 100;\n\n                el.hour = moment(date).format(\"hh a\");\n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n            setYesterday_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"YESTERDAY AGGREGATE DATA\", data);\n            setYesterday(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastWeek = () => {\n\n        let last_week = moment().subtract(1, \"week\");\n        let start = last_week.startOf(\"day\").unix();\n        let end = last_week.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            console.log(data)\n\n            setLastWeek_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST WEEK AGGREGATE DATA\", data);\n\n            setLastWeek(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastYear = () => {\n\n        let last_year = moment().subtract(1, \"month\");\n        let start = last_year.startOf(\"day\").unix();\n        let end = last_year.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/year\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}`;\n                \n                el.total_amount /= 100;\n\n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            \n\n            setLastYear_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST YEAR AGGREGATE DATA\", data);\n\n            setLastYear(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const fetchLastMonth = () => {\n\n        let last_month = moment().subtract(1, \"month\");\n        let start = last_month.startOf(\"day\").unix();\n        let end = last_month.endOf(\"day\").unix();\n    \n        apiCall(\"/reports/dashboard/week\", {start, end}, (response) => {\n            const data = response.data.data;\n\n\n            let amount = 0, count = 0;\n            data.forEach(el => {\n\n                el.date = `${el._id.year}/${el._id.month}/${el._id.day}`;\n                \n                el.total_amount /= 100;\n                \n                count += el.count;\n                amount += el.total_amount\n                delete el._id\n            });\n\n            console.log(data)\n\n            setLastMonth_statistic({\n                amount, count, amount_avg : Math.round(amount/data.length), count_avg : Math.round(count/data.length)\n            });\n\n            console.log(\"LAST MONTH AGGREGATE DATA\", data);\n\n            setLastMonth(data);\n\n        }, authHeader(), null, navigate);\n    }\n\n    const getYesterdayStatsData = (key) => {\n        if(yesterday_statistic) return yesterday_statistic[key];\n        else return 0;\n    }\n\n    const getLastWeekStatsData = (key) => {\n        if(lastWeek_statistic) return lastWeek_statistic[key];\n        else return 0;\n    }\n\n    const getLastMonthStatsData = (key) => {\n        if(lastMonth_statistic) return lastMonth_statistic[key];\n        else return 0;\n    }\n\n    const getLastYearStatsData = (key) => {\n        if(lastYear_statistic) return lastYear_statistic[key];\n        else return 0;\n    }\n\n\n    useEffect(() => {\n        fetchYesteday();\n        fetchLastWeek();\n        fetchLastMonth();\n        fetchLastYear();\n    }, [])\n\n    const annotationLineStyles = {\n        stroke : \"rgb(80, 80, 80)\",\n        lineDash : [10, 5],\n        lineWidth : 2,\n        opacity : 0.75\n    };\n\n    const gradientFill = {\n        fill: 'l(270) 0:#af7bb4b2 1:#165481ad',\n    };\n\n    const yesterday_config_1 = {\n        xField: 'hour',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getYesterdayStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getYesterdayStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getYesterdayStatsData(\"amount_avg\")],\n                end : ['max', getYesterdayStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            hour : {\n                alias : \"Time\",\n                formatter : (hour) => {\n                    \n                    if(hour[0] == '0') return hour.substring(1);\n                    return hour;\n                },\n            },\n            total_amount : {\n                alias : \"Amount\",\n                formatter : (amount) => {\n                    return `$ ${commaNumber(amount)}`\n                }\n            }\n        },\n        xAxis : {\n            tickCount : 24,\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n    \n\n    const yesterday_config_2 = {\n        xField: 'hour',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getYesterdayStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getYesterdayStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getYesterdayStatsData(\"count_avg\")],\n                end : ['max', getYesterdayStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            hour : {\n                alias : \"Time\",\n                formatter : (hour) => {\n                    \n                    if(hour[0] == '0') return hour.substring(1);\n                    return hour;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        xAxis : {\n            tickCount : 24,\n        },\n        smooth : true\n    };\n\n    const lastWeek_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastWeekStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastWeekStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastWeekStatsData(\"amount_avg\")],\n                end : ['max', getLastWeekStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, Do MMMM\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastWeek_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastWeekStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastWeekStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastWeekStatsData(\"count_avg\")],\n                end : ['max', getLastWeekStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    // const mdate = moment(date, 'YYYY/M/D').format(\"MMMM d, YYYY (dddd)\");\n                    const mdate = moment(date, 'YYYY/M/D').format(\"dddd, DD MMMM\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastMonth_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastMonthStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastMonthStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastMonthStatsData(\"amount_avg\")],\n                end : ['max', getLastMonthStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastMonth_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastMonthStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastMonthStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastMonthStatsData(\"count_avg\")],\n                end : ['max', getLastMonthStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    const mdate = moment(date, 'YYYY/M/D').format(\"Do MMM, YYYY\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastYear_config_1 = {\n        xField: 'date',\n        yField: 'total_amount',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastYearStatsData(\"amount_avg\")],\n                content : `Average Amount : $${commaNumber(getLastYearStatsData(\"amount_avg\"))}`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastYearStatsData(\"amount_avg\")],\n                end : ['max', getLastYearStatsData(\"amount_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    const mdate = moment(date, 'YYYY/M').format(\"Do MMM, YYYY (ddd)\");\n\n                    return mdate;\n                }\n            },\n            total_amount : {\n                alias : \"Total Amount\",\n                formatter : (amount) => {\n                    \n                    return `$ ${commaNumber(amount)}`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n    const lastYear_config_2 = {\n        xField: 'date',\n        yField: 'count',\n        annotations : [\n            {\n                type : \"text\",\n                position : ['min', getLastYearStatsData(\"count_avg\")],\n                content : `Average Count : ${commaNumber(getLastYearStatsData(\"count_avg\"))} Invoices`,\n                offsetY : -4,\n                style : {\n                    textBaseline : \"bottom\"\n                }\n            },\n            {\n                type : \"line\",\n                start : ['min', getLastYearStatsData(\"count_avg\")],\n                end : ['max', getLastYearStatsData(\"count_avg\")],\n                style : annotationLineStyles\n            }\n        ],\n        meta : {\n            date : {\n                alias : \"Date\",\n                formatter : (date) => {\n                    \n                    const mdate = moment(date, 'YYYY/M').format(\"MMMM d, YYYY (dddd)\");\n\n                    return mdate;\n                },\n            },\n            count : {\n                alias : \"Invoice Count\",\n                formatter : (count) => {\n                    \n                    return `${count} Invoices`\n                },\n            }\n        },\n        smooth : true,\n        areaStyle : gradientFill\n    };\n\n\n    return (\n        <div className=\" statistic-wrapper sheet\" style={{minHeight : \"90vh\"}}>\n\n<div className=\"sheet menu range-picker\">\n                <h3>Show for a Custom Time Range</h3>\n                <Space>\n                    <RangePicker onCalendarChange={(dates) => {if(dates.length) setDates(dates)}} />\n                    <Button onClick={() => fetchCustomDateRangeData()} icon={<AreaChartOutlined />} shape=\"round\" type=\"primary\">Get data</Button>\n                </Space>\n            </div>\n\n            {!customAggregateData && \n            \n            <Row>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Yesterday</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(0)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!yesterday_statistic} title='Amount' prefix={<DollarOutlined/>} value={yesterday_statistic && commaNumber(yesterday_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!yesterday_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={yesterday_statistic && commaNumber(yesterday_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Week</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(1)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastWeek_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastWeek_statistic && commaNumber(lastWeek_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastWeek_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastWeek_statistic && commaNumber(lastWeek_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Month</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(2)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastMonth_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastMonth_statistic && commaNumber(lastMonth_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastMonth_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastMonth_statistic && commaNumber(lastMonth_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n            <Col span={6}>\n                <div className=\"statistic-card sheet\">\n                    <h3>Last Yar</h3>\n                    <div className=\"statistic-container\" onMouseOver={() => carousel_ref.current.goTo(3)}>\n                        <Row gutter={16} justify=\"space-between\">\n                            <Col>\n                                <Statistic loading={!lastYear_statistic} title='Amount' prefix={<DollarOutlined/>} value={lastYear_statistic && commaNumber(lastYear_statistic.amount)} />\n                            </Col>\n                            <Col>\n                                <Statistic loading={!lastYear_statistic} title='Invoices' prefix={<PlusCircleFilled />} value={lastYear_statistic && commaNumber(lastYear_statistic.count)} />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Col>\n        </Row>    \n\n            }\n\n            \n            \n            {customAggregateData && \n                <div className=\"sheet\">\n                    <div style={{display : \"flex\", flexFlow : \"row\", justifyContent : \"space-between\", alignItems : \"center\"}}>\n                        { dates.length == 2 && <h2>Viewing Data from {dates[0].format(\"Do MMMM, YYYY\")} to {dates[1].format(\"Do MMMM, YYYY\")}</h2> }\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setAggregateDataType(val === \"Amount\")} />\n                    </div>\n                {aggregateDataType ? \n                    \n                    <>\n                        <h3>Amount vs Date</h3>\n                        <div className=\"chart-wrapper\">\n                            <Area data={customAggregateData} {...lastMonth_config_1}></Area>\n                        </div>\n                    </>\n                : \n                    <>\n                        <h3>Invoice Count vs Date</h3>\n                        <div className=\"chart-wrapper\">\n                            <Area data={customAggregateData} {...lastMonth_config_2}></Area>\n                        </div>\n                    </>\n                }\n                </div>\n            }\n            <div className=\"sheet\">\n                \n                <Carousel ref={ref => carousel_ref.current = ref} dotPosition='top' autoplaySpeed={5000}>\n\n                {/* YESTERDAY'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Yesterday's Hourly Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setYesterday_type_amount(val === \"Amount\")} />\n                    </div>\n                    {yesterday_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Hour</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={yesterday} {...yesterday_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Hour</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={yesterday} {...yesterday_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST WEEK'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Weeks's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastWeek_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastWeek_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastWeek} {...lastWeek_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastWeek} {...lastWeek_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                </div>\n\n                {/* LAST MONTH'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Month's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastMonth_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastMonth_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastMonth} {...lastMonth_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastMonth} {...lastMonth_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n\n                {/* LAST YEAR'S CHART SHEET */}\n                <div className='carousel-container'>\n                    \n                    <div className=\"sheet menu\">\n                        <div>\n                            <h2>Last Year's Data</h2>\n                        </div>\n                        <Segmented options={[\"Amount\", \"Count\"]} onChange={(val) => setLastYear_type_amount(val === \"Amount\")} />\n                    </div>\n                    {lastYear_type_amount ? \n                    \n                        <>\n                            <h3>Amount vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastYear} {...lastYear_config_1}></Area>\n                            </div>\n                        </>\n                    : \n                        <>\n                            <h3>Invoice Count vs Date</h3>\n                            <div className=\"chart-wrapper\">\n                                <Area data={lastYear} {...lastYear_config_2}></Area>\n                            </div>\n                        </>\n                    }\n                    <div>\n                    \n                    </div>\n                    <div>\n                        \n                    </div>\n                </div>\n                    \n                </Carousel>\n            </div>\n            \n        </div>\n    )\n}\n\n\n\nexport default Dashboard;","import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { apiCall, getDateObject } from '../../helpers';\nimport gradient from 'random-gradient';\nimport \"./styles/ViewInvoiceSheet.css\"\nimport { Col, Divider, Tag, Row, Button, Table, Skeleton } from 'antd';\nimport StatusTag from './snippets/StatusTag';\nimport { RollbackOutlined } from '@ant-design/icons';\nimport { useAuthHeader } from 'react-auth-kit';\n\nconst getSymbolFromCurrency = require('currency-symbol-map')\nconst hdate = require(\"human-date\");\n\nfunction toTitleCase(str) {\n    return str.replace(\n      /\\w\\S*/g,\n      function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n    );\n  }\n\nconst cols = [\n    {\n        title : \"No.\",\n        dataIndex : \"dummy\",\n        key : \"dummy\",\n        render : (t, o, index) => {\n            return index + 1;\n        }\n    },\n    {\n        title : \"Description\",\n        dataIndex : \"description\",\n        key : \"description\"\n    },\n    {\n        title : \"Type\",\n        dataIndex : \"price\",\n        render : (price) => {\n            let s = toTitleCase(price.type);\n            s = s.replaceAll('_', ' ');\n            return s;\n        },\n        key : \"type\"\n    },\n    {\n        title : \"Quantity\",\n        dataIndex : \"quantity\",\n        key : \"quantity\"\n    },\n    {\n        title : \"Amount\",\n        dataIndex : \"amount\",\n        key : \"amount\",\n        render : (amount, invoice) => {\n            \n          return getSymbolFromCurrency(invoice.currency) + Math.round(amount/100);\n        }\n    }\n]\n\nconst ViewInvoiceSheet = () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    let { invoice_id } = useParams();\n    const [invoice, setInvoice] = useState({});\n    const [items, setItems] = useState([]);\n    \n    useEffect(() => {\n      \n        apiCall(\"/invoices/retrieve\", {invoice_id}, (response) => {\n            const invoice = response.data.data;\n            // console.log(invoice_id, bg)\n\n\n            setInvoice(invoice);\n            setItems(invoice.lines.data);\n        }, authHeader(), null, navigate);\n    }, [])\n    \n\n    return (\n        <div className='sheet'>\n            <div className='sheet envelope no-margin' >\n                {invoice.id ?\n                    <>\n                        <div>\n                            <h1>{(invoice.customer_name) ? `${invoice.customer_name.split(\" \")[0]}'s Invoice` : \"Invoice\"} </h1>\n                            <h3>{invoice.number} for {getSymbolFromCurrency(invoice.currency) + invoice.amount_due}  </h3>\n                            <h3>Due in {hdate.relativeTime(getDateObject(invoice.due_date))}.  </h3>\n                        </div>\n                        <div className='envelope-sub'>\n                            <div className=\"row\">\n                                <div>Invoice ID :</div>\n                                <div><Tag >{invoice.id}</Tag></div>\n                            </div>\n                            <div className=\"row\">\n                                <div>Charge Date : </div>\n                                <div><Tag >{hdate.prettyPrint(getDateObject(invoice.created), { showTime : true })}</Tag></div>\n                            </div>\n                            <div className=\"row\" style={{marginTop : '1.2em', display : 'flex', justifyContent : 'flex-end', marginRight : '0.2em'}}>\n                                <Button size='huge' type='primary' danger icon={<RollbackOutlined/>} >Refund</Button>\n                            </div>\n                        </div>\n                    </>\n                    :\n                    <Skeleton active />\n                }\n            </div>\n            {invoice.id ?\n            \n            <div className=\"sheet no-margin invoice-container\">\n                <Row gutter={16}>\n                    <Col span={8}>\n                        <h2>From</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        <h3>{invoice.account_name}</h3>\n\n                    </Col>\n                    <Col span={8}>\n                        <h2>To</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        {invoice.customer_name && <h4>Name : {invoice.customer_name}</h4>}\n                        {invoice.customer_email && <h4>Email : {invoice.customer_email}</h4>}\n                        {invoice.customer_address && <h4>Address : {invoice.customer_address}</h4>}\n                        {invoice.customer_phone && <h4>Phone : {invoice.customer_phone}</h4>}\n                    </Col>\n                    <Col span={8}>\n                        <h2>Details</h2>\n                        <div className=\"bulky-divider\" ></div>\n                        <h4>Invoice total : {getSymbolFromCurrency(invoice.currency)}{Math.round(invoice.amount_due/100)}</h4>\n                        <h4>Status : <StatusTag status={invoice.status}/></h4>\n\n                    </Col>\n                </Row>\n\n                <Divider/>\n                <Table columns={cols} dataSource={items} />\n            </div>\n                :\n            <Skeleton active />\n            }\n            <Divider/>\n        </div>\n    )\n}\n\n\n\nexport default ViewInvoiceSheet;","import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { apiCall, getDateObject, reportVerbose } from '../../helpers';\nimport \"./styles/ViewInvoiceSheet.css\"\nimport \"./styles/ViewReportSheet.css\"\nimport { Col, Divider, Tag, Row, Button, Table, Skeleton, Segmented, Space, DatePicker, Result, Select } from 'antd';\nimport { useAuthHeader, useIsAuthenticated } from 'react-auth-kit';\nimport { AuditOutlined, BookOutlined, CloudDownloadOutlined, DownloadOutlined, LoadingOutlined, RollbackOutlined } from '@ant-design/icons';\n\nconst getSymbolFromCurrency = require('currency-symbol-map')\nconst hdate = require(\"human-date\");\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\n\n\nfunction toTitleCase(str) {\n    return str.replace(\n      /\\w\\S*/g,\n      function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n    );\n}\n\n\nconst categories = {\n    \"Balance\" : {\n        1 : \"balance.summary.1\",\n        2 : \"balance_change_from_activity.summary.1\",\n        3 : \"balance_change_from_activity.itemized.3\",\n        4 : \"payouts.summary.1\",\n        5 : \"payouts.itemized.3\",\n    },\n    \"Payout Reconciliation\" : {\n        6 : \"balance.summary.1\",\n        7 : \"payout_reconciliation.summary.1\",\n        8 : \"payout_reconciliation.itemized.5\",\n        9 : \"ending_balance_reconciliation.summary.1\",\n        10 : \"ending_balance_reconciliation.itemized.4\"\n    }\n}\n\nconst inv_categories = {\n        \"balance.summary.1\" : 1,\n        \"balance_change_from_activity.summary.1\" : 2,\n        \"balance_change_from_activity.itemized.3\" : 3,\n        \"payouts.summary.1\" : 4,\n        \"payouts.itemized.3\" : 5,\n        \"balance.summary.1\" : 6,\n        \"payout_reconciliation.summary.1\" : 7,\n        \"payout_reconciliation.itemized.5\" : 8,\n        \"ending_balance_reconciliation.summary.1\" : 9,\n         \"ending_balance_reconciliation.itemized.4\" : 1,\n}\n\nconst fieldNames = {\n    label : \"title\",\n    value : \"key\",\n}\n\n\n\nconst ViewReportSheet = () => {\n\n    const authHeader = useAuthHeader();\n    const navigate = useNavigate();\n\n    \n    const [dates, setDates] = useState([1642662478, 1658128249]);\n    const [cols, setCols] = useState([]);\n\n    const [domain, setDomain] = useState(\"Balance\");\n    const [current_page_status, setCurrent_page_status] = useState(false);\n\n    const [balance_summary_1, set_balance_summary_1] = useState(false);\n    const [balance_summary_1_cols, set_balance_summary_1_cols] = useState([]);\n    \n    \n    const [balance_change_from_activity_type, set_balance_change_from_activity_type] = useState(\"summary\");\n    const [balance_change_from_activity_summary_1, set_balance_change_from_activity_summary_1] = useState(false);\n    const [balance_change_from_activity_summary_1_cols, set_balance_change_from_activity_summary_1_cols] = useState([]);\n    const [balance_change_from_activity_itemized_3, set_balance_change_from_activity_itemized_3] = useState(false);\n    const [balance_change_from_activity_itemized_3_cols, set_balance_change_from_activity_itemized_3_cols] = useState([]);\n    \n    const [payouts_type, set_payouts_type] = useState(\"summary\");\n    const [payouts_summary_1, set_payouts_summary_1] = useState(false);\n    const [payouts_summary_1_cols, set_payouts_summary_1_cols] = useState([]);\n    const [payouts_itemized_3, set_payouts_itemized_3] = useState(false);\n    const [payouts_itemized_3_cols, set_payouts_itemized_3_cols] = useState([]);\n\n    \n    const [payout_reconciliation_type, set_payout_reconciliation_type] = useState(\"summary\");\n    const [payout_reconciliation_summary_1, set_payout_reconciliation_summary_1] = useState(false);\n    const [payout_reconciliation_summary_1_cols, set_payout_reconciliation_summary_1_cols] = useState([]);\n    const [payout_reconciliation_itemized_5, set_payout_reconciliation_itemized_5] = useState(false);\n    const [payout_reconciliation_itemized_5_cols, set_payout_reconciliation_itemized_5_cols] = useState([]);\n    \n    const [ending_balance_reconciliation_type, set_ending_balance_reconciliation_type] = useState(\"summary\");\n    const [ending_balance_reconciliation_summary_1, set_ending_balance_reconciliation_summary_1] = useState(false);\n    const [ending_balance_reconciliation_summary_1_cols, set_ending_balance_reconciliation_summary_1_cols] = useState([]);\n    const [ending_balance_reconciliation_itemized_4, set_ending_balance_reconciliation_itemized_4] = useState(false);\n    const [ending_balance_reconciliation_itemized_4_cols, set_ending_balance_reconciliation_itemized_4_cols] = useState([]);\n\n\n    const fetchSetReportStateCols = (report_type) => {\n      switch (inv_categories[report_type]) {\n          case 1:\n              return set_balance_summary_1_cols;\n              break;\n              \n          case 2:\n              return set_balance_change_from_activity_summary_1_cols;\n              break;\n              \n          case 3:\n              return set_balance_change_from_activity_itemized_3_cols;\n              break;\n              \n          case 4:\n              return set_payouts_summary_1_cols;\n              break;\n              \n          case 5:\n              return set_payouts_itemized_3_cols;\n              break;\n              \n          case 6:\n              return set_balance_summary_1_cols;\n              break;\n              \n          case 7:\n              return set_payout_reconciliation_summary_1_cols;\n              break;\n              \n          case 8:\n              return set_payout_reconciliation_itemized_5_cols;\n              break;\n              \n          case 9:\n              return set_ending_balance_reconciliation_summary_1_cols;\n              break;\n              \n          case 10:\n              return set_ending_balance_reconciliation_itemized_4_cols;\n              break;\n              \n        default:\n              return console.log;\n              break;\n      }\n    }\n\n    const fetchSetReportState = (report_type) => {\n      switch (inv_categories[report_type]) {\n          case 1:\n              return set_balance_summary_1;\n              break;\n              \n          case 2:\n              return set_balance_change_from_activity_summary_1;\n              break;\n              \n          case 3:\n              return set_balance_change_from_activity_itemized_3;\n              break;\n              \n          case 4:\n              return set_payouts_summary_1;\n              break;\n              \n          case 5:\n              return set_payouts_itemized_3;\n              break;\n              \n          case 6:\n              return set_balance_summary_1;\n              break;\n              \n          case 7:\n              return set_payout_reconciliation_summary_1;\n              break;\n              \n          case 8:\n              return set_payout_reconciliation_itemized_5;\n              break;\n              \n          case 9:\n              return set_ending_balance_reconciliation_summary_1;\n              break;\n              \n          case 10:\n              return set_ending_balance_reconciliation_itemized_4;\n              break;\n              \n        default:\n              return console.log;\n              break;\n      }\n    }\n\n    const downloadAndSetFileStateContents = (report) => {\n        apiCall(\"/reports/file\", {file_id : report.result.id}, (response) => {\n            const data = response.data.data;\n            const content = data.content;\n            const link = data.link;\n            \n            // Create and set columns\n    \n            const cols = makeColumns(content);\n            content.forEach((row, index) => row.key = index);\n\n            const reportStateObject = { content, link, cols };\n\n            console.log(report.report_type, reportStateObject)\n\n            fetchSetReportStateCols(report.report_type)(cols);\n            fetchSetReportState(report.report_type)(reportStateObject);\n            setCurrent_page_status('ready');\n    \n        }, authHeader(), null, navigate);\n    }\n    \n    const makeColumns = (data) => {\n        // Create and set columns\n        let columns = [];\n    \n        for (const key in data[0]) {\n            if (Object.hasOwnProperty.call(data[0], key)) {\n    \n                const curr = {\n                    dataIndex : key,\n                    key : key,\n                    value : key\n                };\n                let title = key.replaceAll('_', ' ');\n                curr.title = toTitleCase(title);\n                columns.push(curr);\n            }\n        }\n    \n        return columns;\n    }\n    \n    const createReportAndAwaitCompletion = (report_type) => {\n\n        const apiCallObject = {\n            report_type,\n            parameters : {\n                interval_end : dates[1]\n            }\n        }\n        if(!report_type.startsWith(\"ending_balance_reconciliation\")) apiCallObject.parameters.interval_start = dates[0]\n\n        apiCall(\n            \"/reports/create\",\n            apiCallObject,\n            (response) => {\n            \n            const report = response.data.data;\n            const ah = authHeader();\n            const token = ah.split(\" \")[1];\n            const url = `ws://${window.location.hostname}${window.location.hostname == \"localhost\" ? \":4000\" : \"\"}/?auth_token=${token}&report_id=${report.id}`\n            \n            const ws = new WebSocket(url);\n    \n            ws.addEventListener('open', function (event) {\n                console.log(`[${report_type}] Websocket connected.`);\n            })\n    \n            ws.addEventListener('message', function (event) {\n                const msg = event.data;\n                console.log(msg, JSON.parse(msg));\n                const report = JSON.parse(msg);\n                console.log(\"Websocket report : \",report_type, report);\n                downloadAndSetFileStateContents(report);\n                ws.close();\n            });\n            \n        }, authHeader(), null, navigate);\n    }\n    \n    const handleDomainChange = (option) => {\n        setDomain(option);\n    }\n    \n    const makeReport = () => {\n        setCurrent_page_status(\"loading\");\n\n        // createReportAndAwaitCompletion(\"balance.summary.1\");\n\n        for (const i in categories[domain]) {\n            if (Object.hasOwnProperty.call(categories[domain], i)) {\n                const report_type_desc = categories[domain][i];\n                console.log(report_type_desc)\n                createReportAndAwaitCompletion(report_type_desc);\n            }\n        }\n    }\n\n    return (\n        <div className='sheet main'>\n            <Space>\n            <Segmented options={[\"Balance\", \"Payout Reconciliation\"]} onChange={handleDomainChange} />\n            <RangePicker />\n            <Button icon={<AuditOutlined />} loading={current_page_status === \"loading\" } type='primary' onClick={makeReport} >Create Report</Button>\n            </Space>\n            <Divider />\n            \n            {!current_page_status && \n                <Result \n                    icon={<BookOutlined />}\n                    title=\"Create a Report\"\n                />\n            }\n\n            {current_page_status === \"loading\" &&\n            \n            <Result \n                icon={<LoadingOutlined spin />}\n                title=\"Generating Report...\"\n            />\n            \n            }\n\n            {\n                domain === \"Balance\" && \n                <>\n\n                    {balance_summary_1 && \n                        <>\n                            <h2>Balance Summary</h2>\n                            <p>The Balance summary section shows your starting and ending Stripe balance for the selected date range, along with a high level summary of your activity during the period. Your balance includes funds that are available, pending, and any reserved funds, if applicable.</p>\n\n                            <Row style={{marginBottom : \"0.8em\"}} justify=\"space-between\">\n                                <Col>\n                                    <Select \n                                        mode=\"multiple\" \n                                        options={balance_summary_1.cols} \n                                        onChange={(arr) => {\n                                            const new_arr = balance_summary_1.cols.filter((el) => {\n                                                return arr.includes(el.key)\n                                            });\n                                            set_balance_summary_1_cols(new_arr);\n                                        }}\n                                        defaultValue={() => {\n                                            let cols = [];\n                                            balance_summary_1_cols.forEach(c => cols.push(c.key));\n                                            console.log(cols);\n                                            return cols;\n                                        }}\n                                        placeholder=\"Select Columns\" \n                                        showSearch \n                                        showArrow\n                                        fieldNames={fieldNames}\n                                    >\n                                        Select Columns\n                                    </Select>\n                                </Col>\n                                <Col>\n                                    <Button target=\"_blank\" disabled={!balance_summary_1.link} href={balance_summary_1 && balance_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                        Download CSV\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                            <Table pagination={false} dataSource={balance_summary_1.content} >\n                                {balance_summary_1_cols && balance_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                            </Table>\n\n                            <Divider />\n                            \n                        </>\n                    }\n\n                    {(balance_change_from_activity_summary_1 || balance_change_from_activity_itemized_3) && \n                        <>\n                            <h2>\n                                {/* Balance change from activity - {toTitleCase(balance_change_from_activity_type)} */}\n                                Balance change from activity - \n\n                                <Select className='category-select' bordered={false} onChange={(val) => set_balance_change_from_activity_type(val)} value={balance_change_from_activity_type}>\n                                    <Option value=\"summary\">Summary</Option>\n                                    <Option value=\"itemized\">Itemized</Option>\n                                </Select>\n\n                            </h2>\n                            <p>The Balance change from activity section provides a more detailed breakdown of your transactions by reporting category. This section includes all transactions except for payouts that affect your balance, including charges, refunds, disputes, other adjustments, and fees.</p>\n\n\n\n                            {\n                                balance_change_from_activity_type === \"summary\" ?\n                                <>\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                            <Select \n                                                mode=\"multiple\" \n                                                options={balance_change_from_activity_summary_1.cols} \n                                                onChange={(arr) => {\n                                                    const new_arr = balance_change_from_activity_summary_1.cols.filter((el) => {\n                                                        return arr.includes(el.key)\n                                                    });\n                                                    set_balance_change_from_activity_summary_1_cols(new_arr);\n                                                }}\n                                                defaultValue={() => {\n                                                    let cols = [];\n                                                    balance_change_from_activity_summary_1_cols.forEach(c => cols.push(c.key));\n                                                    console.log(cols);\n                                                    return cols;\n                                                }}\n                                                placeholder=\"Select Columns\" \n                                                showSearch \n                                                showArrow\n                                                fieldNames={fieldNames}\n                                            >\n                                                Select Columns \n                                            </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!balance_change_from_activity_summary_1.link} href={balance_change_from_activity_summary_1 && balance_change_from_activity_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={balance_change_from_activity_summary_1.content} >\n                                        {balance_change_from_activity_summary_1_cols && balance_change_from_activity_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                                :\n                                <>\n\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                        <Select \n                                            mode=\"multiple\" \n                                            options={balance_change_from_activity_itemized_3.cols} \n                                            onChange={(arr) => {\n                                                const new_arr = balance_change_from_activity_itemized_3.cols.filter((el) => {\n                                                    return arr.includes(el.key)\n                                                });\n                                                set_balance_change_from_activity_itemized_3_cols(new_arr);\n                                            }}\n                                            defaultValue={() => {\n                                                let cols = [];\n                                                balance_change_from_activity_itemized_3_cols.forEach(c => cols.push(c.key));\n                                                console.log(cols);\n                                                return cols;\n                                            }}\n                                            placeholder=\"Select Columns\" \n                                            showSearch \n                                            showArrow\n                                            fieldNames={fieldNames}\n                                        >\n                                            Select Columns \n                                        </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!balance_change_from_activity_itemized_3.link} href={balance_change_from_activity_itemized_3 && balance_change_from_activity_itemized_3.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={balance_change_from_activity_itemized_3.content} >\n                                        {balance_change_from_activity_itemized_3_cols && balance_change_from_activity_itemized_3_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                            }\n                            \n                            <Divider />\n                        </>\n                    }\n                    {(payouts_summary_1 || payouts_itemized_3) && \n                        <>\n                            <h2>    \n                                Payouts - \n\n                                <Select className='category-select' bordered={false} onChange={(val) => set_payouts_type(val)} value={payouts_type}>\n                                    <Option value=\"summary\">Summary</Option>\n                                    <Option value=\"itemized\">Itemized</Option>\n                                </Select>\n\n                            </h2>\n                            <p>The Payouts section provides the quantity and total amount of payouts to your bank account during the period. You can download a list of individual payout transactions by clicking the Download button.</p>\n\n\n\n                            {\n                                payouts_type === \"summary\" ?\n                                <>\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                            <Select \n                                                mode=\"multiple\" \n                                                options={payouts_summary_1.cols} \n                                                onChange={(arr) => {\n                                                    const new_arr = payouts_summary_1.cols.filter((el) => {\n                                                        return arr.includes(el.key)\n                                                    });\n                                                    set_payouts_summary_1_cols(new_arr);\n                                                }}\n                                                defaultValue={() => {\n                                                    let cols = [];\n                                                    payouts_summary_1_cols.forEach(c => cols.push(c.key));\n                                                    console.log(cols);\n                                                    return cols;\n                                                }}\n                                                placeholder=\"Select Columns\" \n                                                showSearch \n                                                showArrow\n                                                fieldNames={fieldNames}\n                                            >\n                                                Select Columns \n                                            </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!payouts_summary_1.link} href={payouts_summary_1 && payouts_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={payouts_summary_1.content} >\n                                        {payouts_summary_1_cols && payouts_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                                :\n                                <>\n\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                        <Select \n                                            mode=\"multiple\" \n                                            options={payouts_itemized_3.cols} \n                                            onChange={(arr) => {\n                                                const new_arr = payouts_itemized_3.cols.filter((el) => {\n                                                    return arr.includes(el.key)\n                                                });\n                                                set_payouts_itemized_3_cols(new_arr);\n                                            }}\n                                            defaultValue={() => {\n                                                let cols = [];\n                                                payouts_itemized_3_cols.forEach(c => cols.push(c.key));\n                                                console.log(cols);\n                                                return cols;\n                                            }}\n                                            placeholder=\"Select Columns\" \n                                            showSearch \n                                            showArrow\n                                            fieldNames={fieldNames}\n                                        >\n                                            Select Columns \n                                        </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!payouts_itemized_3.link} href={payouts_itemized_3 && payouts_itemized_3.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={payouts_itemized_3.content} >\n                                        {payouts_itemized_3_cols && payouts_itemized_3_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                            }\n                            \n                            <Divider />\n                        </>\n                    }\n\n                </>\n            }\n\n            {\n                domain == \"Payout Reconciliation\" &&\n                <>\n\n                    {balance_summary_1 && \n                        <>\n                            <h2>Balance Summary</h2>\n                            <p>The Balance summary section shows your starting and ending Stripe balance for the selected date range, along with a high level summary of your activity during the period. Your balance includes funds that are available, pending, and any reserved funds, if applicable.</p>\n\n                            <Row style={{marginBottom : \"0.8em\"}} justify=\"space-between\">\n                                <Col>\n                                    <Select \n                                        mode=\"multiple\" \n                                        options={balance_summary_1.cols} \n                                        onChange={(arr) => {\n                                            const new_arr = balance_summary_1.cols.filter((el) => {\n                                                return arr.includes(el.key)\n                                            });\n                                            set_balance_summary_1_cols(new_arr);\n                                        }}\n                                        defaultValue={() => {\n                                            let cols = [];\n                                            balance_summary_1_cols.forEach(c => cols.push(c.key));\n                                            console.log(cols);\n                                            return cols;\n                                        }}\n                                        placeholder=\"Select Columns\" \n                                        showSearch \n                                        showArrow\n                                        fieldNames={fieldNames}\n                                    >\n                                        Select Columns\n                                    </Select>\n                                </Col>\n                                <Col>\n                                    <Button target=\"_blank\" disabled={!balance_summary_1.link} href={balance_summary_1 && balance_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                        Download CSV\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                            <Table pagination={false} dataSource={balance_summary_1.content} >\n                                {balance_summary_1_cols && balance_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                            </Table>\n\n                            <Divider />\n                            \n                        </>\n                    }\n\n                    {(payout_reconciliation_summary_1 || payout_reconciliation_itemized_5) && \n                        <>\n                            <h2>\n                                Payout Reconciliation - \n\n                                <Select className='category-select' bordered={false} onChange={(val) => set_payout_reconciliation_type(val)} value={balance_change_from_activity_type}>\n                                    <Option value=\"summary\">Summary</Option>\n                                    <Option value=\"itemized\">Itemized</Option>\n                                </Select>\n\n                            </h2>\n                            <p>The Payout reconciliation section provides a breakdown of the automatic payouts that were received in your bank account during the selected date range. The transactions included in those settlement batches are grouped by reporting category.</p>\n\n\n\n                            {\n                                payout_reconciliation_type === \"summary\" ?\n                                <>\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                            <Select \n                                                mode=\"multiple\" \n                                                options={payout_reconciliation_summary_1.cols} \n                                                onChange={(arr) => {\n                                                    const new_arr = payout_reconciliation_summary_1.cols.filter((el) => {\n                                                        return arr.includes(el.key)\n                                                    });\n                                                    set_payout_reconciliation_summary_1_cols(new_arr);\n                                                }}\n                                                defaultValue={() => {\n                                                    let cols = [];\n                                                    payout_reconciliation_summary_1_cols.forEach(c => cols.push(c.key));\n                                                    console.log(cols);\n                                                    return cols;\n                                                }}\n                                                placeholder=\"Select Columns\" \n                                                showSearch \n                                                showArrow\n                                                fieldNames={fieldNames}\n                                            >\n                                                Select Columns \n                                            </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!payout_reconciliation_summary_1.link} href={payout_reconciliation_summary_1 && payout_reconciliation_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={payout_reconciliation_summary_1.content} >\n                                        {payout_reconciliation_summary_1_cols && payout_reconciliation_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                                :\n                                <>\n\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                        <Select \n                                            mode=\"multiple\" \n                                            options={payout_reconciliation_itemized_5.cols} \n                                            onChange={(arr) => {\n                                                const new_arr = payout_reconciliation_itemized_5.cols.filter((el) => {\n                                                    return arr.includes(el.key)\n                                                });\n                                                set_payout_reconciliation_itemized_5_cols(new_arr);\n                                            }}\n                                            defaultValue={() => {\n                                                let cols = [];\n                                                payout_reconciliation_itemized_5_cols.forEach(c => cols.push(c.key));\n                                                console.log(cols);\n                                                return cols;\n                                            }}\n                                            placeholder=\"Select Columns\" \n                                            showSearch \n                                            showArrow\n                                            fieldNames={fieldNames}\n                                        >\n                                            Select Columns \n                                        </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!payout_reconciliation_itemized_5.link} href={payout_reconciliation_itemized_5 && payout_reconciliation_itemized_5.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={payout_reconciliation_itemized_5.content} >\n                                        {payout_reconciliation_itemized_5_cols && payout_reconciliation_itemized_5_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                            }\n                            \n                            <Divider />\n                        </>\n                    }\n                    {(ending_balance_reconciliation_summary_1 || ending_balance_reconciliation_itemized_4) && \n                        <>\n                            <h2>    \n                                Ending Balance Reconciliation - \n\n                                <Select className='category-select' bordered={false} onChange={(val) => set_ending_balance_reconciliation_type(val)} value={payouts_type}>\n                                    <Option value=\"summary\">Summary</Option>\n                                    <Option value=\"itemized\">Itemized</Option>\n                                </Select>\n\n                            </h2>\n                            <p>The Ending balance reconciliation section provides a similar breakdown of the transactions that hadn’t been settled as of the report’s end date.</p>\n\n\n\n                            {\n                                payouts_type === \"summary\" ?\n                                <>\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                            <Select \n                                                mode=\"multiple\" \n                                                options={ending_balance_reconciliation_summary_1.cols} \n                                                onChange={(arr) => {\n                                                    const new_arr = ending_balance_reconciliation_summary_1.cols.filter((el) => {\n                                                        return arr.includes(el.key)\n                                                    });\n                                                    set_ending_balance_reconciliation_summary_1_cols(new_arr);\n                                                }}\n                                                defaultValue={() => {\n                                                    let cols = [];\n                                                    ending_balance_reconciliation_summary_1_cols.forEach(c => cols.push(c.key));\n                                                    return cols;\n                                                }}\n                                                placeholder=\"Select Columns\" \n                                                showSearch \n                                                showArrow\n                                                fieldNames={fieldNames}\n                                            >\n                                                Select Columns \n                                            </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!ending_balance_reconciliation_summary_1.link} href={ending_balance_reconciliation_summary_1 && ending_balance_reconciliation_summary_1.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={ending_balance_reconciliation_summary_1.content} >\n                                        {ending_balance_reconciliation_summary_1_cols && ending_balance_reconciliation_summary_1_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                                :\n                                <>\n\n                                    <Row style={{marginBottom : \"0.8em\"}} justify='space-between'>\n                                        <Col>\n                                        <Select \n                                            mode=\"multiple\" \n                                            options={ending_balance_reconciliation_itemized_4.cols} \n                                            onChange={(arr) => {\n                                                const new_arr = ending_balance_reconciliation_itemized_4.cols.filter((el) => {\n                                                    return arr.includes(el.key)\n                                                });\n                                                set_ending_balance_reconciliation_itemized_4_cols(new_arr);\n                                            }}\n                                            defaultValue={() => {\n                                                let cols = [];\n                                                ending_balance_reconciliation_itemized_4_cols.forEach(c => cols.push(c.key));\n                                                console.log(cols);\n                                                return cols;\n                                            }}\n                                            placeholder=\"Select Columns\" \n                                            showSearch \n                                            showArrow\n                                            fieldNames={fieldNames}\n                                        >\n                                            Select Columns \n                                        </Select>\n                                        </Col>\n                                        <Col>\n                                        <Button target=\"_blank\" disabled={!ending_balance_reconciliation_itemized_4.link} href={ending_balance_reconciliation_itemized_4 && ending_balance_reconciliation_itemized_4.link} icon={<DownloadOutlined />} type='primary' shape='round'>\n                                            Download CSV\n                                        </Button>\n                                        </Col>\n                                    </Row>\n\n                                    <Table pagination={false} dataSource={ending_balance_reconciliation_itemized_4.content} >\n                                        {ending_balance_reconciliation_itemized_4_cols && ending_balance_reconciliation_itemized_4_cols.map(col => <Option title={col.title} key={col.key} dataIndex={col.dataIndex} />)}\n                                    </Table>\n\n                                </>\n                            }\n                            \n                            <Divider />\n                        </>\n                    }\n\n                </>\n            }\n\n\n        </div>\n    )\n}\n\n\n\nexport default ViewReportSheet;","import React, {useState, useEffect} from 'react'\nimport { AreaChartOutlined, BookOutlined, LayoutOutlined, LogoutOutlined, UserOutlined } from '@ant-design/icons';\nimport { Affix, Button, Menu } from 'antd';\nimport Layout from 'antd/lib/layout/layout';\nimport Sider from 'antd/lib/layout/Sider';\nimport { useAuthUser, useSignOut } from 'react-auth-kit';\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { MenuItem } from 'semantic-ui-react';\nimport { ListInvoicesSheet, ListReportsSheet } from '.';\nimport Dashboard from './Dashboard';\nimport ViewInvoiceSheet from './ViewInvoiceSheet';\nimport ViewReportSheet from './ViewReportSheet';\n\n\nfunction getItem(label, key, icon, items) {\n    return {\n      key,\n      icon,\n      items,\n      label,\n    };\n  }\n  \n\n  \n\nexport default () => {\n\n    const navigate = useNavigate();\n    const auth_user = useAuthUser();\n    const signOutFunction = useSignOut();\n\n    const [collapsed, setCollapsed] = useState(true);\n    const [user, setUser] = useState({});\n\n\n    const signOut = () => {\n        signOutFunction();\n        navigate(\"/\");\n    }\n\n    const toggleSideBar = () => {\n        setCollapsed(!collapsed);\n    }\n\n    // Check user permissions and display Sidebar menu accordingly.\n    useEffect(() => {\n        \n        setUser(auth_user());\n    }, [])\n    \n\n\n    return (\n        <Layout style={{minHeight : '100vh'}}>\n            <Affix> \n                <Menu className='menubar' theme=\"dark\" style={{backgroundColor : \"red !important\"}} mode='horizontal'>\n\n                    <Menu.Item onClick={signOut} style={{marginLeft : \"auto\"}} icon={<LogoutOutlined/>}>\n                        Sign Out\n                    </Menu.Item>\n                    {/* <Menu.SubMenu style={{marginLeft : \"auto\"}} title={<Button icon={<LogoutOutlined />}>Sign Out</Button>}>\n                    \n                    </Menu.SubMenu> */}\n                </Menu>\n            </Affix>\n            <Layout>\n            <Sider trigger={null} onMouseEnter={toggleSideBar} onMouseLeave={toggleSideBar} collapsible collapsed={collapsed}>\n                <Menu\n                theme=\"dark\"\n                mode=\"inline\"\n                // items={items}\n                >\n                    <Menu.Item key={0}  icon={<AreaChartOutlined className='sidebar-icon' />}>\n                        <Link to=\"/sheet\">\n                            {!collapsed && \"Dashboard\"}\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key={1}  icon={<LayoutOutlined className='sidebar-icon' />}>\n                        <Link to=\"/sheet/invoice/list\">\n                            {!collapsed && \"Access Invoices\"}\n                        </Link>\n                    </Menu.Item>\n                    {(user.permissions && user.permissions.access_reports) || true && \n                        <Menu.Item key={2}  icon={<BookOutlined className='sidebar-icon' />}>\n                            <Link to=\"/sheet/report/view\">\n                                {!collapsed && \"Check Reports\"}\n                            </Link>\n                        </Menu.Item>\n                    }\n                    {user.isAdmin || true && \n                        <Menu.Item key={3}  icon={<UserOutlined className='sidebar-icon' />}>\n                            <Link to=\"/sheet/users/list\">\n                                {!collapsed && \"Manage Users\"}\n                            </Link>\n                        </Menu.Item>\n                    }\n                </Menu>\n            </Sider>\n            <Layout>\n            <Routes>\n                <Route path=\"\" element={<Dashboard/>} />\n                <Route path=\"invoice/list\" element={<ListInvoicesSheet/>} />\n                <Route path=\"invoice/view/:invoice_id\" element={<ViewInvoiceSheet/>} />\n                <Route path=\"report/list\" element={<ListReportsSheet/>} />\n                <Route path=\"report/view/\" element={<ViewReportSheet/>} />\n            </Routes>\n            </Layout>\n            </Layout>\n            \n        </Layout>\n    )\n}\n","import React, { useState } from 'react'\nimport \"./Login.css\"\nimport { Alert, Button, Divider, Input, Space, Tabs } from 'antd'\nimport { ExclamationCircleOutlined, LockOutlined, LoginOutlined, UserAddOutlined, UserOutlined } from '@ant-design/icons';\nimport Wave from \"react-wavify\";\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { apiCall } from '../../helpers';\nimport { useSignIn } from 'react-auth-kit';\n\nconst Login = () => {\n\n    const [login_email, setLogin_email] = useState(\"hrushikeshchapke@gmail.com\");\n    const [login_password, setLogin_password] = useState(\"password\");\n    const [register_email, setRegister_email] = useState(\"\");\n    const [register_password, setRegister_password] = useState(\"\");\n    const [register_password_confirm, setRegister_password_confirm] = useState(\"\");\n\n    const [login_errors, setLogin_errors] = useState([]);\n    const [register_errors, setRegister_errors] = useState([]);\n\n    const signIn = useSignIn()\n    const navigate = useNavigate();\n\n\n    const tryLogin = () => {\n        let errors = [];\n\n        if(!login_email) errors.push(\"Please enter a valid e-mail.\");\n        if(!login_password) errors.push(\"Please enter your password.\");\n\n        if(errors.length > 0){\n            setLogin_errors(errors);\n            return;\n        }\n\n\n        apiCall(\"/auth/login\", {\n            email : login_email,\n            password : login_password\n        }, (response, error) => {\n            console.log(\"LOGIN CALL RESPONSE\",response, error);\n            \n            if(response.data.token){\n                if(signIn({\n                    token: response.data.token,\n                    expiresIn: 86400,\n                    tokenType: \"Bearer\",\n                    authState: response.data.user,\n                })){\n                    navigate('/sheet/');        \n                }\n                \n            }\n        })\n    }\n\n    const tryRegister = () => {\n        let errors = [];\n\n        if(!register_email) errors.push(\"Please enter a valid e-mail.\");\n        if(!register_password) errors.push(\"Please enter your password.\");\n        if(!register_password_confirm) errors.push(\"Please confirm your password.\");\n        if(register_password !== register_password_confirm) errors.push(\"Your passwords don't match, please try again.\");\n\n        if(errors.length > 0){\n            setRegister_errors(errors);\n            return;\n        }\n\n        apiCall(\"/auth/register\", {\n            email : register_email,\n            password : register_password\n        }, (response, error) => {\n            console.log(\"REGISTER CALL RESPONSE\",response, error);\n            \n            if(response.data.token){\n                if(signIn({\n                    token: response.data.token,\n                    expiresIn: 86400,\n                    tokenType: \"Bearer\",\n                    authState: response.data.user,\n                })){\n                    navigate('/sheet/');        \n                }\n                \n            }\n        })\n\n\n    }\n\n    return (\n\n        <div className=\"login-container\">\n            <Wave fill='#7a7a7a2f'\n                paused={false}\n                options={{\n                height: 360,\n                amplitude: 40,\n                speed: 0.15,\n                points: 8\n                }}\n                style={{position : \"absolute\", bottom : '0px', top : '0px', zIndex : '2 !important'}}\n            />\n            <div className=\"sheet login\">\n                <Tabs tabPosition='bottom'>\n                    <Tabs.TabPane tab=\"Login\" key={1} >\n                        <Space direction='vertical' align='center' className='fields-container'>\n                        <h2 style={{textDecoration : \"underline\"}}>Login</h2>\n                        <Input onChange={(e) => setLogin_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\n                        <Input onChange={(e) => setLogin_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\n                        <a className='forgot-btn' href=\"#\">Forgot Password?</a>\n                        {login_errors.map((error, index) => {\n                            return (\n                                <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\n                            )\n                        })}\n                        <br></br>\n                        <Button type='primary' onClick={() => tryLogin()} icon={<LoginOutlined/>}>Login</Button>\n                        <br></br>\n                        </Space>\n                    </Tabs.TabPane>\n                    <Tabs.TabPane tab=\"Register\" key={2} >\n                        <Space direction='vertical' align='center' className='fields-container'>\n                            <h2 style={{textDecoration : \"underline\"}}>Register</h2>\n                            <Input onChange={(e) => setRegister_email(e.target.value)} type=\"email\" placeholder='Enter E-mail' prefix={<UserOutlined />} />\n                            <Input onChange={(e) => setRegister_password(e.target.value)} type=\"password\" placeholder='Enter password' prefix={<LockOutlined />} />\n                            <Input onChange={(e) => setRegister_password_confirm(e.target.value)} type=\"password\" placeholder='Confirm password' prefix={<LockOutlined />} />\n                            {register_errors.map((error, index) => {\n                                return (\n                                    <Alert icon={<ExclamationCircleOutlined />} showIcon style={{fontSize : \"0.8em\"}} message={error} key={index} type=\"error\" />\n                                )\n                            })}\n                            <br></br>\n                            <Button onClick={() => tryRegister()} type='primary' icon={<UserAddOutlined/>}>Register</Button>\n                            <br></br>\n                        </Space>\n                    </Tabs.TabPane>\n                </Tabs>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react'\nimport { Route, Routes } from \"react-router-dom\";\nimport Login from \"./Login\";\n\n\n// ReactDOM.render(<App />, document.getElementById('root'))\n\nexport default () => {\n    return (\n        <Routes>\n            <Route path=\"\" element={<Login/>} />\n        </Routes>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport SheetRoutes from './pages/sheets/SheetRoutes'\nimport AuthRoutes from './pages/auth/AuthRoutes'\n// ReactDOM.render(<App />, document.getElementById('root'))\nimport { AuthProvider, RequireAuth } from 'react-auth-kit'\n\nReactDOM.render(\n    \n    <AuthProvider\n        authType='cookie'\n        authName='_auth'\n        expiresIn={86400}\n        cookieDomain={window.location.hostname}\n        cookieSecure={window.location.protocol === \"https:\"}\n    >\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={ <AuthRoutes/> } />\n\n                <Route path=\"sheet/*\" element={\n                    <RequireAuth loginPath={'/'}>\n                        <SheetRoutes/>\n                    </RequireAuth>\n                }></Route>\n            </Routes>\n        </Router>\n    </AuthProvider>\n    ,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}