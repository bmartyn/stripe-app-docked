diff --git a/node_modules/node-mongoose-auth/models/User.js b/node_modules/node-mongoose-auth/models/User.js
index b4ea1f7..fcb1110 100644
--- a/node_modules/node-mongoose-auth/models/User.js
+++ b/node_modules/node-mongoose-auth/models/User.js
@@ -1,6 +1,12 @@
 const mongoose = require("mongoose");
 const UserSchema = require("./UserSchema");
 
+
+
+
+// mongoose.connect(MONGO_URI);
+
+
 /**
  * UserModel
  *
@@ -10,4 +16,9 @@ const UserSchema = require("./UserSchema");
  * importing the User Model or importing the authMiddleware.
  * */
 
+// module.exports = () => {
+    
+//     return mongoose.model("User", UserSchema);
+// };
+
 module.exports = mongoose.model("User", UserSchema);
\ No newline at end of file
diff --git a/node_modules/node-mongoose-auth/models/UserSchema.js b/node_modules/node-mongoose-auth/models/UserSchema.js
index 77efdd6..9025494 100644
--- a/node_modules/node-mongoose-auth/models/UserSchema.js
+++ b/node_modules/node-mongoose-auth/models/UserSchema.js
@@ -36,12 +36,12 @@ const UserSchema = mongoose.Schema(
   {
     firstName: {
       type: String,
-      required: true,
+      required: false,
       max: 25,
     },
     lastName: {
       type: String,
-      required: true,
+      required: false,
       max: 25,
     },
     email: {
@@ -55,7 +55,7 @@ const UserSchema = mongoose.Schema(
     sex: {
       type: String,
       enum: ["Male", "Female"],
-      required: true,
+      required: false,
     },
     mobile: {
       type: String,
@@ -101,6 +101,45 @@ const UserSchema = mongoose.Schema(
       type: Boolean,
       default: false,
     },
+    permissions: {
+      type : Map,
+      of : mongoose.Schema.Types.Mixed,
+      required : true,
+      default : {
+        //
+        // View Invoice
+        view_invoice : false,
+        // Handle Reports
+        access_reports : false,
+        reports : {
+          "balance_summary_1" : false,
+          "balance_change_from_activity_summary_1" : false,
+          "balance_change_from_activity_itemized_3" : false,
+          "payouts_summary_1" : false,
+          "payouts_itemized_3" : false,
+          "payout_reconciliation_summary_1" : false,
+          "payout_reconciliation_itemized_5" : false,
+          "ending_balance_reconciliation_summary_1" : false,
+        },
+        // Handle refunds
+        set_refund : false,
+        set_to_be_refund : false,
+        // Set permanent statuses.
+        set_paid : false,
+        set_invoiced_in_error : false,
+        set_waiver : false,
+        set_voucher : false,
+        set_refund : false,
+        set_uncollectible : false,
+        // Set temporary statuses.
+        set_to_be_paid : false,
+        set_to_be_invoiced_in_error : false,
+        set_to_be_waiver : false,
+        set_to_be_voucher : false,
+        set_to_be_refund : false,
+        set_to_be_uncollectible : false,
+      }
+    }
   },
   { timestamps: true }
 );
diff --git a/node_modules/node-mongoose-auth/routes/users.js b/node_modules/node-mongoose-auth/routes/users.js
index 999c7c3..606c60c 100644
--- a/node_modules/node-mongoose-auth/routes/users.js
+++ b/node_modules/node-mongoose-auth/routes/users.js
@@ -1,13 +1,22 @@
 const express = require("express");
 const User = require("../models/User");
 const auth = require("../auth");
+const mongoose = require("mongoose");
 
 const router = express.Router();
 
+const connectIfRequired = async () => {
+  const MONGO_URI = `mongodb://${process.env.MONGO_INITDB_ROOT_USERNAME}:${process.env.MONGO_INITDB_ROOT_PASSWORD}@${process.env.MONGO_SERVICE_HOST}:${process.env.MONGO_SERVICE_PORT}/${process.env.MONGO_INITDB_DATABASE}?authSource=admin`
+  if(mongoose.connection.readyState != 1) await mongoose.connect(MONGO_URI, {useNewUrlParser: true, useUnifiedTopology: true});
+  return;
+}
+
 router.post("/register", async (req, res) => {
+  await connectIfRequired();
   const { firstName, lastName, email, password, birthDate, age, sex, mobile, about, address } = req.body;
 
   try {
+    // console.log(UserSchema);
     const user = await new User({
       firstName,
       lastName,
@@ -21,6 +30,8 @@ router.post("/register", async (req, res) => {
       about: about || "",
     }).save();
 
+    
+
     await auth.setPassword(user, password);
     await user.save();
 
@@ -34,6 +45,7 @@ router.post("/register", async (req, res) => {
 
 
 router.post("/login", async (req, res) => {
+  await connectIfRequired();
   const { email, password } = req.body;
   
   const user = await User.findOne({ email });
